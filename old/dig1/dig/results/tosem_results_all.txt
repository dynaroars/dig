+--------------------------------------------------------------------+
| Sage Version 5.10, Release Date: 2013-06-17                        |
| Type "notebook()" for the browser-based notebook interface.        |
| Type "help()" for help.                                            |
+--------------------------------------------------------------------+

sage: sols = benchmark_dir('../invgen/Traces/NLA_tosem/multilocs/l0/', inv_typ='eqt', runs=20,use_specific_deg=True); 

********** BEGIN BENCHMARK **********
Invariant Type: eqt
Trace Directory: ../invgen/Traces/NLA_tosem/multilocs/l0/
Number of runs for each trace file: 20
********** *************** **********



***** (0) Generate invs from file 'cohencu.l0.tcs' *****

dig:Info:2013-06-24 18:05:11.808048, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 500499
1. vs: [a, nvu, x, y, z]
2. xinfo: 
 0. All: ['a', 'nvu', 'x', 'y', 'z']
 1. Assume: []
 2. Const: []
 3. Expect: ['n^3 = x', '6n + 6 = z', 'y = 3n^2 + 3n + 1']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/cohencu.l0.tcs", |vs|=5, deg=4, |terms|=126

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=500499
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/500499 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 91 invs
refine:Debug:rfilter(|ps|=91, |tcs|=1000)
refine:Debug:rfilter (before 91, after 91, diff 0)
refine:Debug:rinfer(|ps|=91)
refine:Debug:rinfer (before 91, after 3, diff 88)
dig:Info:Detected invariants for Eqt:
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
44.3449058533

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=500499
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/500499 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 91 invs
refine:Debug:rfilter(|ps|=91, |tcs|=1000)
refine:Debug:rfilter (before 91, after 91, diff 0)
refine:Debug:rinfer(|ps|=91)
refine:Debug:rinfer (before 91, after 3, diff 88)
dig:Info:Detected invariants for Eqt:
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
43.1328029633

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=500499
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/500499 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 91 invs
refine:Debug:rfilter(|ps|=91, |tcs|=1000)
refine:Debug:rfilter (before 91, after 91, diff 0)
refine:Debug:rinfer(|ps|=91)
refine:Debug:rinfer (before 91, after 3, diff 88)
dig:Info:Detected invariants for Eqt:
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
39.3852040768

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=500499
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/500499 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 91 invs
refine:Debug:rfilter(|ps|=91, |tcs|=1000)
refine:Debug:rfilter (before 91, after 91, diff 0)
refine:Debug:rinfer(|ps|=91)
refine:Debug:rinfer (before 91, after 3, diff 88)
dig:Info:Detected invariants for Eqt:
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
39.1571011543

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=500499
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/500499 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 91 invs
refine:Debug:rfilter(|ps|=91, |tcs|=1000)
refine:Debug:rfilter (before 91, after 91, diff 0)
refine:Debug:rinfer(|ps|=91)
refine:Debug:rinfer (before 91, after 3, diff 88)
dig:Info:Detected invariants for Eqt:
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
39.0637760162

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=500499
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/500499 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 91 invs
refine:Debug:rfilter(|ps|=91, |tcs|=1000)
refine:Debug:rfilter (before 91, after 91, diff 0)
refine:Debug:rinfer(|ps|=91)
refine:Debug:rinfer (before 91, after 3, diff 88)
dig:Info:Detected invariants for Eqt:
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
39.1969339848

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=500499
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/500499 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 91 invs
refine:Debug:rfilter(|ps|=91, |tcs|=1000)
refine:Debug:rfilter (before 91, after 91, diff 0)
refine:Debug:rinfer(|ps|=91)
refine:Debug:rinfer (before 91, after 3, diff 88)
dig:Info:Detected invariants for Eqt:
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
39.2211120129

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=500499
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/500499 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 91 invs
refine:Debug:rfilter(|ps|=91, |tcs|=1000)
refine:Debug:rfilter (before 91, after 91, diff 0)
refine:Debug:rinfer(|ps|=91)
refine:Debug:rinfer (before 91, after 3, diff 88)
dig:Info:Detected invariants for Eqt:
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
39.1613109112

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=500499
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/500499 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 91 invs
refine:Debug:rfilter(|ps|=91, |tcs|=1000)
refine:Debug:rfilter (before 91, after 91, diff 0)
refine:Debug:rinfer(|ps|=91)
refine:Debug:rinfer (before 91, after 3, diff 88)
dig:Info:Detected invariants for Eqt:
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
38.7899839878

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=500499
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/500499 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 91 invs
refine:Debug:rfilter(|ps|=91, |tcs|=1000)
refine:Debug:rfilter (before 91, after 91, diff 0)
refine:Debug:rinfer(|ps|=91)
refine:Debug:rinfer (before 91, after 3, diff 88)
dig:Info:Detected invariants for Eqt:
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
38.8496470451

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=500499
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/500499 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 91 invs
refine:Debug:rfilter(|ps|=91, |tcs|=1000)
refine:Debug:rfilter (before 91, after 91, diff 0)
refine:Debug:rinfer(|ps|=91)
refine:Debug:rinfer (before 91, after 3, diff 88)
dig:Info:Detected invariants for Eqt:
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
38.9971828461

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=500499
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/500499 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 91 invs
refine:Debug:rfilter(|ps|=91, |tcs|=1000)
refine:Debug:rfilter (before 91, after 91, diff 0)
refine:Debug:rinfer(|ps|=91)
refine:Debug:rinfer (before 91, after 3, diff 88)
dig:Info:Detected invariants for Eqt:
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
38.7386648655

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=500499
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/500499 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 91 invs
refine:Debug:rfilter(|ps|=91, |tcs|=1000)
refine:Debug:rfilter (before 91, after 91, diff 0)
refine:Debug:rinfer(|ps|=91)
refine:Debug:rinfer (before 91, after 3, diff 88)
dig:Info:Detected invariants for Eqt:
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
38.9494590759

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=500499
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/500499 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 91 invs
refine:Debug:rfilter(|ps|=91, |tcs|=1000)
refine:Debug:rfilter (before 91, after 91, diff 0)
refine:Debug:rinfer(|ps|=91)
refine:Debug:rinfer (before 91, after 3, diff 88)
dig:Info:Detected invariants for Eqt:
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
38.817636013

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=500499
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/500499 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 91 invs
refine:Debug:rfilter(|ps|=91, |tcs|=1000)
refine:Debug:rfilter (before 91, after 91, diff 0)
refine:Debug:rinfer(|ps|=91)
refine:Debug:rinfer (before 91, after 3, diff 88)
dig:Info:Detected invariants for Eqt:
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
38.70835495

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=500499
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/500499 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 91 invs
refine:Debug:rfilter(|ps|=91, |tcs|=1000)
refine:Debug:rfilter (before 91, after 91, diff 0)
refine:Debug:rinfer(|ps|=91)
refine:Debug:rinfer (before 91, after 3, diff 88)
dig:Info:Detected invariants for Eqt:
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
39.6725211143

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=500499
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/500499 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 91 invs
refine:Debug:rfilter(|ps|=91, |tcs|=1000)
refine:Debug:rfilter (before 91, after 91, diff 0)
refine:Debug:rinfer(|ps|=91)
refine:Debug:rinfer (before 91, after 3, diff 88)
dig:Info:Detected invariants for Eqt:
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
38.7621109486

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=500499
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/500499 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 91 invs
refine:Debug:rfilter(|ps|=91, |tcs|=1000)
refine:Debug:rfilter (before 91, after 91, diff 0)
refine:Debug:rinfer(|ps|=91)
refine:Debug:rinfer (before 91, after 3, diff 88)
dig:Info:Detected invariants for Eqt:
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
38.7287220955

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=500499
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/500499 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 91 invs
refine:Debug:rfilter(|ps|=91, |tcs|=1000)
refine:Debug:rfilter (before 91, after 91, diff 0)
refine:Debug:rinfer(|ps|=91)
refine:Debug:rinfer (before 91, after 3, diff 88)
dig:Info:Detected invariants for Eqt:
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
38.637169838

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=500499
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/500499 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 91 invs
refine:Debug:rfilter(|ps|=91, |tcs|=1000)
refine:Debug:rfilter (before 91, after 91, diff 0)
refine:Debug:rinfer(|ps|=91)
refine:Debug:rinfer (before 91, after 3, diff 88)
dig:Info:Detected invariants for Eqt:
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
38.7114498615


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/cohencu.l0.tcs'
Expect (3): n^3 = x, 6n + 6 = z, y = 3n^2 + 3n + 1
* Run 0, time 44.3449058533, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 1, time 43.1328029633, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 2, time 39.3852040768, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 3, time 39.1571011543, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 4, time 39.0637760162, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 5, time 39.1969339848, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 6, time 39.2211120129, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 7, time 39.1613109112, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 8, time 38.7899839878, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 9, time 38.8496470451, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 10, time 38.9971828461, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 11, time 38.7386648655, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 12, time 38.9494590759, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 13, time 38.817636013, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 14, time 38.70835495, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 15, time 39.6725211143, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 16, time 38.7621109486, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 17, time 38.7287220955, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 18, time 38.637169838, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 19, time 38.7114498615, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
TIME AVG 39.5 (../invgen/Traces/NLA_tosem/multilocs/l0/cohencu.l0.tcs)


***** (1) Generate invs from file 'cohendiv.l0.tcs' *****

dig:Info:2013-06-24 18:18:48.431916, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 1314
1. vs: [a, b, q, rvu, x, y]
2. xinfo: 
 0. All: ['a', 'b', 'q', 'rvu', 'x', 'y']
 1. Assume: [rvu >= 2*b]
 2. Const: []
 3. Expect: ['b = ay', 'x = qy+r', 'rvu >= 2*y*a']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/cohendiv.l0.tcs", |vs|=6, deg=3, |terms|=84

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1314
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1314 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: a*y - b == 0
  1: q*y + rvu - x == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=1, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=1,|eqts|=2)
inv_polynomials:Debug:assumed ps: -2*b + rvu >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: -2*a*y + rvu >= 0
  1: -q*y - 2*b + x >= 0
8.29320883751

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1314
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1314 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: a*y - b == 0
  1: q*y + rvu - x == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=1, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=1,|eqts|=2)
inv_polynomials:Debug:assumed ps: -2*b + rvu >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: -2*a*y + rvu >= 0
  1: -q*y - 2*b + x >= 0
8.2509739399

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1314
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1314 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: a*y - b == 0
  1: q*y + rvu - x == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=1, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=1,|eqts|=2)
inv_polynomials:Debug:assumed ps: -2*b + rvu >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: -2*a*y + rvu >= 0
  1: -q*y - 2*b + x >= 0
8.19527697563

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1314
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1314 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 30 invs
refine:Debug:rfilter(|ps|=30, |tcs|=1000)
refine:Debug:rfilter (before 30, after 18, diff 12)
refine:Debug:rinfer(|ps|=18)
refine:Debug:rinfer (before 18, after 2, diff 16)
dig:Info:Detected invariants for Eqt:
  0: a*y - b == 0
  1: q*y + rvu - x == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=1, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=1,|eqts|=2)
inv_polynomials:Debug:assumed ps: -2*b + rvu >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: -2*a*y + rvu >= 0
  1: -q*y - 2*b + x >= 0
8.70844697952

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1314
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1314 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 19, diff 2)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: a*y - b == 0
  1: q*y + rvu - x == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=1, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=1,|eqts|=2)
inv_polynomials:Debug:assumed ps: -2*b + rvu >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: -2*a*y + rvu >= 0
  1: -q*y - 2*b + x >= 0
8.79945588112

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1314
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1314 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 26 invs
refine:Debug:rfilter(|ps|=26, |tcs|=1000)
refine:Debug:rfilter (before 26, after 17, diff 9)
refine:Debug:rinfer(|ps|=17)
refine:Debug:rinfer (before 17, after 2, diff 15)
dig:Info:Detected invariants for Eqt:
  0: a*y - b == 0
  1: q*y + rvu - x == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=1, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=1,|eqts|=2)
inv_polynomials:Debug:assumed ps: -2*b + rvu >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: -2*a*y + rvu >= 0
  1: -q*y - 2*b + x >= 0
8.13371181488

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1314
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1314 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 24 invs
refine:Debug:rfilter(|ps|=24, |tcs|=1000)
refine:Debug:rfilter (before 24, after 19, diff 5)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: a*y - b == 0
  1: q*y + rvu - x == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=1, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=1,|eqts|=2)
inv_polynomials:Debug:assumed ps: -2*b + rvu >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: -2*a*y + rvu >= 0
  1: -q*y - 2*b + x >= 0
9.11923289299

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1314
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1314 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 22 invs
refine:Debug:rfilter(|ps|=22, |tcs|=1000)
refine:Debug:rfilter (before 22, after 19, diff 3)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: a*y - b == 0
  1: q*y + rvu - x == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=1, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=1,|eqts|=2)
inv_polynomials:Debug:assumed ps: -2*b + rvu >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: -2*a*y + rvu >= 0
  1: -q*y - 2*b + x >= 0
8.18550419807

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1314
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1314 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: a*y - b == 0
  1: q*y + rvu - x == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=1, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=1,|eqts|=2)
inv_polynomials:Debug:assumed ps: -2*b + rvu >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: -2*a*y + rvu >= 0
  1: -q*y - 2*b + x >= 0
8.27663207054

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1314
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1314 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 19, diff 1)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: a*y - b == 0
  1: q*y + rvu - x == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=1, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=1,|eqts|=2)
inv_polynomials:Debug:assumed ps: -2*b + rvu >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: -2*a*y + rvu >= 0
  1: -q*y - 2*b + x >= 0
8.67386507988

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1314
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1314 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 28 invs
refine:Debug:rfilter(|ps|=28, |tcs|=1000)
refine:Debug:rfilter (before 28, after 18, diff 10)
refine:Debug:rinfer(|ps|=18)
refine:Debug:rinfer (before 18, after 2, diff 16)
dig:Info:Detected invariants for Eqt:
  0: a*y - b == 0
  1: q*y + rvu - x == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=1, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=1,|eqts|=2)
inv_polynomials:Debug:assumed ps: -2*b + rvu >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: -2*a*y + rvu >= 0
  1: -q*y - 2*b + x >= 0
8.81365203857

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1314
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1314 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 19, diff 1)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: a*y - b == 0
  1: q*y + rvu - x == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=1, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=1,|eqts|=2)
inv_polynomials:Debug:assumed ps: -2*b + rvu >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: -2*a*y + rvu >= 0
  1: -q*y - 2*b + x >= 0
8.32812786102

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1314
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1314 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 26 invs
refine:Debug:rfilter(|ps|=26, |tcs|=1000)
refine:Debug:rfilter (before 26, after 19, diff 7)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: a*y - b == 0
  1: q*y + rvu - x == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=1, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=1,|eqts|=2)
inv_polynomials:Debug:assumed ps: -2*b + rvu >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: -2*a*y + rvu >= 0
  1: -q*y - 2*b + x >= 0
8.98565101624

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1314
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1314 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: a*y - b == 0
  1: q*y + rvu - x == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=1, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=1,|eqts|=2)
inv_polynomials:Debug:assumed ps: -2*b + rvu >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: -2*a*y + rvu >= 0
  1: -q*y - 2*b + x >= 0
8.31996202469

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1314
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1314 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 19, diff 2)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: a*y - b == 0
  1: q*y + rvu - x == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=1, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=1,|eqts|=2)
inv_polynomials:Debug:assumed ps: -2*b + rvu >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: -2*a*y + rvu >= 0
  1: -q*y - 2*b + x >= 0
8.82247304916

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1314
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1314 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: a*y - b == 0
  1: q*y + rvu - x == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=1, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=1,|eqts|=2)
inv_polynomials:Debug:assumed ps: -2*b + rvu >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: -2*a*y + rvu >= 0
  1: -q*y - 2*b + x >= 0
8.27663588524

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1314
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1314 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 29 invs
refine:Debug:rfilter(|ps|=29, |tcs|=1000)
refine:Debug:rfilter (before 29, after 18, diff 11)
refine:Debug:rinfer(|ps|=18)
refine:Debug:rinfer (before 18, after 2, diff 16)
dig:Info:Detected invariants for Eqt:
  0: a*y - b == 0
  1: q*y + rvu - x == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=1, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=1,|eqts|=2)
inv_polynomials:Debug:assumed ps: -2*b + rvu >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: -2*a*y + rvu >= 0
  1: -q*y - 2*b + x >= 0
8.68018698692

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1314
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1314 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 19, diff 2)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: a*y - b == 0
  1: q*y + rvu - x == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=1, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=1,|eqts|=2)
inv_polynomials:Debug:assumed ps: -2*b + rvu >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: -2*a*y + rvu >= 0
  1: -q*y - 2*b + x >= 0
8.84892392159

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1314
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1314 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: a*y - b == 0
  1: q*y + rvu - x == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=1, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=1,|eqts|=2)
inv_polynomials:Debug:assumed ps: -2*b + rvu >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: -2*a*y + rvu >= 0
  1: -q*y - 2*b + x >= 0
8.21914100647

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1314
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1314 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 30 invs
refine:Debug:rfilter(|ps|=30, |tcs|=1000)
refine:Debug:rfilter (before 30, after 18, diff 12)
refine:Debug:rinfer(|ps|=18)
refine:Debug:rinfer (before 18, after 2, diff 16)
dig:Info:Detected invariants for Eqt:
  0: a*y - b == 0
  1: q*y + rvu - x == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=1, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=1,|eqts|=2)
inv_polynomials:Debug:assumed ps: -2*b + rvu >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: -2*a*y + rvu >= 0
  1: -q*y - 2*b + x >= 0
8.73975396156


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/cohendiv.l0.tcs'
Expect (3): b = ay, x = qy+r, rvu >= 2*y*a
* Run 0, time 8.29320883751, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 1, time 8.2509739399, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 2, time 8.19527697563, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 3, time 8.70844697952, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 4, time 8.79945588112, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 5, time 8.13371181488, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 6, time 9.11923289299, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 7, time 8.18550419807, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 8, time 8.27663207054, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 9, time 8.67386507988, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 10, time 8.81365203857, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 11, time 8.32812786102, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 12, time 8.98565101624, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 13, time 8.31996202469, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 14, time 8.82247304916, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 15, time 8.27663588524, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 16, time 8.68018698692, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 17, time 8.84892392159, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 18, time 8.21914100647, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 19, time 8.73975396156, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
TIME AVG 8.5 (../invgen/Traces/NLA_tosem/multilocs/l0/cohendiv.l0.tcs)


***** (2) Generate invs from file 'dijkstra.l0.tcs' *****

dig:Info:2013-06-24 18:21:39.248324, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 6138
1. vs: [h, nvu, p, q, rvu]
2. xinfo: 
 0. All: ['h', 'nvu', 'p', 'q', 'rvu']
 1. Assume: []
 2. Const: []
 3. Expect: ['nq = p^2 + qr']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/dijkstra.l0.tcs", |vs|=5, deg=4, |terms|=126

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=6138
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/6138 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 4, diff 31)
dig:Info:Detected invariants for Eqt:
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
30.6700081825

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=6138
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/6138 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 4, diff 31)
dig:Info:Detected invariants for Eqt:
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
30.5423550606

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=6138
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/6138 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 4, diff 31)
dig:Info:Detected invariants for Eqt:
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
29.728482008

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=6138
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/6138 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 4, diff 31)
dig:Info:Detected invariants for Eqt:
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
30.2286841869

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=6138
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/6138 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 4, diff 31)
dig:Info:Detected invariants for Eqt:
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
28.9064958096

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=6138
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/6138 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 4, diff 31)
dig:Info:Detected invariants for Eqt:
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
30.162749052

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=6138
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/6138 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 4, diff 31)
dig:Info:Detected invariants for Eqt:
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
30.4716949463

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=6138
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/6138 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 4, diff 31)
dig:Info:Detected invariants for Eqt:
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
30.6542570591

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=6138
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/6138 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 4, diff 31)
dig:Info:Detected invariants for Eqt:
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
31.3046851158

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=6138
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/6138 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 4, diff 31)
dig:Info:Detected invariants for Eqt:
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
33.0081708431

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=6138
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/6138 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 4, diff 31)
dig:Info:Detected invariants for Eqt:
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
33.4050281048

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=6138
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/6138 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 4, diff 31)
dig:Info:Detected invariants for Eqt:
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
30.0030829906

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=6138
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/6138 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 4, diff 31)
dig:Info:Detected invariants for Eqt:
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
31.6048967838

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=6138
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/6138 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 4, diff 31)
dig:Info:Detected invariants for Eqt:
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
32.0636692047

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=6138
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/6138 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 36 invs
refine:Debug:rfilter(|ps|=36, |tcs|=1000)
refine:Debug:rfilter (before 36, after 35, diff 1)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 4, diff 31)
dig:Info:Detected invariants for Eqt:
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
33.6350960732

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=6138
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/6138 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 4, diff 31)
dig:Info:Detected invariants for Eqt:
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
32.3040111065

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=6138
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/6138 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 4, diff 31)
dig:Info:Detected invariants for Eqt:
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
32.0748541355

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=6138
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/6138 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 4, diff 31)
dig:Info:Detected invariants for Eqt:
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
32.1242468357

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=6138
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/6138 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 4, diff 31)
dig:Info:Detected invariants for Eqt:
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
32.042440176

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=6138
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/6138 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 4, diff 31)
dig:Info:Detected invariants for Eqt:
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
32.4505131245


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/dijkstra.l0.tcs'
Expect (1): nq = p^2 + qr
* Run 0, time 30.6700081825, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 1, time 30.5423550606, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 2, time 29.728482008, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 3, time 30.2286841869, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 4, time 28.9064958096, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 5, time 30.162749052, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 6, time 30.4716949463, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 7, time 30.6542570591, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 8, time 31.3046851158, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 9, time 33.0081708431, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 10, time 33.4050281048, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 11, time 30.0030829906, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 12, time 31.6048967838, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 13, time 32.0636692047, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 14, time 33.6350960732, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 15, time 32.3040111065, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 16, time 32.0748541355, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 17, time 32.1242468357, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 18, time 32.042440176, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 19, time 32.4505131245, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
TIME AVG 31.4 (../invgen/Traces/NLA_tosem/multilocs/l0/dijkstra.l0.tcs)


***** (3) Generate invs from file 'divbin.l0.tcs' *****

dig:Info:2013-06-24 18:32:06.920384, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 1962
1. vs: [A, B, b, q, rvu]
2. xinfo: 
 0. All: ['A', 'B', 'b', 'q', 'rvu']
 1. Assume: []
 2. Const: []
 3. Expect: ['bq-a+r = 0']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/divbin.l0.tcs", |vs|=5, deg=4, |terms|=126

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=1962
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/1962 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 23 invs
refine:Debug:rfilter(|ps|=23, |tcs|=1000)
refine:Debug:rfilter (before 23, after 21, diff 2)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: b*q - A + rvu == 0
28.4325771332

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=1962
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/1962 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: b*q - A + rvu == 0
25.5466070175

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=1962
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/1962 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: b*q - A + rvu == 0
25.7948131561

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=1962
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/1962 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: b*q - A + rvu == 0
26.8699598312

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=1962
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/1962 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: b*q - A + rvu == 0
26.8449380398

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=1962
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/1962 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: b*q - A + rvu == 0
27.4813899994

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=1962
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/1962 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: b*q - A + rvu == 0
27.5890378952

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=1962
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/1962 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: b*q - A + rvu == 0
27.7571930885

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=1962
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/1962 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: b*q - A + rvu == 0
28.1059811115

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=1962
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/1962 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: b*q - A + rvu == 0
27.2833390236

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=1962
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/1962 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: b*q - A + rvu == 0
27.3002650738

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=1962
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/1962 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: b*q - A + rvu == 0
26.1928730011

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=1962
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/1962 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: b*q - A + rvu == 0
26.2553050518

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=1962
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/1962 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: b*q - A + rvu == 0
28.921587944

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=1962
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/1962 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: b*q - A + rvu == 0
26.0742681026

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=1962
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/1962 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: b*q - A + rvu == 0
30.0266699791

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=1962
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/1962 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: b*q - A + rvu == 0
27.477175951

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=1962
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/1962 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: b*q - A + rvu == 0
24.1162781715

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=1962
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/1962 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: b*q - A + rvu == 0
25.6629829407

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=1962
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/1962 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: b*q - A + rvu == 0
26.3398430347


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/divbin.l0.tcs'
Expect (1): bq-a+r = 0
* Run 0, time 28.4325771332, deg 4
  0: b*q - A + rvu == 0
* Run 1, time 25.5466070175, deg 4
  0: b*q - A + rvu == 0
* Run 2, time 25.7948131561, deg 4
  0: b*q - A + rvu == 0
* Run 3, time 26.8699598312, deg 4
  0: b*q - A + rvu == 0
* Run 4, time 26.8449380398, deg 4
  0: b*q - A + rvu == 0
* Run 5, time 27.4813899994, deg 4
  0: b*q - A + rvu == 0
* Run 6, time 27.5890378952, deg 4
  0: b*q - A + rvu == 0
* Run 7, time 27.7571930885, deg 4
  0: b*q - A + rvu == 0
* Run 8, time 28.1059811115, deg 4
  0: b*q - A + rvu == 0
* Run 9, time 27.2833390236, deg 4
  0: b*q - A + rvu == 0
* Run 10, time 27.3002650738, deg 4
  0: b*q - A + rvu == 0
* Run 11, time 26.1928730011, deg 4
  0: b*q - A + rvu == 0
* Run 12, time 26.2553050518, deg 4
  0: b*q - A + rvu == 0
* Run 13, time 28.921587944, deg 4
  0: b*q - A + rvu == 0
* Run 14, time 26.0742681026, deg 4
  0: b*q - A + rvu == 0
* Run 15, time 30.0266699791, deg 4
  0: b*q - A + rvu == 0
* Run 16, time 27.477175951, deg 4
  0: b*q - A + rvu == 0
* Run 17, time 24.1162781715, deg 4
  0: b*q - A + rvu == 0
* Run 18, time 25.6629829407, deg 4
  0: b*q - A + rvu == 0
* Run 19, time 26.3398430347, deg 4
  0: b*q - A + rvu == 0
TIME AVG 27.0 (../invgen/Traces/NLA_tosem/multilocs/l0/divbin.l0.tcs)


***** (4) Generate invs from file 'euclidex1.l0.tcs' *****

dig:Info:2013-06-24 18:41:07.227121, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 108527
1. vs: [a, b, p, q, rvu, s, x, y]
2. xinfo: 
 0. All: ['a', 'b', 'p', 'q', 'rvu', 's', 'x', 'y']
 1. Assume: []
 2. Const: []
 3. Expect: ['a = kb+c', 'a = yr+xp', 'b = x*q+y*s']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/euclidex1.l0.tcs", |vs|=8, deg=3, |terms|=165

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=108527
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/108527 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 40, diff 0)
refine:Debug:rinfer(|ps|=40)
refine:Debug:rinfer (before 40, after 3, diff 37)
dig:Info:Detected invariants for Eqt:
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
56.9743340015

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=108527
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/108527 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 40, diff 0)
refine:Debug:rinfer(|ps|=40)
refine:Debug:rinfer (before 40, after 3, diff 37)
dig:Info:Detected invariants for Eqt:
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
57.1991930008

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=108527
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/108527 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 40, diff 0)
refine:Debug:rinfer(|ps|=40)
refine:Debug:rinfer (before 40, after 3, diff 37)
dig:Info:Detected invariants for Eqt:
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
54.8016281128

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=108527
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/108527 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 40, diff 0)
refine:Debug:rinfer(|ps|=40)
refine:Debug:rinfer (before 40, after 3, diff 37)
dig:Info:Detected invariants for Eqt:
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
53.6258540154

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=108527
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/108527 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 40, diff 0)
refine:Debug:rinfer(|ps|=40)
refine:Debug:rinfer (before 40, after 3, diff 37)
dig:Info:Detected invariants for Eqt:
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
55.3222980499

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=108527
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/108527 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 40, diff 0)
refine:Debug:rinfer(|ps|=40)
refine:Debug:rinfer (before 40, after 3, diff 37)
dig:Info:Detected invariants for Eqt:
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
55.8070178032

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=108527
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/108527 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 40, diff 0)
refine:Debug:rinfer(|ps|=40)
refine:Debug:rinfer (before 40, after 3, diff 37)
dig:Info:Detected invariants for Eqt:
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
52.6481950283

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=108527
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/108527 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 40, diff 0)
refine:Debug:rinfer(|ps|=40)
refine:Debug:rinfer (before 40, after 3, diff 37)
dig:Info:Detected invariants for Eqt:
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
54.7309989929

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=108527
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/108527 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 40, diff 0)
refine:Debug:rinfer(|ps|=40)
refine:Debug:rinfer (before 40, after 3, diff 37)
dig:Info:Detected invariants for Eqt:
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
53.1167299747

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=108527
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/108527 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 40, diff 0)
refine:Debug:rinfer(|ps|=40)
refine:Debug:rinfer (before 40, after 3, diff 37)
dig:Info:Detected invariants for Eqt:
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
53.5986530781

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=108527
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/108527 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 40, diff 0)
refine:Debug:rinfer(|ps|=40)
refine:Debug:rinfer (before 40, after 3, diff 37)
dig:Info:Detected invariants for Eqt:
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
55.4166059494

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=108527
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/108527 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 40, diff 0)
refine:Debug:rinfer(|ps|=40)
refine:Debug:rinfer (before 40, after 3, diff 37)
dig:Info:Detected invariants for Eqt:
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
52.8086688519

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=108527
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/108527 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 40, diff 0)
refine:Debug:rinfer(|ps|=40)
refine:Debug:rinfer (before 40, after 3, diff 37)
dig:Info:Detected invariants for Eqt:
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
55.4451179504

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=108527
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/108527 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 40, diff 0)
refine:Debug:rinfer(|ps|=40)
refine:Debug:rinfer (before 40, after 3, diff 37)
dig:Info:Detected invariants for Eqt:
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
51.278993845

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=108527
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/108527 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 40, diff 0)
refine:Debug:rinfer(|ps|=40)
refine:Debug:rinfer (before 40, after 3, diff 37)
dig:Info:Detected invariants for Eqt:
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
54.0719847679

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=108527
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/108527 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 40, diff 0)
refine:Debug:rinfer(|ps|=40)
refine:Debug:rinfer (before 40, after 3, diff 37)
dig:Info:Detected invariants for Eqt:
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
51.9225199223

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=108527
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/108527 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 40, diff 0)
refine:Debug:rinfer(|ps|=40)
refine:Debug:rinfer (before 40, after 3, diff 37)
dig:Info:Detected invariants for Eqt:
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
53.0496220589

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=108527
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/108527 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 40, diff 0)
refine:Debug:rinfer(|ps|=40)
refine:Debug:rinfer (before 40, after 3, diff 37)
dig:Info:Detected invariants for Eqt:
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
51.6500749588

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=108527
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/108527 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 40, diff 0)
refine:Debug:rinfer(|ps|=40)
refine:Debug:rinfer (before 40, after 3, diff 37)
dig:Info:Detected invariants for Eqt:
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
54.501470089

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=108527
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/108527 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 40, diff 0)
refine:Debug:rinfer(|ps|=40)
refine:Debug:rinfer (before 40, after 3, diff 37)
dig:Info:Detected invariants for Eqt:
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
50.654706955


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/euclidex1.l0.tcs'
Expect (3): a = kb+c, a = yr+xp, b = x*q+y*s
* Run 0, time 56.9743340015, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 1, time 57.1991930008, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 2, time 54.8016281128, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 3, time 53.6258540154, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 4, time 55.3222980499, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 5, time 55.8070178032, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 6, time 52.6481950283, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 7, time 54.7309989929, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 8, time 53.1167299747, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 9, time 53.5986530781, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 10, time 55.4166059494, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 11, time 52.8086688519, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 12, time 55.4451179504, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 13, time 51.278993845, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 14, time 54.0719847679, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 15, time 51.9225199223, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 16, time 53.0496220589, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 17, time 51.6500749588, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 18, time 54.501470089, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 19, time 50.654706955, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
TIME AVG 53.9 (../invgen/Traces/NLA_tosem/multilocs/l0/euclidex1.l0.tcs)


***** (5) Generate invs from file 'euclidex2.l0.tcs' *****

dig:Info:2013-06-24 18:59:14.311440, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 114449
1. vs: [a, b, c, k, p, q, rvu, s, x, y]
2. xinfo: 
 0. All: ['a', 'b', 'c', 'k', 'p', 'q', 'rvu', 's', 'x', 'y']
 1. Assume: []
 2. Const: []
 3. Expect: ['a = yr + xp', 'b = xq + ys']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/euclidex2.l0.tcs", |vs|=10, deg=2, |terms|=66

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=66, |tcs|=114449
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=99, |tcs2|=1000 (attempted 99/114449 tcs)
dig:Info:Compute invs over 99 tcs
dig_miscs:Debug:Create equations from 99 traces
dig_miscs:Debug:Solve 99 (uniq) eqts for 66 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 3, diff 4)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
4.36025094986

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=66, |tcs|=114449
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=99, |tcs2|=1000 (attempted 99/114449 tcs)
dig:Info:Compute invs over 99 tcs
dig_miscs:Debug:Create equations from 99 traces
dig_miscs:Debug:Solve 99 (uniq) eqts for 66 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 3, diff 2)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
4.15814900398

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=66, |tcs|=114449
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=99, |tcs2|=1000 (attempted 99/114449 tcs)
dig:Info:Compute invs over 99 tcs
dig_miscs:Debug:Create equations from 99 traces
dig_miscs:Debug:Solve 99 (uniq) eqts for 66 unknowns
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=1000)
refine:Debug:rfilter (before 3, after 3, diff 0)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
3.67043590546

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=66, |tcs|=114449
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=99, |tcs2|=1000 (attempted 99/114449 tcs)
dig:Info:Compute invs over 99 tcs
dig_miscs:Debug:Create equations from 99 traces
dig_miscs:Debug:Solve 99 (uniq) eqts for 66 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 3, diff 7)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
4.46136593819

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=66, |tcs|=114449
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=99, |tcs2|=1000 (attempted 99/114449 tcs)
dig:Info:Compute invs over 99 tcs
dig_miscs:Debug:Create equations from 99 traces
dig_miscs:Debug:Solve 99 (uniq) eqts for 66 unknowns
dig:Info:Refine 8 invs
refine:Debug:rfilter(|ps|=8, |tcs|=1000)
refine:Debug:rfilter (before 8, after 3, diff 5)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
4.31414198875

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=66, |tcs|=114449
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=99, |tcs2|=1000 (attempted 99/114449 tcs)
dig:Info:Compute invs over 99 tcs
dig_miscs:Debug:Create equations from 99 traces
dig_miscs:Debug:Solve 99 (uniq) eqts for 66 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 3, diff 2)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
4.08072900772

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=66, |tcs|=114449
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=99, |tcs2|=1000 (attempted 99/114449 tcs)
dig:Info:Compute invs over 99 tcs
dig_miscs:Debug:Create equations from 99 traces
dig_miscs:Debug:Solve 99 (uniq) eqts for 66 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 3, diff 4)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
4.32459902763

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=66, |tcs|=114449
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=99, |tcs2|=1000 (attempted 99/114449 tcs)
dig:Info:Compute invs over 99 tcs
dig_miscs:Debug:Create equations from 99 traces
dig_miscs:Debug:Solve 99 (uniq) eqts for 66 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 3, diff 7)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
4.51878714561

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=66, |tcs|=114449
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=99, |tcs2|=1000 (attempted 99/114449 tcs)
dig:Info:Compute invs over 99 tcs
dig_miscs:Debug:Create equations from 99 traces
dig_miscs:Debug:Solve 99 (uniq) eqts for 66 unknowns
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=1000)
refine:Debug:rfilter (before 3, after 3, diff 0)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
3.55826187134

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=66, |tcs|=114449
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=99, |tcs2|=1000 (attempted 99/114449 tcs)
dig:Info:Compute invs over 99 tcs
dig_miscs:Debug:Create equations from 99 traces
dig_miscs:Debug:Solve 99 (uniq) eqts for 66 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 3, diff 2)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
4.06438994408

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=66, |tcs|=114449
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=99, |tcs2|=1000 (attempted 99/114449 tcs)
dig:Info:Compute invs over 99 tcs
dig_miscs:Debug:Create equations from 99 traces
dig_miscs:Debug:Solve 99 (uniq) eqts for 66 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 3, diff 7)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
4.4374730587

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=66, |tcs|=114449
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=99, |tcs2|=1000 (attempted 99/114449 tcs)
dig:Info:Compute invs over 99 tcs
dig_miscs:Debug:Create equations from 99 traces
dig_miscs:Debug:Solve 99 (uniq) eqts for 66 unknowns
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=1000)
refine:Debug:rfilter (before 3, after 3, diff 0)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
3.58968114853

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=66, |tcs|=114449
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=99, |tcs2|=1000 (attempted 99/114449 tcs)
dig:Info:Compute invs over 99 tcs
dig_miscs:Debug:Create equations from 99 traces
dig_miscs:Debug:Solve 99 (uniq) eqts for 66 unknowns
dig:Info:Refine 11 invs
refine:Debug:rfilter(|ps|=11, |tcs|=1000)
refine:Debug:rfilter (before 11, after 3, diff 8)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
4.43849182129

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=66, |tcs|=114449
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=99, |tcs2|=1000 (attempted 99/114449 tcs)
dig:Info:Compute invs over 99 tcs
dig_miscs:Debug:Create equations from 99 traces
dig_miscs:Debug:Solve 99 (uniq) eqts for 66 unknowns
dig:Info:Refine 12 invs
refine:Debug:rfilter(|ps|=12, |tcs|=1000)
refine:Debug:rfilter (before 12, after 3, diff 9)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
4.59562587738

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=66, |tcs|=114449
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=99, |tcs2|=1000 (attempted 99/114449 tcs)
dig:Info:Compute invs over 99 tcs
dig_miscs:Debug:Create equations from 99 traces
dig_miscs:Debug:Solve 99 (uniq) eqts for 66 unknowns
dig:Info:Refine 9 invs
refine:Debug:rfilter(|ps|=9, |tcs|=1000)
refine:Debug:rfilter (before 9, after 3, diff 6)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
4.42113900185

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=66, |tcs|=114449
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=99, |tcs2|=1000 (attempted 99/114449 tcs)
dig:Info:Compute invs over 99 tcs
dig_miscs:Debug:Create equations from 99 traces
dig_miscs:Debug:Solve 99 (uniq) eqts for 66 unknowns
dig:Info:Refine 9 invs
refine:Debug:rfilter(|ps|=9, |tcs|=1000)
refine:Debug:rfilter (before 9, after 3, diff 6)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
4.4041030407

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=66, |tcs|=114449
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=99, |tcs2|=1000 (attempted 99/114449 tcs)
dig:Info:Compute invs over 99 tcs
dig_miscs:Debug:Create equations from 99 traces
dig_miscs:Debug:Solve 99 (uniq) eqts for 66 unknowns
dig:Info:Refine 15 invs
refine:Debug:rfilter(|ps|=15, |tcs|=1000)
refine:Debug:rfilter (before 15, after 2, diff 13)
refine:Debug:rinfer(|ps|=2)
refine:Debug:rinfer (before 2, after 2, diff 0)
dig:Info:Detected invariants for Eqt:
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
4.44314193726

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=66, |tcs|=114449
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=99, |tcs2|=1000 (attempted 99/114449 tcs)
dig:Info:Compute invs over 99 tcs
dig_miscs:Debug:Create equations from 99 traces
dig_miscs:Debug:Solve 99 (uniq) eqts for 66 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 3, diff 4)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
4.10311508179

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=66, |tcs|=114449
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=99, |tcs2|=1000 (attempted 99/114449 tcs)
dig:Info:Compute invs over 99 tcs
dig_miscs:Debug:Create equations from 99 traces
dig_miscs:Debug:Solve 99 (uniq) eqts for 66 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 3, diff 2)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
3.91458511353

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=66, |tcs|=114449
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=99, |tcs2|=1000 (attempted 99/114449 tcs)
dig:Info:Compute invs over 99 tcs
dig_miscs:Debug:Create equations from 99 traces
dig_miscs:Debug:Solve 99 (uniq) eqts for 66 unknowns
dig:Info:Refine 12 invs
refine:Debug:rfilter(|ps|=12, |tcs|=1000)
refine:Debug:rfilter (before 12, after 3, diff 9)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
4.61698389053


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/euclidex2.l0.tcs'
Expect (2): a = yr + xp, b = xq + ys
* Run 0, time 4.36025094986, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 1, time 4.15814900398, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 2, time 3.67043590546, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 3, time 4.46136593819, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 4, time 4.31414198875, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 5, time 4.08072900772, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 6, time 4.32459902763, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 7, time 4.51878714561, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 8, time 3.55826187134, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 9, time 4.06438994408, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 10, time 4.4374730587, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 11, time 3.58968114853, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 12, time 4.43849182129, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 13, time 4.59562587738, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 14, time 4.42113900185, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 15, time 4.4041030407, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 16, time 4.44314193726, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
* Run 17, time 4.10311508179, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 18, time 3.91458511353, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 19, time 4.61698389053, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
TIME AVG 4.2 (../invgen/Traces/NLA_tosem/multilocs/l0/euclidex2.l0.tcs)


***** (6) Generate invs from file 'euclidex3.l0.tcs' *****

dig:Info:2013-06-24 19:00:49.378332, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 15511
1. vs: [a, b, c, d, k, p, q, rvu, s, v, x, y]
2. xinfo: 
 0. All: ['a', 'b', 'c', 'd', 'k', 'p', 'q', 'rvu', 's', 'v', 'x', 'y']
 1. Assume: []
 2. Const: []
 3. Expect: ['a = yr+xp', 'b = xq+ys', 'a = kb+c', 'v = bd']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/euclidex3.l0.tcs", |vs|=12, deg=2, |terms|=91

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=91, |tcs|=15511
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=137, |tcs2|=1000 (attempted 137/15511 tcs)
dig:Info:Compute invs over 137 tcs
dig_miscs:Debug:Create equations from 137 traces
dig_miscs:Debug:Solve 137 (uniq) eqts for 91 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 5, diff 0)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 4, diff 1)
dig:Info:Detected invariants for Eqt:
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
8.04227900505

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=91, |tcs|=15511
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=137, |tcs2|=1000 (attempted 137/15511 tcs)
dig:Info:Compute invs over 137 tcs
dig_miscs:Debug:Create equations from 137 traces
dig_miscs:Debug:Solve 137 (uniq) eqts for 91 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 5, diff 0)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 4, diff 1)
dig:Info:Detected invariants for Eqt:
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
8.05651307106

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=91, |tcs|=15511
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=137, |tcs2|=1000 (attempted 137/15511 tcs)
dig:Info:Compute invs over 137 tcs
dig_miscs:Debug:Create equations from 137 traces
dig_miscs:Debug:Solve 137 (uniq) eqts for 91 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 5, diff 0)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 4, diff 1)
dig:Info:Detected invariants for Eqt:
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
8.28597688675

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=91, |tcs|=15511
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=137, |tcs2|=1000 (attempted 137/15511 tcs)
dig:Info:Compute invs over 137 tcs
dig_miscs:Debug:Create equations from 137 traces
dig_miscs:Debug:Solve 137 (uniq) eqts for 91 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 5, diff 0)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 4, diff 1)
dig:Info:Detected invariants for Eqt:
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
8.28312206268

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=91, |tcs|=15511
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=137, |tcs2|=1000 (attempted 137/15511 tcs)
dig:Info:Compute invs over 137 tcs
dig_miscs:Debug:Create equations from 137 traces
dig_miscs:Debug:Solve 137 (uniq) eqts for 91 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 5, diff 0)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 4, diff 1)
dig:Info:Detected invariants for Eqt:
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
8.35573387146

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=91, |tcs|=15511
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=137, |tcs2|=1000 (attempted 137/15511 tcs)
dig:Info:Compute invs over 137 tcs
dig_miscs:Debug:Create equations from 137 traces
dig_miscs:Debug:Solve 137 (uniq) eqts for 91 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 5, diff 0)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 4, diff 1)
dig:Info:Detected invariants for Eqt:
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
8.15939903259

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=91, |tcs|=15511
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=137, |tcs2|=1000 (attempted 137/15511 tcs)
dig:Info:Compute invs over 137 tcs
dig_miscs:Debug:Create equations from 137 traces
dig_miscs:Debug:Solve 137 (uniq) eqts for 91 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 5, diff 0)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 4, diff 1)
dig:Info:Detected invariants for Eqt:
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
8.46416902542

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=91, |tcs|=15511
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=137, |tcs2|=1000 (attempted 137/15511 tcs)
dig:Info:Compute invs over 137 tcs
dig_miscs:Debug:Create equations from 137 traces
dig_miscs:Debug:Solve 137 (uniq) eqts for 91 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 5, diff 0)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 4, diff 1)
dig:Info:Detected invariants for Eqt:
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
8.25909996033

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=91, |tcs|=15511
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=137, |tcs2|=1000 (attempted 137/15511 tcs)
dig:Info:Compute invs over 137 tcs
dig_miscs:Debug:Create equations from 137 traces
dig_miscs:Debug:Solve 137 (uniq) eqts for 91 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 5, diff 0)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 4, diff 1)
dig:Info:Detected invariants for Eqt:
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
8.00535297394

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=91, |tcs|=15511
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=137, |tcs2|=1000 (attempted 137/15511 tcs)
dig:Info:Compute invs over 137 tcs
dig_miscs:Debug:Create equations from 137 traces
dig_miscs:Debug:Solve 137 (uniq) eqts for 91 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 5, diff 0)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 4, diff 1)
dig:Info:Detected invariants for Eqt:
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
8.24372696877

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=91, |tcs|=15511
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=137, |tcs2|=1000 (attempted 137/15511 tcs)
dig:Info:Compute invs over 137 tcs
dig_miscs:Debug:Create equations from 137 traces
dig_miscs:Debug:Solve 137 (uniq) eqts for 91 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 5, diff 0)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 4, diff 1)
dig:Info:Detected invariants for Eqt:
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
7.89639496803

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=91, |tcs|=15511
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=137, |tcs2|=1000 (attempted 137/15511 tcs)
dig:Info:Compute invs over 137 tcs
dig_miscs:Debug:Create equations from 137 traces
dig_miscs:Debug:Solve 137 (uniq) eqts for 91 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 5, diff 0)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 4, diff 1)
dig:Info:Detected invariants for Eqt:
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
9.15652513504

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=91, |tcs|=15511
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=137, |tcs2|=1000 (attempted 137/15511 tcs)
dig:Info:Compute invs over 137 tcs
dig_miscs:Debug:Create equations from 137 traces
dig_miscs:Debug:Solve 137 (uniq) eqts for 91 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 5, diff 0)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 4, diff 1)
dig:Info:Detected invariants for Eqt:
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
8.19630408287

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=91, |tcs|=15511
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=137, |tcs2|=1000 (attempted 137/15511 tcs)
dig:Info:Compute invs over 137 tcs
dig_miscs:Debug:Create equations from 137 traces
dig_miscs:Debug:Solve 137 (uniq) eqts for 91 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 5, diff 0)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 4, diff 1)
dig:Info:Detected invariants for Eqt:
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
8.38193702698

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=91, |tcs|=15511
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=137, |tcs2|=1000 (attempted 137/15511 tcs)
dig:Info:Compute invs over 137 tcs
dig_miscs:Debug:Create equations from 137 traces
dig_miscs:Debug:Solve 137 (uniq) eqts for 91 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 5, diff 0)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 4, diff 1)
dig:Info:Detected invariants for Eqt:
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
8.17649483681

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=91, |tcs|=15511
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=137, |tcs2|=1000 (attempted 137/15511 tcs)
dig:Info:Compute invs over 137 tcs
dig_miscs:Debug:Create equations from 137 traces
dig_miscs:Debug:Solve 137 (uniq) eqts for 91 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 5, diff 0)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 4, diff 1)
dig:Info:Detected invariants for Eqt:
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
7.98953199387

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=91, |tcs|=15511
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=137, |tcs2|=1000 (attempted 137/15511 tcs)
dig:Info:Compute invs over 137 tcs
dig_miscs:Debug:Create equations from 137 traces
dig_miscs:Debug:Solve 137 (uniq) eqts for 91 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 5, diff 0)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 4, diff 1)
dig:Info:Detected invariants for Eqt:
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
8.16762399673

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=91, |tcs|=15511
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=137, |tcs2|=1000 (attempted 137/15511 tcs)
dig:Info:Compute invs over 137 tcs
dig_miscs:Debug:Create equations from 137 traces
dig_miscs:Debug:Solve 137 (uniq) eqts for 91 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 5, diff 0)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 4, diff 1)
dig:Info:Detected invariants for Eqt:
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
8.23442411423

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=91, |tcs|=15511
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=137, |tcs2|=1000 (attempted 137/15511 tcs)
dig:Info:Compute invs over 137 tcs
dig_miscs:Debug:Create equations from 137 traces
dig_miscs:Debug:Solve 137 (uniq) eqts for 91 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 5, diff 0)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 4, diff 1)
dig:Info:Detected invariants for Eqt:
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
8.27865505219

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=91, |tcs|=15511
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=137, |tcs2|=1000 (attempted 137/15511 tcs)
dig:Info:Compute invs over 137 tcs
dig_miscs:Debug:Create equations from 137 traces
dig_miscs:Debug:Solve 137 (uniq) eqts for 91 unknowns
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=1000)
refine:Debug:rfilter (before 5, after 5, diff 0)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 4, diff 1)
dig:Info:Detected invariants for Eqt:
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
8.27353191376


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/euclidex3.l0.tcs'
Expect (4): a = yr+xp, b = xq+ys, a = kb+c, v = bd
* Run 0, time 8.04227900505, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 1, time 8.05651307106, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 2, time 8.28597688675, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 3, time 8.28312206268, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 4, time 8.35573387146, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 5, time 8.15939903259, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 6, time 8.46416902542, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 7, time 8.25909996033, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 8, time 8.00535297394, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 9, time 8.24372696877, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 10, time 7.89639496803, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 11, time 9.15652513504, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 12, time 8.19630408287, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 13, time 8.38193702698, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 14, time 8.17649483681, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 15, time 7.98953199387, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 16, time 8.16762399673, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 17, time 8.23442411423, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 18, time 8.27865505219, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 19, time 8.27353191376, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
TIME AVG 8.2 (../invgen/Traces/NLA_tosem/multilocs/l0/euclidex3.l0.tcs)


***** (7) Generate invs from file 'fermat1_new.l0.tcs' *****

dig:Info:2013-06-24 19:03:35.373562, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 66272
1. vs: [A, R, rvu, u, v]
2. xinfo: 
 0. All: ['A', 'R', 'rvu', 'u', 'v']
 1. Assume: []
 2. Const: []
 3. Expect: ['4*(A+r) = u*u-v*v-2*u+2*v']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/fermat1_new.l0.tcs", |vs|=5, deg=4, |terms|=126

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
30.4692659378

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
32.0906040668

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.9117510319

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
33.0743398666

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
32.8647079468

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.9548959732

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
32.0113389492

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.4929320812

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.2128081322

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.6620759964

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
30.7282109261

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
30.8888828754

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.0013291836

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.6021180153

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
32.0693569183

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.5926399231

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.6405210495

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.1370398998

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.6288919449

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.8421587944


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/fermat1_new.l0.tcs'
Expect (1): 4*(A+r) = u*u-v*v-2*u+2*v
* Run 0, time 30.4692659378, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 1, time 32.0906040668, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 2, time 31.9117510319, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 3, time 33.0743398666, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 4, time 32.8647079468, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 5, time 31.9548959732, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 6, time 32.0113389492, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 7, time 31.4929320812, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 8, time 31.2128081322, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 9, time 31.6620759964, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 10, time 30.7282109261, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 11, time 30.8888828754, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 12, time 31.0013291836, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 13, time 31.6021180153, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 14, time 32.0693569183, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 15, time 31.5926399231, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 16, time 31.6405210495, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 17, time 31.1370398998, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 18, time 31.6288919449, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 19, time 31.8421587944, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
TIME AVG 31.6 (../invgen/Traces/NLA_tosem/multilocs/l0/fermat1_new.l0.tcs)


***** (8) Generate invs from file 'fermat2.l0.tcs' *****

dig:Info:2013-06-24 19:14:11.618032, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 66272
1. vs: [A, R, rvu, u, v]
2. xinfo: 
 0. All: ['A', 'R', 'rvu', 'u', 'v']
 1. Assume: []
 2. Const: []
 3. Expect: ['4*(A+r) == u*u-v*v-2*u+2*v']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/fermat2.l0.tcs", |vs|=5, deg=4, |terms|=126

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
30.8711018562

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.3062779903

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.6835250854

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.4063649178

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
32.3623039722

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.4296638966

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.8585951328

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.4883451462

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.4641089439

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.7148499489

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.2082920074

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
30.7991490364

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
32.2018289566

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.352298975

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.8492970467

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
32.0159840584

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.5294139385

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.5422661304

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
31.927134037

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=66272
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/66272 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
32.2668979168


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/fermat2.l0.tcs'
Expect (1): 4*(A+r) == u*u-v*v-2*u+2*v
* Run 0, time 30.8711018562, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 1, time 31.3062779903, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 2, time 31.6835250854, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 3, time 31.4063649178, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 4, time 32.3623039722, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 5, time 31.4296638966, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 6, time 31.8585951328, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 7, time 31.4883451462, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 8, time 31.4641089439, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 9, time 31.7148499489, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 10, time 31.2082920074, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 11, time 30.7991490364, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 12, time 32.2018289566, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 13, time 31.352298975, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 14, time 31.8492970467, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 15, time 32.0159840584, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 16, time 31.5294139385, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 17, time 31.5422661304, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 18, time 31.927134037, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 19, time 32.2668979168, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
TIME AVG 31.6 (../invgen/Traces/NLA_tosem/multilocs/l0/fermat2.l0.tcs)


***** (9) Generate invs from file 'freire1.l0.tcs' *****

dig:Info:2013-06-24 19:24:47.867045, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 65815
1. vs: [a, rvu, x]
2. xinfo: 
 0. All: ['a', 'rvu', 'x']
 1. Assume: []
 2. Const: []
 3. Expect: ['a = 2x + r*r - rvu']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 8 to 7
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/freire1.l0.tcs", |vs|=3, deg=7, |terms|=120

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=65815
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/65815 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: rvu^2 - a - rvu + 2*x == 0
33.8713319302

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=65815
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/65815 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: rvu^2 - a - rvu + 2*x == 0
34.2430360317

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=65815
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/65815 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: rvu^2 - a - rvu + 2*x == 0
34.135543108

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=65815
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/65815 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: rvu^2 - a - rvu + 2*x == 0
34.5325059891

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=65815
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/65815 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: rvu^2 - a - rvu + 2*x == 0
33.9451601505

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=65815
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/65815 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: rvu^2 - a - rvu + 2*x == 0
33.586796999

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=65815
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/65815 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: rvu^2 - a - rvu + 2*x == 0
33.8672978878

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=65815
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/65815 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: rvu^2 - a - rvu + 2*x == 0
33.891261816

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=65815
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/65815 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: rvu^2 - a - rvu + 2*x == 0
33.4579770565

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=65815
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/65815 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: rvu^2 - a - rvu + 2*x == 0
33.6514930725

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=65815
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/65815 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: rvu^2 - a - rvu + 2*x == 0
33.9217019081

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=65815
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/65815 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: rvu^2 - a - rvu + 2*x == 0
33.8052370548

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=65815
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/65815 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: rvu^2 - a - rvu + 2*x == 0
33.9097468853

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=65815
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/65815 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: rvu^2 - a - rvu + 2*x == 0
34.5113129616

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=65815
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/65815 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: rvu^2 - a - rvu + 2*x == 0
33.6807799339

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=65815
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/65815 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: rvu^2 - a - rvu + 2*x == 0
33.677052021

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=65815
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/65815 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: rvu^2 - a - rvu + 2*x == 0
33.5544428825

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=65815
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/65815 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: rvu^2 - a - rvu + 2*x == 0
33.9644870758

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=65815
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/65815 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: rvu^2 - a - rvu + 2*x == 0
33.5148608685

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=65815
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/65815 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: rvu^2 - a - rvu + 2*x == 0
33.754322052


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/freire1.l0.tcs'
Expect (1): a = 2x + r*r - rvu
* Run 0, time 33.8713319302, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 1, time 34.2430360317, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 2, time 34.135543108, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 3, time 34.5325059891, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 4, time 33.9451601505, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 5, time 33.586796999, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 6, time 33.8672978878, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 7, time 33.891261816, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 8, time 33.4579770565, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 9, time 33.6514930725, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 10, time 33.9217019081, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 11, time 33.8052370548, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 12, time 33.9097468853, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 13, time 34.5113129616, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 14, time 33.6807799339, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 15, time 33.677052021, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 16, time 33.5544428825, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 17, time 33.9644870758, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 18, time 33.5148608685, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 19, time 33.754322052, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
TIME AVG 33.9 (../invgen/Traces/NLA_tosem/multilocs/l0/freire1.l0.tcs)


***** (10) Generate invs from file 'freire2_comb.l0.tcs' *****

dig:Info:2013-06-24 19:36:09.521547, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 21345
1. vs: [a, rvu, s, x]
2. xinfo: 
 0. All: ['a', 'rvu', 's', 'x']
 1. Assume: []
 2. Const: []
 3. Expect: ['4*r*r*r - 6*r*r + 3*r + 4*x - 4*a == 1', '4*s -12*r*r == 1']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/freire2_comb.l0.tcs", |vs|=4, deg=5, |terms|=126

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=21345
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/21345 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 75 invs
refine:Debug:rfilter(|ps|=75, |tcs|=1000)
refine:Debug:rfilter (before 75, after 75, diff 0)
refine:Debug:rinfer(|ps|=75)
refine:Debug:rinfer (before 75, after 2, diff 73)
dig:Info:Detected invariants for Eqt:
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
45.2489500046

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=21345
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/21345 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 75 invs
refine:Debug:rfilter(|ps|=75, |tcs|=1000)
refine:Debug:rfilter (before 75, after 75, diff 0)
refine:Debug:rinfer(|ps|=75)
refine:Debug:rinfer (before 75, after 2, diff 73)
dig:Info:Detected invariants for Eqt:
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
45.191849947

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=21345
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/21345 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 75 invs
refine:Debug:rfilter(|ps|=75, |tcs|=1000)
refine:Debug:rfilter (before 75, after 75, diff 0)
refine:Debug:rinfer(|ps|=75)
refine:Debug:rinfer (before 75, after 2, diff 73)
dig:Info:Detected invariants for Eqt:
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
43.9712440968

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=21345
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/21345 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 75 invs
refine:Debug:rfilter(|ps|=75, |tcs|=1000)
refine:Debug:rfilter (before 75, after 75, diff 0)
refine:Debug:rinfer(|ps|=75)
refine:Debug:rinfer (before 75, after 2, diff 73)
dig:Info:Detected invariants for Eqt:
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
45.6537480354

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=21345
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/21345 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 75 invs
refine:Debug:rfilter(|ps|=75, |tcs|=1000)
refine:Debug:rfilter (before 75, after 75, diff 0)
refine:Debug:rinfer(|ps|=75)
refine:Debug:rinfer (before 75, after 2, diff 73)
dig:Info:Detected invariants for Eqt:
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
45.0124938488

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=21345
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/21345 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 75 invs
refine:Debug:rfilter(|ps|=75, |tcs|=1000)
refine:Debug:rfilter (before 75, after 75, diff 0)
refine:Debug:rinfer(|ps|=75)
refine:Debug:rinfer (before 75, after 2, diff 73)
dig:Info:Detected invariants for Eqt:
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
44.165225029

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=21345
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/21345 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 75 invs
refine:Debug:rfilter(|ps|=75, |tcs|=1000)
refine:Debug:rfilter (before 75, after 75, diff 0)
refine:Debug:rinfer(|ps|=75)
refine:Debug:rinfer (before 75, after 2, diff 73)
dig:Info:Detected invariants for Eqt:
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
45.244328022

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=21345
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/21345 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 75 invs
refine:Debug:rfilter(|ps|=75, |tcs|=1000)
refine:Debug:rfilter (before 75, after 75, diff 0)
refine:Debug:rinfer(|ps|=75)
refine:Debug:rinfer (before 75, after 2, diff 73)
dig:Info:Detected invariants for Eqt:
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
44.9739940166

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=21345
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/21345 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 75 invs
refine:Debug:rfilter(|ps|=75, |tcs|=1000)
refine:Debug:rfilter (before 75, after 75, diff 0)
refine:Debug:rinfer(|ps|=75)
refine:Debug:rinfer (before 75, after 2, diff 73)
dig:Info:Detected invariants for Eqt:
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
46.5754811764

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=21345
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/21345 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 75 invs
refine:Debug:rfilter(|ps|=75, |tcs|=1000)
refine:Debug:rfilter (before 75, after 75, diff 0)
refine:Debug:rinfer(|ps|=75)
refine:Debug:rinfer (before 75, after 2, diff 73)
dig:Info:Detected invariants for Eqt:
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
44.862831831

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=21345
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/21345 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 75 invs
refine:Debug:rfilter(|ps|=75, |tcs|=1000)
refine:Debug:rfilter (before 75, after 75, diff 0)
refine:Debug:rinfer(|ps|=75)
refine:Debug:rinfer (before 75, after 2, diff 73)
dig:Info:Detected invariants for Eqt:
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
45.5501480103

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=21345
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/21345 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 75 invs
refine:Debug:rfilter(|ps|=75, |tcs|=1000)
refine:Debug:rfilter (before 75, after 75, diff 0)
refine:Debug:rinfer(|ps|=75)
refine:Debug:rinfer (before 75, after 2, diff 73)
dig:Info:Detected invariants for Eqt:
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
45.424503088

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=21345
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/21345 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 75 invs
refine:Debug:rfilter(|ps|=75, |tcs|=1000)
refine:Debug:rfilter (before 75, after 75, diff 0)
refine:Debug:rinfer(|ps|=75)
refine:Debug:rinfer (before 75, after 2, diff 73)
dig:Info:Detected invariants for Eqt:
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
44.2461829185

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=21345
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/21345 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 75 invs
refine:Debug:rfilter(|ps|=75, |tcs|=1000)
refine:Debug:rfilter (before 75, after 75, diff 0)
refine:Debug:rinfer(|ps|=75)
refine:Debug:rinfer (before 75, after 2, diff 73)
dig:Info:Detected invariants for Eqt:
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
44.971914053

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=21345
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/21345 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 75 invs
refine:Debug:rfilter(|ps|=75, |tcs|=1000)
refine:Debug:rfilter (before 75, after 75, diff 0)
refine:Debug:rinfer(|ps|=75)
refine:Debug:rinfer (before 75, after 2, diff 73)
dig:Info:Detected invariants for Eqt:
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
44.9708178043

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=21345
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/21345 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 75 invs
refine:Debug:rfilter(|ps|=75, |tcs|=1000)
refine:Debug:rfilter (before 75, after 75, diff 0)
refine:Debug:rinfer(|ps|=75)
refine:Debug:rinfer (before 75, after 2, diff 73)
dig:Info:Detected invariants for Eqt:
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
45.0474421978

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=21345
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/21345 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 75 invs
refine:Debug:rfilter(|ps|=75, |tcs|=1000)
refine:Debug:rfilter (before 75, after 75, diff 0)
refine:Debug:rinfer(|ps|=75)
refine:Debug:rinfer (before 75, after 2, diff 73)
dig:Info:Detected invariants for Eqt:
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
45.5474369526

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=21345
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/21345 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 75 invs
refine:Debug:rfilter(|ps|=75, |tcs|=1000)
refine:Debug:rfilter (before 75, after 75, diff 0)
refine:Debug:rinfer(|ps|=75)
refine:Debug:rinfer (before 75, after 4, diff 71)
dig:Info:Detected invariants for Eqt:
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: -27*a^2 + s^3 - 27*a*s + 54*a*x - 3*s^2 + 27*s*x - 27*x^2 - 27/4*a - 3/8*s + 27/4*x - 91/64 == 0
  2: rvu^2 - 1/3*s + 1/12 == 0
  3: a*rvu - rvu*x - 1/9*s^2 + 3/2*a - 7/8*rvu + 5/9*s - 3/2*x + 35/144 == 0
46.0999019146

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=21345
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/21345 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 75 invs
refine:Debug:rfilter(|ps|=75, |tcs|=1000)
refine:Debug:rfilter (before 75, after 75, diff 0)
refine:Debug:rinfer(|ps|=75)
refine:Debug:rinfer (before 75, after 2, diff 73)
dig:Info:Detected invariants for Eqt:
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
45.5703639984

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=21345
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/21345 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 75 invs
refine:Debug:rfilter(|ps|=75, |tcs|=1000)
refine:Debug:rfilter (before 75, after 75, diff 0)
refine:Debug:rinfer(|ps|=75)
refine:Debug:rinfer (before 75, after 2, diff 73)
dig:Info:Detected invariants for Eqt:
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
43.9015579224


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/freire2_comb.l0.tcs'
Expect (2): 4*r*r*r - 6*r*r + 3*r + 4*x - 4*a == 1, 4*s -12*r*r == 1
* Run 0, time 45.2489500046, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 1, time 45.191849947, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 2, time 43.9712440968, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 3, time 45.6537480354, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 4, time 45.0124938488, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 5, time 44.165225029, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 6, time 45.244328022, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 7, time 44.9739940166, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 8, time 46.5754811764, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 9, time 44.862831831, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 10, time 45.5501480103, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 11, time 45.424503088, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 12, time 44.2461829185, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 13, time 44.971914053, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 14, time 44.9708178043, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 15, time 45.0474421978, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 16, time 45.5474369526, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 17, time 46.0999019146, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: -27*a^2 + s^3 - 27*a*s + 54*a*x - 3*s^2 + 27*s*x - 27*x^2 - 27/4*a - 3/8*s + 27/4*x - 91/64 == 0
  2: rvu^2 - 1/3*s + 1/12 == 0
  3: a*rvu - rvu*x - 1/9*s^2 + 3/2*a - 7/8*rvu + 5/9*s - 3/2*x + 35/144 == 0
* Run 18, time 45.5703639984, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 19, time 43.9015579224, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
TIME AVG 45.1 (../invgen/Traces/NLA_tosem/multilocs/l0/freire2_comb.l0.tcs)


***** (11) Generate invs from file 'geo1.l0.tcs' *****

dig:Info:2013-06-24 19:51:16.327247, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 121
1. vs: [x, y, z]
2. xinfo: 
 0. All: ['x', 'y', 'z']
 1. Assume: []
 2. Const: []
 3. Expect: ['x*z - x - y + 1 == 0']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 8 to 7
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/geo1.l0.tcs", |vs|=3, deg=7, |terms|=120

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=121
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=121, |tcs2|=0 (attempted 180/121 tcs)
dig:Info:Compute invs over 121 tcs
dig_miscs:Debug:Create equations from 121 traces
dig_miscs:Debug:Solve 121 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter skips (|ps|=56, |tcs|=0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: x*z - x - y + 1 == 0
14.6560630798

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=121
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=121, |tcs2|=0 (attempted 180/121 tcs)
dig:Info:Compute invs over 121 tcs
dig_miscs:Debug:Create equations from 121 traces
dig_miscs:Debug:Solve 121 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter skips (|ps|=56, |tcs|=0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: x*z - x - y + 1 == 0
14.6584630013

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=121
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=121, |tcs2|=0 (attempted 180/121 tcs)
dig:Info:Compute invs over 121 tcs
dig_miscs:Debug:Create equations from 121 traces
dig_miscs:Debug:Solve 121 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter skips (|ps|=56, |tcs|=0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: x*z - x - y + 1 == 0
14.6798369884

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=121
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=121, |tcs2|=0 (attempted 180/121 tcs)
dig:Info:Compute invs over 121 tcs
dig_miscs:Debug:Create equations from 121 traces
dig_miscs:Debug:Solve 121 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter skips (|ps|=56, |tcs|=0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: x*z - x - y + 1 == 0
14.6948401928

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=121
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=121, |tcs2|=0 (attempted 180/121 tcs)
dig:Info:Compute invs over 121 tcs
dig_miscs:Debug:Create equations from 121 traces
dig_miscs:Debug:Solve 121 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter skips (|ps|=56, |tcs|=0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: x*z - x - y + 1 == 0
14.817250967

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=121
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=121, |tcs2|=0 (attempted 180/121 tcs)
dig:Info:Compute invs over 121 tcs
dig_miscs:Debug:Create equations from 121 traces
dig_miscs:Debug:Solve 121 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter skips (|ps|=56, |tcs|=0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: x*z - x - y + 1 == 0
14.727976799

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=121
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=121, |tcs2|=0 (attempted 180/121 tcs)
dig:Info:Compute invs over 121 tcs
dig_miscs:Debug:Create equations from 121 traces
dig_miscs:Debug:Solve 121 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter skips (|ps|=56, |tcs|=0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: x*z - x - y + 1 == 0
14.6620790958

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=121
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=121, |tcs2|=0 (attempted 180/121 tcs)
dig:Info:Compute invs over 121 tcs
dig_miscs:Debug:Create equations from 121 traces
dig_miscs:Debug:Solve 121 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter skips (|ps|=56, |tcs|=0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: x*z - x - y + 1 == 0
14.7322969437

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=121
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=121, |tcs2|=0 (attempted 180/121 tcs)
dig:Info:Compute invs over 121 tcs
dig_miscs:Debug:Create equations from 121 traces
dig_miscs:Debug:Solve 121 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter skips (|ps|=56, |tcs|=0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: x*z - x - y + 1 == 0
14.609746933

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=121
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=121, |tcs2|=0 (attempted 180/121 tcs)
dig:Info:Compute invs over 121 tcs
dig_miscs:Debug:Create equations from 121 traces
dig_miscs:Debug:Solve 121 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter skips (|ps|=56, |tcs|=0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: x*z - x - y + 1 == 0
14.8839800358

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=121
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=121, |tcs2|=0 (attempted 180/121 tcs)
dig:Info:Compute invs over 121 tcs
dig_miscs:Debug:Create equations from 121 traces
dig_miscs:Debug:Solve 121 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter skips (|ps|=56, |tcs|=0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: x*z - x - y + 1 == 0
14.7307140827

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=121
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=121, |tcs2|=0 (attempted 180/121 tcs)
dig:Info:Compute invs over 121 tcs
dig_miscs:Debug:Create equations from 121 traces
dig_miscs:Debug:Solve 121 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter skips (|ps|=56, |tcs|=0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: x*z - x - y + 1 == 0
16.3305771351

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=121
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=121, |tcs2|=0 (attempted 180/121 tcs)
dig:Info:Compute invs over 121 tcs
dig_miscs:Debug:Create equations from 121 traces
dig_miscs:Debug:Solve 121 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter skips (|ps|=56, |tcs|=0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: x*z - x - y + 1 == 0
14.6143960953

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=121
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=121, |tcs2|=0 (attempted 180/121 tcs)
dig:Info:Compute invs over 121 tcs
dig_miscs:Debug:Create equations from 121 traces
dig_miscs:Debug:Solve 121 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter skips (|ps|=56, |tcs|=0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: x*z - x - y + 1 == 0
14.6444962025

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=121
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=121, |tcs2|=0 (attempted 180/121 tcs)
dig:Info:Compute invs over 121 tcs
dig_miscs:Debug:Create equations from 121 traces
dig_miscs:Debug:Solve 121 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter skips (|ps|=56, |tcs|=0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: x*z - x - y + 1 == 0
14.7210571766

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=121
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=121, |tcs2|=0 (attempted 180/121 tcs)
dig:Info:Compute invs over 121 tcs
dig_miscs:Debug:Create equations from 121 traces
dig_miscs:Debug:Solve 121 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter skips (|ps|=56, |tcs|=0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: x*z - x - y + 1 == 0
14.5977971554

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=121
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=121, |tcs2|=0 (attempted 180/121 tcs)
dig:Info:Compute invs over 121 tcs
dig_miscs:Debug:Create equations from 121 traces
dig_miscs:Debug:Solve 121 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter skips (|ps|=56, |tcs|=0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: x*z - x - y + 1 == 0
14.6643660069

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=121
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=121, |tcs2|=0 (attempted 180/121 tcs)
dig:Info:Compute invs over 121 tcs
dig_miscs:Debug:Create equations from 121 traces
dig_miscs:Debug:Solve 121 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter skips (|ps|=56, |tcs|=0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: x*z - x - y + 1 == 0
14.6023349762

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=121
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=121, |tcs2|=0 (attempted 180/121 tcs)
dig:Info:Compute invs over 121 tcs
dig_miscs:Debug:Create equations from 121 traces
dig_miscs:Debug:Solve 121 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter skips (|ps|=56, |tcs|=0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: x*z - x - y + 1 == 0
14.732571125

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=121
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=121, |tcs2|=0 (attempted 180/121 tcs)
dig:Info:Compute invs over 121 tcs
dig_miscs:Debug:Create equations from 121 traces
dig_miscs:Debug:Solve 121 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter skips (|ps|=56, |tcs|=0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: x*z - x - y + 1 == 0
14.7064130306


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/geo1.l0.tcs'
Expect (1): x*z - x - y + 1 == 0
* Run 0, time 14.6560630798, deg 7
  0: x*z - x - y + 1 == 0
* Run 1, time 14.6584630013, deg 7
  0: x*z - x - y + 1 == 0
* Run 2, time 14.6798369884, deg 7
  0: x*z - x - y + 1 == 0
* Run 3, time 14.6948401928, deg 7
  0: x*z - x - y + 1 == 0
* Run 4, time 14.817250967, deg 7
  0: x*z - x - y + 1 == 0
* Run 5, time 14.727976799, deg 7
  0: x*z - x - y + 1 == 0
* Run 6, time 14.6620790958, deg 7
  0: x*z - x - y + 1 == 0
* Run 7, time 14.7322969437, deg 7
  0: x*z - x - y + 1 == 0
* Run 8, time 14.609746933, deg 7
  0: x*z - x - y + 1 == 0
* Run 9, time 14.8839800358, deg 7
  0: x*z - x - y + 1 == 0
* Run 10, time 14.7307140827, deg 7
  0: x*z - x - y + 1 == 0
* Run 11, time 16.3305771351, deg 7
  0: x*z - x - y + 1 == 0
* Run 12, time 14.6143960953, deg 7
  0: x*z - x - y + 1 == 0
* Run 13, time 14.6444962025, deg 7
  0: x*z - x - y + 1 == 0
* Run 14, time 14.7210571766, deg 7
  0: x*z - x - y + 1 == 0
* Run 15, time 14.5977971554, deg 7
  0: x*z - x - y + 1 == 0
* Run 16, time 14.6643660069, deg 7
  0: x*z - x - y + 1 == 0
* Run 17, time 14.6023349762, deg 7
  0: x*z - x - y + 1 == 0
* Run 18, time 14.732571125, deg 7
  0: x*z - x - y + 1 == 0
* Run 19, time 14.7064130306, deg 7
  0: x*z - x - y + 1 == 0
TIME AVG 14.8 (../invgen/Traces/NLA_tosem/multilocs/l0/geo1.l0.tcs)


***** (12) Generate invs from file 'geo2.l0.tcs' *****

dig:Info:2013-06-24 19:56:11.847860, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 254
1. vs: [k, x, y, z]
2. xinfo: 
 0. All: ['k', 'x', 'y', 'z']
 1. Assume: []
 2. Const: []
 3. Expect: ['1+xz-x-z*y = 0']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/geo2.l0.tcs", |vs|=4, deg=5, |terms|=126

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=254
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=65 (attempted 189/254 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=65)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: x*z - y*z - x + 1 == 0
24.119093895

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=254
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=65 (attempted 189/254 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=65)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: x*z - y*z - x + 1 == 0
24.6393239498

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=254
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=65 (attempted 189/254 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=65)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: x*z - y*z - x + 1 == 0
23.5542390347

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=254
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=65 (attempted 189/254 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=65)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: x*z - y*z - x + 1 == 0
24.4019238949

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=254
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=65 (attempted 189/254 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=65)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: x*z - y*z - x + 1 == 0
24.5270459652

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=254
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=65 (attempted 189/254 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=65)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: x*z - y*z - x + 1 == 0
26.539413929

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=254
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=65 (attempted 189/254 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=65)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: x*z - y*z - x + 1 == 0
24.9310939312

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=254
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=65 (attempted 189/254 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=65)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: x*z - y*z - x + 1 == 0
23.7054729462

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=254
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=65 (attempted 189/254 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=65)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: x*z - y*z - x + 1 == 0
23.5594871044

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=254
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=65 (attempted 189/254 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=65)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: x*z - y*z - x + 1 == 0
24.4045860767

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=254
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=65 (attempted 189/254 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=65)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: x*z - y*z - x + 1 == 0
24.6102919579

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=254
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=65 (attempted 189/254 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=65)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: x*z - y*z - x + 1 == 0
24.1950318813

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=254
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=65 (attempted 189/254 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=65)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: x*z - y*z - x + 1 == 0
23.9894461632

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=254
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=65 (attempted 189/254 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=65)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: x*z - y*z - x + 1 == 0
23.8672280312

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=254
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=65 (attempted 189/254 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=65)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: x*z - y*z - x + 1 == 0
24.8240959644

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=254
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=65 (attempted 189/254 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=65)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: x*z - y*z - x + 1 == 0
24.2770168781

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=254
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=65 (attempted 189/254 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=65)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: x*z - y*z - x + 1 == 0
23.4437460899

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=254
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=65 (attempted 189/254 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=65)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: x*z - y*z - x + 1 == 0
24.4921240807

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=254
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=65 (attempted 189/254 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=65)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: x*z - y*z - x + 1 == 0
24.0704820156

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=254
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=65 (attempted 189/254 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=65)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: x*z - y*z - x + 1 == 0
24.9067220688


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/geo2.l0.tcs'
Expect (1): 1+xz-x-z*y = 0
* Run 0, time 24.119093895, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 1, time 24.6393239498, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 2, time 23.5542390347, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 3, time 24.4019238949, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 4, time 24.5270459652, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 5, time 26.539413929, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 6, time 24.9310939312, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 7, time 23.7054729462, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 8, time 23.5594871044, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 9, time 24.4045860767, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 10, time 24.6102919579, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 11, time 24.1950318813, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 12, time 23.9894461632, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 13, time 23.8672280312, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 14, time 24.8240959644, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 15, time 24.2770168781, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 16, time 23.4437460899, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 17, time 24.4921240807, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 18, time 24.0704820156, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 19, time 24.9067220688, deg 5
  0: x*z - y*z - x + 1 == 0
TIME AVG 24.4 (../invgen/Traces/NLA_tosem/multilocs/l0/geo2.l0.tcs)


***** (13) Generate invs from file 'geo3.l0.tcs' *****

dig:Info:2013-06-24 20:04:18.927249, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 434
1. vs: [a, k, x, y, z]
2. xinfo: 
 0. All: ['a', 'k', 'x', 'y', 'z']
 1. Assume: []
 2. Const: []
 3. Expect: ['zx-x+a-a*z*y = 0']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/geo3.l0.tcs", |vs|=5, deg=4, |terms|=126

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=434
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=245 (attempted 189/434 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=245)
refine:Debug:rfilter (before 6, after 6, diff 0)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*y*z - x*z - a + x == 0
22.724093914

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=434
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=245 (attempted 189/434 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=245)
refine:Debug:rfilter (before 6, after 6, diff 0)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*y*z - x*z - a + x == 0
22.6575820446

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=434
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=245 (attempted 189/434 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=245)
refine:Debug:rfilter (before 6, after 6, diff 0)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*y*z - x*z - a + x == 0
24.6690590382

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=434
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=245 (attempted 189/434 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=245)
refine:Debug:rfilter (before 6, after 6, diff 0)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*y*z - x*z - a + x == 0
24.2496631145

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=434
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=245 (attempted 189/434 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=245)
refine:Debug:rfilter (before 6, after 6, diff 0)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*y*z - x*z - a + x == 0
22.913946867

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=434
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=245 (attempted 189/434 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=245)
refine:Debug:rfilter (before 6, after 6, diff 0)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*y*z - x*z - a + x == 0
22.8187561035

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=434
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=245 (attempted 189/434 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=245)
refine:Debug:rfilter (before 6, after 6, diff 0)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*y*z - x*z - a + x == 0
23.0194029808

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=434
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=245 (attempted 189/434 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=245)
refine:Debug:rfilter (before 6, after 6, diff 0)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*y*z - x*z - a + x == 0
23.6243181229

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=434
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=245 (attempted 189/434 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=245)
refine:Debug:rfilter (before 6, after 6, diff 0)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*y*z - x*z - a + x == 0
23.3615679741

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=434
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=245 (attempted 189/434 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=245)
refine:Debug:rfilter (before 6, after 6, diff 0)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*y*z - x*z - a + x == 0
22.8574080467

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=434
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=245 (attempted 189/434 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=245)
refine:Debug:rfilter (before 6, after 6, diff 0)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*y*z - x*z - a + x == 0
23.7834880352

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=434
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=245 (attempted 189/434 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=245)
refine:Debug:rfilter (before 6, after 6, diff 0)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*y*z - x*z - a + x == 0
23.0057528019

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=434
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=245 (attempted 189/434 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=245)
refine:Debug:rfilter (before 6, after 6, diff 0)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*y*z - x*z - a + x == 0
23.2800722122

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=434
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=245 (attempted 189/434 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=245)
refine:Debug:rfilter (before 6, after 6, diff 0)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*y*z - x*z - a + x == 0
22.6779780388

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=434
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=245 (attempted 189/434 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=245)
refine:Debug:rfilter (before 6, after 6, diff 0)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*y*z - x*z - a + x == 0
24.6701200008

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=434
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=245 (attempted 189/434 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=245)
refine:Debug:rfilter (before 6, after 6, diff 0)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*y*z - x*z - a + x == 0
22.9644110203

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=434
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=245 (attempted 189/434 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=245)
refine:Debug:rfilter (before 6, after 6, diff 0)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*y*z - x*z - a + x == 0
23.5736010075

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=434
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=245 (attempted 189/434 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=245)
refine:Debug:rfilter (before 6, after 6, diff 0)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*y*z - x*z - a + x == 0
24.0539140701

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=434
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=245 (attempted 189/434 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=245)
refine:Debug:rfilter (before 6, after 6, diff 0)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*y*z - x*z - a + x == 0
23.0211598873

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=434
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=245 (attempted 189/434 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=245)
refine:Debug:rfilter (before 6, after 6, diff 0)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*y*z - x*z - a + x == 0
24.2634329796


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/geo3.l0.tcs'
Expect (1): zx-x+a-a*z*y = 0
* Run 0, time 22.724093914, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 1, time 22.6575820446, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 2, time 24.6690590382, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 3, time 24.2496631145, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 4, time 22.913946867, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 5, time 22.8187561035, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 6, time 23.0194029808, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 7, time 23.6243181229, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 8, time 23.3615679741, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 9, time 22.8574080467, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 10, time 23.7834880352, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 11, time 23.0057528019, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 12, time 23.2800722122, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 13, time 22.6779780388, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 14, time 24.6701200008, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 15, time 22.9644110203, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 16, time 23.5736010075, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 17, time 24.0539140701, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 18, time 23.0211598873, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 19, time 24.2634329796, deg 4
  0: a*y*z - x*z - a + x == 0
TIME AVG 23.4 (../invgen/Traces/NLA_tosem/multilocs/l0/geo3.l0.tcs)


***** (14) Generate invs from file 'hard.l0.tcs' *****

dig:Info:2013-06-24 20:12:07.152090, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 1961
1. vs: [A, D, d1, p, q, rvu]
2. xinfo: 
 0. All: ['A', 'D', 'd1', 'p', 'q', 'rvu']
 1. Assume: []
 2. Const: []
 3. Expect: ['nvu = qd+r', 'a = dp']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/hard.l0.tcs", |vs|=6, deg=3, |terms|=84

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1961
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1961 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
8.93460702896

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1961
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1961 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
9.21645593643

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1961
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1961 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
9.24818921089

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1961
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1961 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
9.61983394623

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1961
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1961 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
8.9725189209

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1961
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1961 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
8.60867214203

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1961
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1961 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
9.15534687042

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1961
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1961 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
9.18063282967

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1961
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1961 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
9.08992505074

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1961
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1961 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
9.16488385201

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1961
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1961 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
9.13534879684

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1961
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1961 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
9.31815695763

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1961
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1961 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
9.19802713394

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1961
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1961 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
8.89166712761

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1961
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1961 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
9.1867980957

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1961
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1961 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
9.48116612434

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1961
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1961 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
9.18728399277

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1961
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1961 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
9.2674870491

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1961
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1961 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
9.27884697914

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=1961
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/1961 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 19, diff 0)
refine:Debug:rinfer(|ps|=19)
refine:Debug:rinfer (before 19, after 2, diff 17)
dig:Info:Detected invariants for Eqt:
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
9.06373715401


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/hard.l0.tcs'
Expect (2): nvu = qd+r, a = dp
* Run 0, time 8.93460702896, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 1, time 9.21645593643, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 2, time 9.24818921089, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 3, time 9.61983394623, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 4, time 8.9725189209, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 5, time 8.60867214203, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 6, time 9.15534687042, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 7, time 9.18063282967, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 8, time 9.08992505074, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 9, time 9.16488385201, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 10, time 9.13534879684, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 11, time 9.31815695763, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 12, time 9.19802713394, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 13, time 8.89166712761, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 14, time 9.1867980957, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 15, time 9.48116612434, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 16, time 9.18728399277, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 17, time 9.2674870491, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 18, time 9.27884697914, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 19, time 9.06373715401, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
TIME AVG 9.2 (../invgen/Traces/NLA_tosem/multilocs/l0/hard.l0.tcs)


***** (15) Generate invs from file 'knuth.l0.tcs' *****

dig:Info:2013-06-24 20:15:10.571066, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 9863
1. vs: [d, d1, k, nvu, q, rvu, s, t]
2. xinfo: 
 0. All: ['d', 'd1', 'k', 'nvu', 'q', 'rvu', 's', 't']
 1. Assume: []
 2. Const: []
 3. Expect: ['ddq - 4rd + 4kd - 2qd + 8r = 8n']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/knuth.l0.tcs", |vs|=8, deg=3, |terms|=165

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 44 invs
refine:Debug:rfilter(|ps|=44, |tcs|=1000)
refine:Debug:rfilter (before 44, after 1, diff 43)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: -1/4*d^2*q - d*k + 1/2*d*q + d*rvu + 2*nvu - 2*rvu == 0
58.0372941494

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 43 invs
refine:Debug:rfilter(|ps|=43, |tcs|=1000)
refine:Debug:rfilter (before 43, after 3, diff 40)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
61.0794811249

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 44 invs
refine:Debug:rfilter(|ps|=44, |tcs|=1000)
refine:Debug:rfilter (before 44, after 2, diff 42)
refine:Debug:rinfer(|ps|=2)
refine:Debug:rinfer (before 2, after 2, diff 0)
dig:Info:Detected invariants for Eqt:
  0: d*k - d*t - d1*k + d1*t == 0
  1: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
60.6104288101

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 38 invs
refine:Debug:rfilter(|ps|=38, |tcs|=1000)
refine:Debug:rfilter (before 38, after 5, diff 33)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 3, diff 2)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
63.8852579594

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 41 invs
refine:Debug:rfilter(|ps|=41, |tcs|=1000)
refine:Debug:rfilter (before 41, after 3, diff 38)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
61.1857788563

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 39 invs
refine:Debug:rfilter(|ps|=39, |tcs|=1000)
refine:Debug:rfilter (before 39, after 3, diff 36)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
61.5922141075

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 37 invs
refine:Debug:rfilter(|ps|=37, |tcs|=1000)
refine:Debug:rfilter (before 37, after 9, diff 28)
refine:Debug:rinfer(|ps|=9)
refine:Debug:rinfer (before 9, after 3, diff 6)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
62.6038570404

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 45 invs
refine:Debug:rfilter(|ps|=45, |tcs|=1000)
refine:Debug:rfilter (before 45, after 2, diff 43)
refine:Debug:rinfer(|ps|=2)
refine:Debug:rinfer (before 2, after 2, diff 0)
dig:Info:Detected invariants for Eqt:
  0: d*k - d*t - d1*k + d1*t == 0
  1: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
62.2983620167

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 38 invs
refine:Debug:rfilter(|ps|=38, |tcs|=1000)
refine:Debug:rfilter (before 38, after 8, diff 30)
refine:Debug:rinfer(|ps|=8)
refine:Debug:rinfer (before 8, after 3, diff 5)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
65.3829391003

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 41 invs
refine:Debug:rfilter(|ps|=41, |tcs|=1000)
refine:Debug:rfilter (before 41, after 5, diff 36)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 3, diff 2)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
61.0227799416

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 3, diff 37)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
61.6690340042

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 41 invs
refine:Debug:rfilter(|ps|=41, |tcs|=1000)
refine:Debug:rfilter (before 41, after 6, diff 35)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 2, diff 4)
dig:Info:Detected invariants for Eqt:
  0: d*k - d*t - d1*k + d1*t == 0
  1: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
59.2130630016

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 43 invs
refine:Debug:rfilter(|ps|=43, |tcs|=1000)
refine:Debug:rfilter (before 43, after 3, diff 40)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
60.0412428379

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 42 invs
refine:Debug:rfilter(|ps|=42, |tcs|=1000)
refine:Debug:rfilter (before 42, after 3, diff 39)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
60.8958730698

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 43 invs
refine:Debug:rfilter(|ps|=43, |tcs|=1000)
refine:Debug:rfilter (before 43, after 3, diff 40)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
60.8907060623

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 39 invs
refine:Debug:rfilter(|ps|=39, |tcs|=1000)
refine:Debug:rfilter (before 39, after 5, diff 34)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 3, diff 2)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
63.5227248669

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 41 invs
refine:Debug:rfilter(|ps|=41, |tcs|=1000)
refine:Debug:rfilter (before 41, after 3, diff 38)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
61.0607018471

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 41 invs
refine:Debug:rfilter(|ps|=41, |tcs|=1000)
refine:Debug:rfilter (before 41, after 3, diff 38)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
61.0655231476

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 43 invs
refine:Debug:rfilter(|ps|=43, |tcs|=1000)
refine:Debug:rfilter (before 43, after 3, diff 40)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
60.2256858349

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 44 invs
refine:Debug:rfilter(|ps|=44, |tcs|=1000)
refine:Debug:rfilter (before 44, after 2, diff 42)
refine:Debug:rinfer(|ps|=2)
refine:Debug:rinfer (before 2, after 2, diff 0)
dig:Info:Detected invariants for Eqt:
  0: d*k - d*t - d1*k + d1*t == 0
  1: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
60.7087450027


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/knuth.l0.tcs'
Expect (1): ddq - 4rd + 4kd - 2qd + 8r = 8n
* Run 0, time 58.0372941494, deg 3
  0: -1/4*d^2*q - d*k + 1/2*d*q + d*rvu + 2*nvu - 2*rvu == 0
* Run 1, time 61.0794811249, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 2, time 60.6104288101, deg 3
  0: d*k - d*t - d1*k + d1*t == 0
  1: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 3, time 63.8852579594, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 4, time 61.1857788563, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 5, time 61.5922141075, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 6, time 62.6038570404, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 7, time 62.2983620167, deg 3
  0: d*k - d*t - d1*k + d1*t == 0
  1: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 8, time 65.3829391003, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 9, time 61.0227799416, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 10, time 61.6690340042, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 11, time 59.2130630016, deg 3
  0: d*k - d*t - d1*k + d1*t == 0
  1: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 12, time 60.0412428379, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 13, time 60.8958730698, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 14, time 60.8907060623, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 15, time 63.5227248669, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 16, time 61.0607018471, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 17, time 61.0655231476, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 18, time 60.2256858349, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 19, time 60.7087450027, deg 3
  0: d*k - d*t - d1*k + d1*t == 0
  1: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
TIME AVG 61.3 (../invgen/Traces/NLA_tosem/multilocs/l0/knuth.l0.tcs)


***** (16) Generate invs from file 'lcm1.l0.tcs' *****

dig:Info:2013-06-24 20:35:38.277657, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 4193
1. vs: [a, b, u, v, x, y]
2. xinfo: 
 0. All: ['a', 'b', 'u', 'v', 'x', 'y']
 1. Assume: []
 2. Const: []
 3. Expect: ['xu + yv = ab']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/lcm1.l0.tcs", |vs|=6, deg=3, |terms|=84

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=4193
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/4193 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - u*x - v*y == 0
8.79134011269

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=4193
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/4193 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - u*x - v*y == 0
8.82746386528

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=4193
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/4193 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - u*x - v*y == 0
8.65814399719

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=4193
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/4193 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - u*x - v*y == 0
8.83742904663

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=4193
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/4193 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - u*x - v*y == 0
8.53700995445

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=4193
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/4193 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - u*x - v*y == 0
9.08387589455

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=4193
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/4193 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - u*x - v*y == 0
8.51844406128

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=4193
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/4193 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - u*x - v*y == 0
8.26107001305

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=4193
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/4193 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - u*x - v*y == 0
8.32055592537

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=4193
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/4193 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - u*x - v*y == 0
8.59491205215

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=4193
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/4193 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - u*x - v*y == 0
8.82289505005

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=4193
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/4193 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - u*x - v*y == 0
8.94635510445

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=4193
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/4193 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - u*x - v*y == 0
8.9071700573

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=4193
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/4193 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - u*x - v*y == 0
8.36989712715

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=4193
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/4193 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - u*x - v*y == 0
8.92026805878

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=4193
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/4193 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - u*x - v*y == 0
8.80061101913

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=4193
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/4193 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - u*x - v*y == 0
8.73680400848

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=4193
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/4193 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - u*x - v*y == 0
8.75487589836

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=4193
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/4193 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - u*x - v*y == 0
8.52287793159

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=4193
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/4193 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - u*x - v*y == 0
8.07546401024


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/lcm1.l0.tcs'
Expect (1): xu + yv = ab
* Run 0, time 8.79134011269, deg 3
  0: a*b - u*x - v*y == 0
* Run 1, time 8.82746386528, deg 3
  0: a*b - u*x - v*y == 0
* Run 2, time 8.65814399719, deg 3
  0: a*b - u*x - v*y == 0
* Run 3, time 8.83742904663, deg 3
  0: a*b - u*x - v*y == 0
* Run 4, time 8.53700995445, deg 3
  0: a*b - u*x - v*y == 0
* Run 5, time 9.08387589455, deg 3
  0: a*b - u*x - v*y == 0
* Run 6, time 8.51844406128, deg 3
  0: a*b - u*x - v*y == 0
* Run 7, time 8.26107001305, deg 3
  0: a*b - u*x - v*y == 0
* Run 8, time 8.32055592537, deg 3
  0: a*b - u*x - v*y == 0
* Run 9, time 8.59491205215, deg 3
  0: a*b - u*x - v*y == 0
* Run 10, time 8.82289505005, deg 3
  0: a*b - u*x - v*y == 0
* Run 11, time 8.94635510445, deg 3
  0: a*b - u*x - v*y == 0
* Run 12, time 8.9071700573, deg 3
  0: a*b - u*x - v*y == 0
* Run 13, time 8.36989712715, deg 3
  0: a*b - u*x - v*y == 0
* Run 14, time 8.92026805878, deg 3
  0: a*b - u*x - v*y == 0
* Run 15, time 8.80061101913, deg 3
  0: a*b - u*x - v*y == 0
* Run 16, time 8.73680400848, deg 3
  0: a*b - u*x - v*y == 0
* Run 17, time 8.75487589836, deg 3
  0: a*b - u*x - v*y == 0
* Run 18, time 8.52287793159, deg 3
  0: a*b - u*x - v*y == 0
* Run 19, time 8.07546401024, deg 3
  0: a*b - u*x - v*y == 0
TIME AVG 8.7 (../invgen/Traces/NLA_tosem/multilocs/l0/lcm1.l0.tcs)


***** (17) Generate invs from file 'lcm2.l0.tcs' *****

dig:Info:2013-06-24 20:38:32.059392, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 103857
1. vs: [a, b, u, v, x, y]
2. xinfo: 
 0. All: ['a', 'b', 'u', 'v', 'x', 'y']
 1. Assume: []
 2. Const: []
 3. Expect: ['xu + yv = 2ab']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/lcm2.l0.tcs", |vs|=6, deg=3, |terms|=84

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=103857
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/103857 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - 1/2*u*x - 1/2*v*y == 0
9.33075404167

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=103857
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/103857 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - 1/2*u*x - 1/2*v*y == 0
8.85320401192

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=103857
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/103857 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - 1/2*u*x - 1/2*v*y == 0
9.13275694847

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=103857
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/103857 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 9 invs
refine:Debug:rfilter(|ps|=9, |tcs|=1000)
refine:Debug:rfilter (before 9, after 7, diff 2)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - 1/2*u*x - 1/2*v*y == 0
15.1023960114

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=103857
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/103857 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - 1/2*u*x - 1/2*v*y == 0
9.12510299683

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=103857
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/103857 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - 1/2*u*x - 1/2*v*y == 0
8.95868992805

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=103857
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/103857 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - 1/2*u*x - 1/2*v*y == 0
9.3694460392

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=103857
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/103857 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - 1/2*u*x - 1/2*v*y == 0
8.9447851181

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=103857
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/103857 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - 1/2*u*x - 1/2*v*y == 0
9.15833091736

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=103857
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/103857 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - 1/2*u*x - 1/2*v*y == 0
8.99850702286

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=103857
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/103857 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - 1/2*u*x - 1/2*v*y == 0
9.29244709015

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=103857
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/103857 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 16 invs
refine:Debug:rfilter(|ps|=16, |tcs|=1000)
refine:Debug:rfilter (before 16, after 6, diff 10)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 1, diff 5)
dig:Info:Detected invariants for Eqt:
  0: a*b - 1/2*u*x - 1/2*v*y == 0
24.0797729492

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=103857
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/103857 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 19 invs
refine:Debug:rfilter(|ps|=19, |tcs|=1000)
refine:Debug:rfilter (before 19, after 4, diff 15)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: a*b - 1/2*u*x - 1/2*v*y == 0
24.9919102192

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=103857
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/103857 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - 1/2*u*x - 1/2*v*y == 0
8.89599299431

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=103857
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/103857 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - 1/2*u*x - 1/2*v*y == 0
9.07595205307

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=103857
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/103857 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - 1/2*u*x - 1/2*v*y == 0
9.02882599831

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=103857
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/103857 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - 1/2*u*x - 1/2*v*y == 0
8.97991585732

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=103857
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/103857 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=1000)
refine:Debug:rfilter (before 7, after 7, diff 0)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - 1/2*u*x - 1/2*v*y == 0
8.90896511078

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=103857
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/103857 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 11 invs
refine:Debug:rfilter(|ps|=11, |tcs|=1000)
refine:Debug:rfilter (before 11, after 7, diff 4)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - 1/2*u*x - 1/2*v*y == 0
17.4965469837

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=103857
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/103857 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 8 invs
refine:Debug:rfilter(|ps|=8, |tcs|=1000)
refine:Debug:rfilter (before 8, after 7, diff 1)
refine:Debug:rinfer(|ps|=7)
refine:Debug:rinfer (before 7, after 1, diff 6)
dig:Info:Detected invariants for Eqt:
  0: a*b - 1/2*u*x - 1/2*v*y == 0
13.1807188988


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/lcm2.l0.tcs'
Expect (1): xu + yv = 2ab
* Run 0, time 9.33075404167, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 1, time 8.85320401192, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 2, time 9.13275694847, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 3, time 15.1023960114, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 4, time 9.12510299683, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 5, time 8.95868992805, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 6, time 9.3694460392, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 7, time 8.9447851181, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 8, time 9.15833091736, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 9, time 8.99850702286, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 10, time 9.29244709015, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 11, time 24.0797729492, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 12, time 24.9919102192, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 13, time 8.89599299431, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 14, time 9.07595205307, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 15, time 9.02882599831, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 16, time 8.97991585732, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 17, time 8.90896511078, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 18, time 17.4965469837, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 19, time 13.1807188988, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
TIME AVG 11.5 (../invgen/Traces/NLA_tosem/multilocs/l0/lcm2.l0.tcs)


***** (18) Generate invs from file 'mannadiv.l0.tcs' *****

dig:Info:2013-06-24 20:42:30.607386, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 502681
1. vs: [x1, x2, y1, y2, y3]
2. xinfo: 
 0. All: ['x1', 'x2', 'y1', 'y2', 'y3']
 1. Assume: []
 2. Const: []
 3. Expect: ['x1 = x2*y1+y2+y3']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/mannadiv.l0.tcs", |vs|=5, deg=4, |terms|=126

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=502681
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/502681 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: x2*y1 - x1 + y2 + y3 == 0
23.0507378578

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=502681
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/502681 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: x2*y1 - x1 + y2 + y3 == 0
23.0099630356

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=502681
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/502681 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: x2*y1 - x1 + y2 + y3 == 0
22.3420197964

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=502681
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/502681 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: x2*y1 - x1 + y2 + y3 == 0
22.7895879745

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=502681
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/502681 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: x2*y1 - x1 + y2 + y3 == 0
24.0240721703

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=502681
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/502681 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 24 invs
refine:Debug:rfilter(|ps|=24, |tcs|=1000)
refine:Debug:rfilter (before 24, after 21, diff 3)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: x2*y1 - x1 + y2 + y3 == 0
23.5334069729

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=502681
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/502681 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: x2*y1 - x1 + y2 + y3 == 0
23.1452770233

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=502681
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/502681 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: x2*y1 - x1 + y2 + y3 == 0
23.6740608215

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=502681
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/502681 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: x2*y1 - x1 + y2 + y3 == 0
23.103053093

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=502681
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/502681 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 22 invs
refine:Debug:rfilter(|ps|=22, |tcs|=1000)
refine:Debug:rfilter (before 22, after 21, diff 1)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: x2*y1 - x1 + y2 + y3 == 0
23.0293998718

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=502681
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/502681 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: x2*y1 - x1 + y2 + y3 == 0
22.0374081135

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=502681
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/502681 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: x2*y1 - x1 + y2 + y3 == 0
22.270596981

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=502681
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/502681 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: x2*y1 - x1 + y2 + y3 == 0
25.7811529636

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=502681
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/502681 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: x2*y1 - x1 + y2 + y3 == 0
22.023763895

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=502681
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/502681 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 24 invs
refine:Debug:rfilter(|ps|=24, |tcs|=1000)
refine:Debug:rfilter (before 24, after 21, diff 3)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: x2*y1 - x1 + y2 + y3 == 0
22.2524080276

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=502681
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/502681 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: x2*y1 - x1 + y2 + y3 == 0
22.2627780437

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=502681
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/502681 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: x2*y1 - x1 + y2 + y3 == 0
23.6725280285

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=502681
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/502681 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: x2*y1 - x1 + y2 + y3 == 0
23.7700169086

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=502681
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/502681 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: x2*y1 - x1 + y2 + y3 == 0
22.8089849949

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=502681
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/502681 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: x2*y1 - x1 + y2 + y3 == 0
23.005412817


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/mannadiv.l0.tcs'
Expect (1): x1 = x2*y1+y2+y3
* Run 0, time 23.0507378578, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 1, time 23.0099630356, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 2, time 22.3420197964, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 3, time 22.7895879745, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 4, time 24.0240721703, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 5, time 23.5334069729, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 6, time 23.1452770233, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 7, time 23.6740608215, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 8, time 23.103053093, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 9, time 23.0293998718, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 10, time 22.0374081135, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 11, time 22.270596981, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 12, time 25.7811529636, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 13, time 22.023763895, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 14, time 22.2524080276, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 15, time 22.2627780437, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 16, time 23.6725280285, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 17, time 23.7700169086, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 18, time 22.8089849949, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 19, time 23.005412817, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
TIME AVG 23.1 (../invgen/Traces/NLA_tosem/multilocs/l0/mannadiv.l0.tcs)


***** (19) Generate invs from file 'prod4br.l0.tcs' *****

dig:Info:2013-06-24 20:50:36.977270, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 19638
1. vs: [a, b, p, q, x, y]
2. xinfo: 
 0. All: ['a', 'b', 'p', 'q', 'x', 'y']
 1. Assume: []
 2. Const: []
 3. Expect: ['q+abp = xy']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/prod4br.l0.tcs", |vs|=6, deg=3, |terms|=84

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=19638
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/19638 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=1000)
refine:Debug:rfilter (before 1, after 1, diff 0)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: a*b*p - x*y + q == 0
8.42133498192

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=19638
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/19638 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=1000)
refine:Debug:rfilter (before 1, after 1, diff 0)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: a*b*p - x*y + q == 0
8.19017601013

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=19638
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/19638 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=1000)
refine:Debug:rfilter (before 1, after 1, diff 0)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: a*b*p - x*y + q == 0
8.23447489738

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=19638
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/19638 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=1000)
refine:Debug:rfilter (before 1, after 1, diff 0)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: a*b*p - x*y + q == 0
8.1797478199

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=19638
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/19638 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=1000)
refine:Debug:rfilter (before 1, after 1, diff 0)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: a*b*p - x*y + q == 0
8.36139512062

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=19638
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/19638 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=1000)
refine:Debug:rfilter (before 1, after 1, diff 0)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: a*b*p - x*y + q == 0
8.0543320179

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=19638
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/19638 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=1000)
refine:Debug:rfilter (before 1, after 1, diff 0)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: a*b*p - x*y + q == 0
8.36902594566

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=19638
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/19638 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=1000)
refine:Debug:rfilter (before 1, after 1, diff 0)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: a*b*p - x*y + q == 0
8.22853088379

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=19638
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/19638 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=1000)
refine:Debug:rfilter (before 1, after 1, diff 0)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: a*b*p - x*y + q == 0
8.32212090492

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=19638
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/19638 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=1000)
refine:Debug:rfilter (before 1, after 1, diff 0)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: a*b*p - x*y + q == 0
8.07545113564

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=19638
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/19638 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=1000)
refine:Debug:rfilter (before 1, after 1, diff 0)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: a*b*p - x*y + q == 0
8.21514391899

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=19638
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/19638 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=1000)
refine:Debug:rfilter (before 1, after 1, diff 0)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: a*b*p - x*y + q == 0
8.10956001282

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=19638
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/19638 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=1000)
refine:Debug:rfilter (before 1, after 1, diff 0)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: a*b*p - x*y + q == 0
8.19626402855

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=19638
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/19638 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=1000)
refine:Debug:rfilter (before 1, after 1, diff 0)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: a*b*p - x*y + q == 0
8.00959086418

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=19638
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/19638 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=1000)
refine:Debug:rfilter (before 1, after 1, diff 0)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: a*b*p - x*y + q == 0
8.31142878532

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=19638
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/19638 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=1000)
refine:Debug:rfilter (before 1, after 1, diff 0)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: a*b*p - x*y + q == 0
8.06969404221

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=19638
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/19638 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=1000)
refine:Debug:rfilter (before 1, after 1, diff 0)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: a*b*p - x*y + q == 0
8.35776615143

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=19638
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/19638 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=1000)
refine:Debug:rfilter (before 1, after 1, diff 0)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: a*b*p - x*y + q == 0
8.31435990334

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=19638
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/19638 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=1000)
refine:Debug:rfilter (before 1, after 1, diff 0)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: a*b*p - x*y + q == 0
8.19616007805

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=84, |tcs|=19638
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=126, |tcs2|=1000 (attempted 126/19638 tcs)
dig:Info:Compute invs over 126 tcs
dig_miscs:Debug:Create equations from 126 traces
dig_miscs:Debug:Solve 126 (uniq) eqts for 84 unknowns
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=1000)
refine:Debug:rfilter (before 1, after 1, diff 0)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: a*b*p - x*y + q == 0
8.27909207344


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/prod4br.l0.tcs'
Expect (1): q+abp = xy
* Run 0, time 8.42133498192, deg 3
  0: a*b*p - x*y + q == 0
* Run 1, time 8.19017601013, deg 3
  0: a*b*p - x*y + q == 0
* Run 2, time 8.23447489738, deg 3
  0: a*b*p - x*y + q == 0
* Run 3, time 8.1797478199, deg 3
  0: a*b*p - x*y + q == 0
* Run 4, time 8.36139512062, deg 3
  0: a*b*p - x*y + q == 0
* Run 5, time 8.0543320179, deg 3
  0: a*b*p - x*y + q == 0
* Run 6, time 8.36902594566, deg 3
  0: a*b*p - x*y + q == 0
* Run 7, time 8.22853088379, deg 3
  0: a*b*p - x*y + q == 0
* Run 8, time 8.32212090492, deg 3
  0: a*b*p - x*y + q == 0
* Run 9, time 8.07545113564, deg 3
  0: a*b*p - x*y + q == 0
* Run 10, time 8.21514391899, deg 3
  0: a*b*p - x*y + q == 0
* Run 11, time 8.10956001282, deg 3
  0: a*b*p - x*y + q == 0
* Run 12, time 8.19626402855, deg 3
  0: a*b*p - x*y + q == 0
* Run 13, time 8.00959086418, deg 3
  0: a*b*p - x*y + q == 0
* Run 14, time 8.31142878532, deg 3
  0: a*b*p - x*y + q == 0
* Run 15, time 8.06969404221, deg 3
  0: a*b*p - x*y + q == 0
* Run 16, time 8.35776615143, deg 3
  0: a*b*p - x*y + q == 0
* Run 17, time 8.31435990334, deg 3
  0: a*b*p - x*y + q == 0
* Run 18, time 8.19616007805, deg 3
  0: a*b*p - x*y + q == 0
* Run 19, time 8.27909207344, deg 3
  0: a*b*p - x*y + q == 0
TIME AVG 8.2 (../invgen/Traces/NLA_tosem/multilocs/l0/prod4br.l0.tcs)


***** (20) Generate invs from file 'prodbin.l0.tcs' *****

dig:Info:2013-06-24 20:53:22.903689, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 12394
1. vs: [a, b, x, y, z]
2. xinfo: 
 0. All: ['a', 'b', 'x', 'y', 'z']
 1. Assume: []
 2. Const: []
 3. Expect: ['z+xy = a*b']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/prodbin.l0.tcs", |vs|=5, deg=4, |terms|=126

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=12394
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/12394 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: a*b - x*y - z == 0
32.2524030209

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=12394
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/12394 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: a*b - x*y - z == 0
32.3741269112

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=12394
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/12394 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: a*b - x*y - z == 0
32.3200559616

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=12394
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/12394 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: a*b - x*y - z == 0
32.6946220398

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=12394
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/12394 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: a*b - x*y - z == 0
31.8640098572

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=12394
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/12394 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: a*b - x*y - z == 0
31.1415250301

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=12394
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/12394 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: a*b - x*y - z == 0
32.6544220448

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=12394
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/12394 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: a*b - x*y - z == 0
31.3826949596

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=12394
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/12394 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: a*b - x*y - z == 0
33.7030768394

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=12394
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/12394 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: a*b - x*y - z == 0
32.51202178

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=12394
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/12394 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: a*b - x*y - z == 0
31.3021228313

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=12394
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/12394 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: a*b - x*y - z == 0
33.0498030186

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=12394
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/12394 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: a*b - x*y - z == 0
32.6595029831

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=12394
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/12394 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: a*b - x*y - z == 0
32.894217968

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=12394
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/12394 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: a*b - x*y - z == 0
32.8314659595

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=12394
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/12394 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: a*b - x*y - z == 0
32.529487133

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=12394
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/12394 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: a*b - x*y - z == 0
33.3455781937

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=12394
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/12394 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: a*b - x*y - z == 0
32.4115931988

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=12394
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/12394 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: a*b - x*y - z == 0
32.7396819592

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=12394
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/12394 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 21 invs
refine:Debug:rfilter(|ps|=21, |tcs|=1000)
refine:Debug:rfilter (before 21, after 21, diff 0)
refine:Debug:rinfer(|ps|=21)
refine:Debug:rinfer (before 21, after 1, diff 20)
dig:Info:Detected invariants for Eqt:
  0: a*b - x*y - z == 0
33.1554539204


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/prodbin.l0.tcs'
Expect (1): z+xy = a*b
* Run 0, time 32.2524030209, deg 4
  0: a*b - x*y - z == 0
* Run 1, time 32.3741269112, deg 4
  0: a*b - x*y - z == 0
* Run 2, time 32.3200559616, deg 4
  0: a*b - x*y - z == 0
* Run 3, time 32.6946220398, deg 4
  0: a*b - x*y - z == 0
* Run 4, time 31.8640098572, deg 4
  0: a*b - x*y - z == 0
* Run 5, time 31.1415250301, deg 4
  0: a*b - x*y - z == 0
* Run 6, time 32.6544220448, deg 4
  0: a*b - x*y - z == 0
* Run 7, time 31.3826949596, deg 4
  0: a*b - x*y - z == 0
* Run 8, time 33.7030768394, deg 4
  0: a*b - x*y - z == 0
* Run 9, time 32.51202178, deg 4
  0: a*b - x*y - z == 0
* Run 10, time 31.3021228313, deg 4
  0: a*b - x*y - z == 0
* Run 11, time 33.0498030186, deg 4
  0: a*b - x*y - z == 0
* Run 12, time 32.6595029831, deg 4
  0: a*b - x*y - z == 0
* Run 13, time 32.894217968, deg 4
  0: a*b - x*y - z == 0
* Run 14, time 32.8314659595, deg 4
  0: a*b - x*y - z == 0
* Run 15, time 32.529487133, deg 4
  0: a*b - x*y - z == 0
* Run 16, time 33.3455781937, deg 4
  0: a*b - x*y - z == 0
* Run 17, time 32.4115931988, deg 4
  0: a*b - x*y - z == 0
* Run 18, time 32.7396819592, deg 4
  0: a*b - x*y - z == 0
* Run 19, time 33.1554539204, deg 4
  0: a*b - x*y - z == 0
TIME AVG 32.5 (../invgen/Traces/NLA_tosem/multilocs/l0/prodbin.l0.tcs)


***** (21) Generate invs from file 'ps2.l0.tcs' *****

dig:Info:2013-06-24 21:04:13.395439, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 3088
1. vs: [k, x, y]
2. xinfo: 
 0. All: ['k', 'x', 'y']
 1. Assume: []
 2. Const: []
 3. Expect: ['2x - y^2 - y = 0']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 8 to 7
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/ps2.l0.tcs", |vs|=3, deg=7, |terms|=120

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: y^2 - 2*x + y == 0
28.8099820614

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: y^2 - 2*x + y == 0
28.9917681217

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: y^2 - 2*x + y == 0
28.8184440136

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: y^2 - 2*x + y == 0
29.013188839

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: y^2 - 2*x + y == 0
29.103290081

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: y^2 - 2*x + y == 0
29.2346889973

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: y^2 - 2*x + y == 0
28.8974640369

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: y^2 - 2*x + y == 0
33.790626049

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: y^2 - 2*x + y == 0
28.9206340313

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: y^2 - 2*x + y == 0
29.1555089951

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: y^2 - 2*x + y == 0
29.0592620373

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: y^2 - 2*x + y == 0
29.1157140732

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: y^2 - 2*x + y == 0
28.7085630894

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: y^2 - 2*x + y == 0
28.7898008823

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: y^2 - 2*x + y == 0
28.9883699417

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: y^2 - 2*x + y == 0
29.1270711422

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: y^2 - 2*x + y == 0
29.0161211491

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: y^2 - 2*x + y == 0
28.4054899216

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: y^2 - 2*x + y == 0
28.622136116

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 56 invs
refine:Debug:rfilter(|ps|=56, |tcs|=1000)
refine:Debug:rfilter (before 56, after 56, diff 0)
refine:Debug:rinfer(|ps|=56)
refine:Debug:rinfer (before 56, after 1, diff 55)
dig:Info:Detected invariants for Eqt:
  0: y^2 - 2*x + y == 0
29.2289872169


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/ps2.l0.tcs'
Expect (1): 2x - y^2 - y = 0
* Run 0, time 28.8099820614, deg 7
  0: y^2 - 2*x + y == 0
* Run 1, time 28.9917681217, deg 7
  0: y^2 - 2*x + y == 0
* Run 2, time 28.8184440136, deg 7
  0: y^2 - 2*x + y == 0
* Run 3, time 29.013188839, deg 7
  0: y^2 - 2*x + y == 0
* Run 4, time 29.103290081, deg 7
  0: y^2 - 2*x + y == 0
* Run 5, time 29.2346889973, deg 7
  0: y^2 - 2*x + y == 0
* Run 6, time 28.8974640369, deg 7
  0: y^2 - 2*x + y == 0
* Run 7, time 33.790626049, deg 7
  0: y^2 - 2*x + y == 0
* Run 8, time 28.9206340313, deg 7
  0: y^2 - 2*x + y == 0
* Run 9, time 29.1555089951, deg 7
  0: y^2 - 2*x + y == 0
* Run 10, time 29.0592620373, deg 7
  0: y^2 - 2*x + y == 0
* Run 11, time 29.1157140732, deg 7
  0: y^2 - 2*x + y == 0
* Run 12, time 28.7085630894, deg 7
  0: y^2 - 2*x + y == 0
* Run 13, time 28.7898008823, deg 7
  0: y^2 - 2*x + y == 0
* Run 14, time 28.9883699417, deg 7
  0: y^2 - 2*x + y == 0
* Run 15, time 29.1270711422, deg 7
  0: y^2 - 2*x + y == 0
* Run 16, time 29.0161211491, deg 7
  0: y^2 - 2*x + y == 0
* Run 17, time 28.4054899216, deg 7
  0: y^2 - 2*x + y == 0
* Run 18, time 28.622136116, deg 7
  0: y^2 - 2*x + y == 0
* Run 19, time 29.2289872169, deg 7
  0: y^2 - 2*x + y == 0
TIME AVG 29.2 (../invgen/Traces/NLA_tosem/multilocs/l0/ps2.l0.tcs)


***** (22) Generate invs from file 'ps3.l0.tcs' *****

dig:Info:2013-06-24 21:13:57.330591, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 3088
1. vs: [k, x, y]
2. xinfo: 
 0. All: ['k', 'x', 'y']
 1. Assume: []
 2. Const: []
 3. Expect: ['6x-2y^3-3y^2-y = 0']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 8 to 7
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/ps3.l0.tcs", |vs|=3, deg=7, |terms|=120

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
27.6781818867

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
28.1047489643

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
27.6465389729

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
27.9128148556

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
28.0794041157

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
27.9523429871

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
27.6861000061

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
27.1455378532

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
27.9318621159

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
27.9883050919

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
28.0620288849

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
27.9674351215

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
27.6701028347

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
27.5942261219

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
27.8420958519

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
28.063256979

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
27.9092850685

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
27.5283591747

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
27.6463899612

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 35 invs
refine:Debug:rfilter(|ps|=35, |tcs|=1000)
refine:Debug:rfilter (before 35, after 35, diff 0)
refine:Debug:rinfer(|ps|=35)
refine:Debug:rinfer (before 35, after 1, diff 34)
dig:Info:Detected invariants for Eqt:
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
29.3148441315


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/ps3.l0.tcs'
Expect (1): 6x-2y^3-3y^2-y = 0
* Run 0, time 27.6781818867, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 1, time 28.1047489643, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 2, time 27.6465389729, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 3, time 27.9128148556, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 4, time 28.0794041157, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 5, time 27.9523429871, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 6, time 27.6861000061, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 7, time 27.1455378532, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 8, time 27.9318621159, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 9, time 27.9883050919, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 10, time 28.0620288849, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 11, time 27.9674351215, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 12, time 27.6701028347, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 13, time 27.5942261219, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 14, time 27.8420958519, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 15, time 28.063256979, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 16, time 27.9092850685, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 17, time 27.5283591747, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 18, time 27.6463899612, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 19, time 29.3148441315, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
TIME AVG 27.9 (../invgen/Traces/NLA_tosem/multilocs/l0/ps3.l0.tcs)


***** (23) Generate invs from file 'ps4.l0.tcs' *****

dig:Info:2013-06-24 21:23:15.168878, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 3088
1. vs: [k, x, y]
2. xinfo: 
 0. All: ['k', 'x', 'y']
 1. Assume: []
 2. Const: []
 3. Expect: ['4x-y^4-2*y^3-y^2 = 0']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 8 to 7
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/ps4.l0.tcs", |vs|=3, deg=7, |terms|=120

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 20, diff 0)
refine:Debug:rinfer(|ps|=20)
refine:Debug:rinfer (before 20, after 1, diff 19)
dig:Info:Detected invariants for Eqt:
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
29.7373039722

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 20, diff 0)
refine:Debug:rinfer(|ps|=20)
refine:Debug:rinfer (before 20, after 1, diff 19)
dig:Info:Detected invariants for Eqt:
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
30.8229718208

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 20, diff 0)
refine:Debug:rinfer(|ps|=20)
refine:Debug:rinfer (before 20, after 1, diff 19)
dig:Info:Detected invariants for Eqt:
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
29.7839078903

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 20, diff 0)
refine:Debug:rinfer(|ps|=20)
refine:Debug:rinfer (before 20, after 1, diff 19)
dig:Info:Detected invariants for Eqt:
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
29.3355960846

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 20, diff 0)
refine:Debug:rinfer(|ps|=20)
refine:Debug:rinfer (before 20, after 1, diff 19)
dig:Info:Detected invariants for Eqt:
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
30.1817700863

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 20, diff 0)
refine:Debug:rinfer(|ps|=20)
refine:Debug:rinfer (before 20, after 1, diff 19)
dig:Info:Detected invariants for Eqt:
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
29.59770298

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 20, diff 0)
refine:Debug:rinfer(|ps|=20)
refine:Debug:rinfer (before 20, after 1, diff 19)
dig:Info:Detected invariants for Eqt:
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
29.1220080853

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 20, diff 0)
refine:Debug:rinfer(|ps|=20)
refine:Debug:rinfer (before 20, after 1, diff 19)
dig:Info:Detected invariants for Eqt:
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
29.1061251163

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 20, diff 0)
refine:Debug:rinfer(|ps|=20)
refine:Debug:rinfer (before 20, after 1, diff 19)
dig:Info:Detected invariants for Eqt:
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
30.0770921707

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 20, diff 0)
refine:Debug:rinfer(|ps|=20)
refine:Debug:rinfer (before 20, after 1, diff 19)
dig:Info:Detected invariants for Eqt:
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
29.6505010128

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 20, diff 0)
refine:Debug:rinfer(|ps|=20)
refine:Debug:rinfer (before 20, after 1, diff 19)
dig:Info:Detected invariants for Eqt:
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
29.3446609974

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 20, diff 0)
refine:Debug:rinfer(|ps|=20)
refine:Debug:rinfer (before 20, after 1, diff 19)
dig:Info:Detected invariants for Eqt:
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
29.5619170666

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 20, diff 0)
refine:Debug:rinfer(|ps|=20)
refine:Debug:rinfer (before 20, after 1, diff 19)
dig:Info:Detected invariants for Eqt:
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
29.7417440414

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 20, diff 0)
refine:Debug:rinfer(|ps|=20)
refine:Debug:rinfer (before 20, after 1, diff 19)
dig:Info:Detected invariants for Eqt:
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
29.5532391071

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 20, diff 0)
refine:Debug:rinfer(|ps|=20)
refine:Debug:rinfer (before 20, after 1, diff 19)
dig:Info:Detected invariants for Eqt:
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
29.9988658428

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 20, diff 0)
refine:Debug:rinfer(|ps|=20)
refine:Debug:rinfer (before 20, after 1, diff 19)
dig:Info:Detected invariants for Eqt:
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
29.4410409927

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 20, diff 0)
refine:Debug:rinfer(|ps|=20)
refine:Debug:rinfer (before 20, after 1, diff 19)
dig:Info:Detected invariants for Eqt:
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
29.8548779488

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 20, diff 0)
refine:Debug:rinfer(|ps|=20)
refine:Debug:rinfer (before 20, after 1, diff 19)
dig:Info:Detected invariants for Eqt:
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
29.3096950054

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 20, diff 0)
refine:Debug:rinfer(|ps|=20)
refine:Debug:rinfer (before 20, after 1, diff 19)
dig:Info:Detected invariants for Eqt:
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
28.9593400955

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=3088
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/3088 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 20 invs
refine:Debug:rfilter(|ps|=20, |tcs|=1000)
refine:Debug:rfilter (before 20, after 20, diff 0)
refine:Debug:rinfer(|ps|=20)
refine:Debug:rinfer (before 20, after 1, diff 19)
dig:Info:Detected invariants for Eqt:
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
29.8402059078


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/ps4.l0.tcs'
Expect (1): 4x-y^4-2*y^3-y^2 = 0
* Run 0, time 29.7373039722, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 1, time 30.8229718208, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 2, time 29.7839078903, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 3, time 29.3355960846, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 4, time 30.1817700863, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 5, time 29.59770298, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 6, time 29.1220080853, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 7, time 29.1061251163, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 8, time 30.0770921707, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 9, time 29.6505010128, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 10, time 29.3446609974, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 11, time 29.5619170666, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 12, time 29.7417440414, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 13, time 29.5532391071, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 14, time 29.9988658428, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 15, time 29.4410409927, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 16, time 29.8548779488, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 17, time 29.3096950054, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 18, time 28.9593400955, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 19, time 29.8402059078, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
TIME AVG 29.7 (../invgen/Traces/NLA_tosem/multilocs/l0/ps4.l0.tcs)


***** (24) Generate invs from file 'ps5.l0.tcs' *****

dig:Info:2013-06-24 21:33:08.312392, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 1665
1. vs: [k, x, y]
2. xinfo: 
 0. All: ['k', 'x', 'y']
 1. Assume: []
 2. Const: []
 3. Expect: ['6*y**5 + 15*y**4 + 10*y**3 - 30*x - y == 0']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 8 to 7
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/ps5.l0.tcs", |vs|=3, deg=7, |terms|=120

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=1665
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/1665 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 10, diff 0)
refine:Debug:rinfer(|ps|=10)
refine:Debug:rinfer (before 10, after 1, diff 9)
dig:Info:Detected invariants for Eqt:
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
29.4950559139

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=1665
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/1665 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 10, diff 0)
refine:Debug:rinfer(|ps|=10)
refine:Debug:rinfer (before 10, after 1, diff 9)
dig:Info:Detected invariants for Eqt:
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
30.1651029587

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=1665
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/1665 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 10, diff 0)
refine:Debug:rinfer(|ps|=10)
refine:Debug:rinfer (before 10, after 1, diff 9)
dig:Info:Detected invariants for Eqt:
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
29.6141571999

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=1665
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/1665 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 10, diff 0)
refine:Debug:rinfer(|ps|=10)
refine:Debug:rinfer (before 10, after 1, diff 9)
dig:Info:Detected invariants for Eqt:
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
30.6956870556

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=1665
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/1665 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 10, diff 0)
refine:Debug:rinfer(|ps|=10)
refine:Debug:rinfer (before 10, after 1, diff 9)
dig:Info:Detected invariants for Eqt:
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
30.5811369419

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=1665
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/1665 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 10, diff 0)
refine:Debug:rinfer(|ps|=10)
refine:Debug:rinfer (before 10, after 1, diff 9)
dig:Info:Detected invariants for Eqt:
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
30.905351162

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=1665
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/1665 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 10, diff 0)
refine:Debug:rinfer(|ps|=10)
refine:Debug:rinfer (before 10, after 1, diff 9)
dig:Info:Detected invariants for Eqt:
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
29.759939909

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=1665
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/1665 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 10, diff 0)
refine:Debug:rinfer(|ps|=10)
refine:Debug:rinfer (before 10, after 1, diff 9)
dig:Info:Detected invariants for Eqt:
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
31.4717650414

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=1665
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/1665 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 10, diff 0)
refine:Debug:rinfer(|ps|=10)
refine:Debug:rinfer (before 10, after 1, diff 9)
dig:Info:Detected invariants for Eqt:
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
30.3461577892

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=1665
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/1665 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 10, diff 0)
refine:Debug:rinfer(|ps|=10)
refine:Debug:rinfer (before 10, after 1, diff 9)
dig:Info:Detected invariants for Eqt:
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
30.4514210224

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=1665
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/1665 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 10, diff 0)
refine:Debug:rinfer(|ps|=10)
refine:Debug:rinfer (before 10, after 1, diff 9)
dig:Info:Detected invariants for Eqt:
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
29.7870600224

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=1665
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/1665 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 10, diff 0)
refine:Debug:rinfer(|ps|=10)
refine:Debug:rinfer (before 10, after 1, diff 9)
dig:Info:Detected invariants for Eqt:
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
30.3147201538

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=1665
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/1665 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 10, diff 0)
refine:Debug:rinfer(|ps|=10)
refine:Debug:rinfer (before 10, after 1, diff 9)
dig:Info:Detected invariants for Eqt:
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
30.3469290733

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=1665
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/1665 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 10, diff 0)
refine:Debug:rinfer(|ps|=10)
refine:Debug:rinfer (before 10, after 1, diff 9)
dig:Info:Detected invariants for Eqt:
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
30.041711092

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=1665
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/1665 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 10, diff 0)
refine:Debug:rinfer(|ps|=10)
refine:Debug:rinfer (before 10, after 1, diff 9)
dig:Info:Detected invariants for Eqt:
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
30.1371731758

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=1665
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/1665 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 10, diff 0)
refine:Debug:rinfer(|ps|=10)
refine:Debug:rinfer (before 10, after 1, diff 9)
dig:Info:Detected invariants for Eqt:
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
30.4065139294

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=1665
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/1665 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 10, diff 0)
refine:Debug:rinfer(|ps|=10)
refine:Debug:rinfer (before 10, after 1, diff 9)
dig:Info:Detected invariants for Eqt:
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
30.2938110828

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=1665
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/1665 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 10, diff 0)
refine:Debug:rinfer(|ps|=10)
refine:Debug:rinfer (before 10, after 1, diff 9)
dig:Info:Detected invariants for Eqt:
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
29.7311451435

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=1665
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/1665 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 10, diff 0)
refine:Debug:rinfer(|ps|=10)
refine:Debug:rinfer (before 10, after 1, diff 9)
dig:Info:Detected invariants for Eqt:
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
30.0056779385

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=1665
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=1000 (attempted 180/1665 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 10 invs
refine:Debug:rfilter(|ps|=10, |tcs|=1000)
refine:Debug:rfilter (before 10, after 10, diff 0)
refine:Debug:rinfer(|ps|=10)
refine:Debug:rinfer (before 10, after 1, diff 9)
dig:Info:Detected invariants for Eqt:
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
29.9914081097


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/ps5.l0.tcs'
Expect (1): 6*y**5 + 15*y**4 + 10*y**3 - 30*x - y == 0
* Run 0, time 29.4950559139, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 1, time 30.1651029587, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 2, time 29.6141571999, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 3, time 30.6956870556, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 4, time 30.5811369419, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 5, time 30.905351162, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 6, time 29.759939909, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 7, time 31.4717650414, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 8, time 30.3461577892, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 9, time 30.4514210224, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 10, time 29.7870600224, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 11, time 30.3147201538, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 12, time 30.3469290733, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 13, time 30.041711092, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 14, time 30.1371731758, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 15, time 30.4065139294, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 16, time 30.2938110828, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 17, time 29.7311451435, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 18, time 30.0056779385, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 19, time 29.9914081097, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
TIME AVG 30.2 (../invgen/Traces/NLA_tosem/multilocs/l0/ps5.l0.tcs)


***** (25) Generate invs from file 'ps6.l0.tcs' *****

dig:Info:2013-06-24 21:43:12.931289, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 820
1. vs: [k, x, y]
2. xinfo: 
 0. All: ['k', 'x', 'y']
 1. Assume: []
 2. Const: []
 3. Expect: ['-2*y**6 - 6*y**5 - 5*y**4 + y**2 + 12*x = 0.0']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 8 to 7
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/ps6.l0.tcs", |vs|=3, deg=7, |terms|=120

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=820
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=640 (attempted 180/820 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=640)
refine:Debug:rfilter (before 4, after 4, diff 0)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
29.2454419136

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=820
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=640 (attempted 180/820 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=640)
refine:Debug:rfilter (before 4, after 4, diff 0)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
27.4801559448

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=820
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=640 (attempted 180/820 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=640)
refine:Debug:rfilter (before 4, after 4, diff 0)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
29.7518980503

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=820
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=640 (attempted 180/820 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=640)
refine:Debug:rfilter (before 4, after 4, diff 0)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
29.8049840927

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=820
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=640 (attempted 180/820 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=640)
refine:Debug:rfilter (before 4, after 4, diff 0)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
26.7138340473

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=820
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=640 (attempted 180/820 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=640)
refine:Debug:rfilter (before 4, after 4, diff 0)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
28.7634019852

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=820
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=640 (attempted 180/820 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=640)
refine:Debug:rfilter (before 4, after 4, diff 0)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
28.9719469547

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=820
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=640 (attempted 180/820 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=640)
refine:Debug:rfilter (before 4, after 4, diff 0)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
28.7133359909

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=820
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=640 (attempted 180/820 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=640)
refine:Debug:rfilter (before 4, after 4, diff 0)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
26.3833169937

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=820
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=640 (attempted 180/820 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=640)
refine:Debug:rfilter (before 4, after 4, diff 0)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
27.7803509235

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=820
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=640 (attempted 180/820 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=640)
refine:Debug:rfilter (before 4, after 4, diff 0)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
28.3376400471

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=820
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=640 (attempted 180/820 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=640)
refine:Debug:rfilter (before 4, after 4, diff 0)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
29.0506830215

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=820
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=640 (attempted 180/820 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=640)
refine:Debug:rfilter (before 4, after 4, diff 0)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
28.3224420547

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=820
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=640 (attempted 180/820 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=640)
refine:Debug:rfilter (before 4, after 4, diff 0)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
29.9450001717

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=820
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=640 (attempted 180/820 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=640)
refine:Debug:rfilter (before 4, after 4, diff 0)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
25.3807020187

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=820
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=640 (attempted 180/820 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=640)
refine:Debug:rfilter (before 4, after 4, diff 0)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
27.4263930321

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=820
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=640 (attempted 180/820 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=640)
refine:Debug:rfilter (before 4, after 4, diff 0)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
28.7347900867

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=820
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=640 (attempted 180/820 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=640)
refine:Debug:rfilter (before 4, after 4, diff 0)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
28.4480679035

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=820
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=640 (attempted 180/820 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=640)
refine:Debug:rfilter (before 4, after 4, diff 0)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
27.4926800728

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=120, |tcs|=820
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=180, |tcs2|=640 (attempted 180/820 tcs)
dig:Info:Compute invs over 180 tcs
dig_miscs:Debug:Create equations from 180 traces
dig_miscs:Debug:Solve 180 (uniq) eqts for 120 unknowns
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=640)
refine:Debug:rfilter (before 4, after 4, diff 0)
refine:Debug:rinfer(|ps|=4)
refine:Debug:rinfer (before 4, after 1, diff 3)
dig:Info:Detected invariants for Eqt:
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
27.1126868725


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/ps6.l0.tcs'
Expect (1): -2*y**6 - 6*y**5 - 5*y**4 + y**2 + 12*x = 0.0
* Run 0, time 29.2454419136, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 1, time 27.4801559448, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 2, time 29.7518980503, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 3, time 29.8049840927, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 4, time 26.7138340473, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 5, time 28.7634019852, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 6, time 28.9719469547, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 7, time 28.7133359909, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 8, time 26.3833169937, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 9, time 27.7803509235, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 10, time 28.3376400471, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 11, time 29.0506830215, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 12, time 28.3224420547, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 13, time 29.9450001717, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 14, time 25.3807020187, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 15, time 27.4263930321, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 16, time 28.7347900867, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 17, time 28.4480679035, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 18, time 27.4926800728, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 19, time 27.1126868725, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
TIME AVG 28.2 (../invgen/Traces/NLA_tosem/multilocs/l0/ps6.l0.tcs)


***** (26) Generate invs from file 'sqrt1.l0.tcs' *****

dig:Info:2013-06-24 21:52:36.841556, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 64362
1. vs: [a, nvu, s, t]
2. xinfo: 
 0. All: ['a', 'nvu', 's', 't']
 1. Assume: [s <= nvu, a >= 0]
 2. Const: []
 3. Expect: ['s = (a+1)*(a+1)', 't = 2*a + 1', 'a*a <= nvu']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/NLA_tosem/multilocs/l0/sqrt1.l0.tcs", |vs|=4, deg=5, |terms|=126

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=64362
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/64362 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 90 invs
refine:Debug:rfilter(|ps|=90, |tcs|=1000)
refine:Debug:rfilter (before 90, after 90, diff 0)
refine:Debug:rinfer(|ps|=90)
refine:Debug:rinfer (before 90, after 2, diff 88)
dig:Info:Detected invariants for Eqt:
  0: t^2 - 4*s + 2*t + 1 == 0
  1: a - 1/2*t + 1/2 == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=2, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=2,|eqts|=2)
inv_polynomials:Debug:assumed ps: -nvu + s <= 0, a >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: 1/2*t - 1/2 >= 0
  1: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
39.0975117683

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=64362
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/64362 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 90 invs
refine:Debug:rfilter(|ps|=90, |tcs|=1000)
refine:Debug:rfilter (before 90, after 90, diff 0)
refine:Debug:rinfer(|ps|=90)
refine:Debug:rinfer (before 90, after 2, diff 88)
dig:Info:Detected invariants for Eqt:
  0: t^2 - 4*s + 2*t + 1 == 0
  1: a - 1/2*t + 1/2 == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=2, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=2,|eqts|=2)
inv_polynomials:Debug:assumed ps: -nvu + s <= 0, a >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: 1/2*t - 1/2 >= 0
  1: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
39.2895281315

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=64362
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/64362 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 90 invs
refine:Debug:rfilter(|ps|=90, |tcs|=1000)
refine:Debug:rfilter (before 90, after 90, diff 0)
refine:Debug:rinfer(|ps|=90)
refine:Debug:rinfer (before 90, after 2, diff 88)
dig:Info:Detected invariants for Eqt:
  0: t^2 - 4*s + 2*t + 1 == 0
  1: a - 1/2*t + 1/2 == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=2, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=2,|eqts|=2)
inv_polynomials:Debug:assumed ps: -nvu + s <= 0, a >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: 1/2*t - 1/2 >= 0
  1: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
39.9965441227

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=64362
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/64362 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 90 invs
refine:Debug:rfilter(|ps|=90, |tcs|=1000)
refine:Debug:rfilter (before 90, after 90, diff 0)
refine:Debug:rinfer(|ps|=90)
refine:Debug:rinfer (before 90, after 2, diff 88)
dig:Info:Detected invariants for Eqt:
  0: t^2 - 4*s + 2*t + 1 == 0
  1: a - 1/2*t + 1/2 == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=2, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=2,|eqts|=2)
inv_polynomials:Debug:assumed ps: -nvu + s <= 0, a >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: 1/2*t - 1/2 >= 0
  1: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
39.0885288715

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=64362
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/64362 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 90 invs
refine:Debug:rfilter(|ps|=90, |tcs|=1000)
refine:Debug:rfilter (before 90, after 90, diff 0)
refine:Debug:rinfer(|ps|=90)
refine:Debug:rinfer (before 90, after 2, diff 88)
dig:Info:Detected invariants for Eqt:
  0: t^2 - 4*s + 2*t + 1 == 0
  1: a - 1/2*t + 1/2 == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=2, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=2,|eqts|=2)
inv_polynomials:Debug:assumed ps: -nvu + s <= 0, a >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: 1/2*t - 1/2 >= 0
  1: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
39.1296150684

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=64362
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/64362 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 90 invs
refine:Debug:rfilter(|ps|=90, |tcs|=1000)
refine:Debug:rfilter (before 90, after 90, diff 0)
refine:Debug:rinfer(|ps|=90)
refine:Debug:rinfer (before 90, after 2, diff 88)
dig:Info:Detected invariants for Eqt:
  0: t^2 - 4*s + 2*t + 1 == 0
  1: a - 1/2*t + 1/2 == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=2, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=2,|eqts|=2)
inv_polynomials:Debug:assumed ps: -nvu + s <= 0, a >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: 1/2*t - 1/2 >= 0
  1: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
39.7290599346

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=64362
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/64362 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 90 invs
refine:Debug:rfilter(|ps|=90, |tcs|=1000)
refine:Debug:rfilter (before 90, after 90, diff 0)
refine:Debug:rinfer(|ps|=90)
refine:Debug:rinfer (before 90, after 2, diff 88)
dig:Info:Detected invariants for Eqt:
  0: t^2 - 4*s + 2*t + 1 == 0
  1: a - 1/2*t + 1/2 == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=2, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=2,|eqts|=2)
inv_polynomials:Debug:assumed ps: -nvu + s <= 0, a >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: 1/2*t - 1/2 >= 0
  1: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
39.4013431072

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=64362
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/64362 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 90 invs
refine:Debug:rfilter(|ps|=90, |tcs|=1000)
refine:Debug:rfilter (before 90, after 90, diff 0)
refine:Debug:rinfer(|ps|=90)
refine:Debug:rinfer (before 90, after 2, diff 88)
dig:Info:Detected invariants for Eqt:
  0: t^2 - 4*s + 2*t + 1 == 0
  1: a - 1/2*t + 1/2 == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=2, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=2,|eqts|=2)
inv_polynomials:Debug:assumed ps: -nvu + s <= 0, a >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: 1/2*t - 1/2 >= 0
  1: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
39.271684885

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=64362
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/64362 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 90 invs
refine:Debug:rfilter(|ps|=90, |tcs|=1000)
refine:Debug:rfilter (before 90, after 90, diff 0)
refine:Debug:rinfer(|ps|=90)
refine:Debug:rinfer (before 90, after 2, diff 88)
dig:Info:Detected invariants for Eqt:
  0: t^2 - 4*s + 2*t + 1 == 0
  1: a - 1/2*t + 1/2 == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=2, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=2,|eqts|=2)
inv_polynomials:Debug:assumed ps: -nvu + s <= 0, a >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: 1/2*t - 1/2 >= 0
  1: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
39.4439649582

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=64362
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/64362 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 90 invs
refine:Debug:rfilter(|ps|=90, |tcs|=1000)
refine:Debug:rfilter (before 90, after 90, diff 0)
refine:Debug:rinfer(|ps|=90)
refine:Debug:rinfer (before 90, after 2, diff 88)
dig:Info:Detected invariants for Eqt:
  0: t^2 - 4*s + 2*t + 1 == 0
  1: a - 1/2*t + 1/2 == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=2, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=2,|eqts|=2)
inv_polynomials:Debug:assumed ps: -nvu + s <= 0, a >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: 1/2*t - 1/2 >= 0
  1: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
39.2352509499

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=64362
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/64362 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 90 invs
refine:Debug:rfilter(|ps|=90, |tcs|=1000)
refine:Debug:rfilter (before 90, after 90, diff 0)
refine:Debug:rinfer(|ps|=90)
refine:Debug:rinfer (before 90, after 2, diff 88)
dig:Info:Detected invariants for Eqt:
  0: t^2 - 4*s + 2*t + 1 == 0
  1: a - 1/2*t + 1/2 == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=2, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=2,|eqts|=2)
inv_polynomials:Debug:assumed ps: -nvu + s <= 0, a >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: 1/2*t - 1/2 >= 0
  1: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
39.4818880558

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=64362
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/64362 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 90 invs
refine:Debug:rfilter(|ps|=90, |tcs|=1000)
refine:Debug:rfilter (before 90, after 90, diff 0)
refine:Debug:rinfer(|ps|=90)
refine:Debug:rinfer (before 90, after 2, diff 88)
dig:Info:Detected invariants for Eqt:
  0: t^2 - 4*s + 2*t + 1 == 0
  1: a - 1/2*t + 1/2 == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=2, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=2,|eqts|=2)
inv_polynomials:Debug:assumed ps: -nvu + s <= 0, a >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: 1/2*t - 1/2 >= 0
  1: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
40.246573925

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=64362
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/64362 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 90 invs
refine:Debug:rfilter(|ps|=90, |tcs|=1000)
refine:Debug:rfilter (before 90, after 90, diff 0)
refine:Debug:rinfer(|ps|=90)
refine:Debug:rinfer (before 90, after 2, diff 88)
dig:Info:Detected invariants for Eqt:
  0: t^2 - 4*s + 2*t + 1 == 0
  1: a - 1/2*t + 1/2 == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=2, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=2,|eqts|=2)
inv_polynomials:Debug:assumed ps: -nvu + s <= 0, a >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: 1/2*t - 1/2 >= 0
  1: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
40.3670239449

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=64362
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/64362 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 90 invs
refine:Debug:rfilter(|ps|=90, |tcs|=1000)
refine:Debug:rfilter (before 90, after 90, diff 0)
refine:Debug:rinfer(|ps|=90)
refine:Debug:rinfer (before 90, after 2, diff 88)
dig:Info:Detected invariants for Eqt:
  0: t^2 - 4*s + 2*t + 1 == 0
  1: a - 1/2*t + 1/2 == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=2, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=2,|eqts|=2)
inv_polynomials:Debug:assumed ps: -nvu + s <= 0, a >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: 1/2*t - 1/2 >= 0
  1: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
38.8961369991

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=64362
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/64362 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 90 invs
refine:Debug:rfilter(|ps|=90, |tcs|=1000)
refine:Debug:rfilter (before 90, after 90, diff 0)
refine:Debug:rinfer(|ps|=90)
refine:Debug:rinfer (before 90, after 2, diff 88)
dig:Info:Detected invariants for Eqt:
  0: t^2 - 4*s + 2*t + 1 == 0
  1: a - 1/2*t + 1/2 == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=2, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=2,|eqts|=2)
inv_polynomials:Debug:assumed ps: -nvu + s <= 0, a >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: 1/2*t - 1/2 >= 0
  1: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
39.2475619316

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=64362
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/64362 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 90 invs
refine:Debug:rfilter(|ps|=90, |tcs|=1000)
refine:Debug:rfilter (before 90, after 90, diff 0)
refine:Debug:rinfer(|ps|=90)
refine:Debug:rinfer (before 90, after 2, diff 88)
dig:Info:Detected invariants for Eqt:
  0: t^2 - 4*s + 2*t + 1 == 0
  1: a - 1/2*t + 1/2 == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=2, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=2,|eqts|=2)
inv_polynomials:Debug:assumed ps: -nvu + s <= 0, a >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: 1/2*t - 1/2 >= 0
  1: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
39.4288887978

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=64362
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/64362 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 90 invs
refine:Debug:rfilter(|ps|=90, |tcs|=1000)
refine:Debug:rfilter (before 90, after 90, diff 0)
refine:Debug:rinfer(|ps|=90)
refine:Debug:rinfer (before 90, after 2, diff 88)
dig:Info:Detected invariants for Eqt:
  0: t^2 - 4*s + 2*t + 1 == 0
  1: a - 1/2*t + 1/2 == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=2, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=2,|eqts|=2)
inv_polynomials:Debug:assumed ps: -nvu + s <= 0, a >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: 1/2*t - 1/2 >= 0
  1: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
39.2719070911

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=64362
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/64362 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 90 invs
refine:Debug:rfilter(|ps|=90, |tcs|=1000)
refine:Debug:rfilter (before 90, after 90, diff 0)
refine:Debug:rinfer(|ps|=90)
refine:Debug:rinfer (before 90, after 2, diff 88)
dig:Info:Detected invariants for Eqt:
  0: t^2 - 4*s + 2*t + 1 == 0
  1: a - 1/2*t + 1/2 == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=2, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=2,|eqts|=2)
inv_polynomials:Debug:assumed ps: -nvu + s <= 0, a >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: 1/2*t - 1/2 >= 0
  1: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
39.9064030647

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=64362
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/64362 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 90 invs
refine:Debug:rfilter(|ps|=90, |tcs|=1000)
refine:Debug:rfilter (before 90, after 90, diff 0)
refine:Debug:rinfer(|ps|=90)
refine:Debug:rinfer (before 90, after 2, diff 88)
dig:Info:Detected invariants for Eqt:
  0: t^2 - 4*s + 2*t + 1 == 0
  1: a - 1/2*t + 1/2 == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=2, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=2,|eqts|=2)
inv_polynomials:Debug:assumed ps: -nvu + s <= 0, a >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: 1/2*t - 1/2 >= 0
  1: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
39.5892190933

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=126, |tcs|=64362
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=189, |tcs2|=1000 (attempted 189/64362 tcs)
dig:Info:Compute invs over 189 tcs
dig_miscs:Debug:Create equations from 189 traces
dig_miscs:Debug:Solve 189 (uniq) eqts for 126 unknowns
dig:Info:Refine 90 invs
refine:Debug:rfilter(|ps|=90, |tcs|=1000)
refine:Debug:rfilter (before 90, after 90, diff 0)
refine:Debug:rinfer(|ps|=90)
refine:Debug:rinfer (before 90, after 2, diff 88)
dig:Info:Detected invariants for Eqt:
  0: t^2 - 4*s + 2*t + 1 == 0
  1: a - 1/2*t + 1/2 == 0
dig:Info:*** IeqDeduce ***
dig:Debug:|terms|=0, |tcs|=0
inv_polynomials:Debug:|assumes|=2, |eqts|=2
inv_polynomials:Debug:* deduce(|assumes|=2,|eqts|=2)
inv_polynomials:Debug:assumed ps: -nvu + s <= 0, a >= 0
dig:Info:Detected invariants for IeqDeduce:
  0: 1/2*t - 1/2 >= 0
  1: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
40.9091501236


SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/sqrt1.l0.tcs'
Expect (3): s = (a+1)*(a+1), t = 2*a + 1, a*a <= nvu
* Run 0, time 39.0975117683, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 1, time 39.2895281315, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 2, time 39.9965441227, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 3, time 39.0885288715, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 4, time 39.1296150684, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 5, time 39.7290599346, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 6, time 39.4013431072, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 7, time 39.271684885, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 8, time 39.4439649582, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 9, time 39.2352509499, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 10, time 39.4818880558, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 11, time 40.246573925, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 12, time 40.3670239449, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 13, time 38.8961369991, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 14, time 39.2475619316, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 15, time 39.4288887978, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 16, time 39.2719070911, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 17, time 39.9064030647, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 18, time 39.5892190933, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 19, time 40.9091501236, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
TIME AVG 39.6 (../invgen/Traces/NLA_tosem/multilocs/l0/sqrt1.l0.tcs)



***** BENCHMARK SUMMARY (inv_typ "eqt")*****




SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/cohencu.l0.tcs'
Expect (3): n^3 = x, 6n + 6 = z, y = 3n^2 + 3n + 1
* Run 0, time 44.3449058533, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 1, time 43.1328029633, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 2, time 39.3852040768, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 3, time 39.1571011543, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 4, time 39.0637760162, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 5, time 39.1969339848, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 6, time 39.2211120129, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 7, time 39.1613109112, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 8, time 38.7899839878, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 9, time 38.8496470451, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 10, time 38.9971828461, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 11, time 38.7386648655, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 12, time 38.9494590759, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 13, time 38.817636013, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 14, time 38.70835495, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 15, time 39.6725211143, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 16, time 38.7621109486, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 17, time 38.7287220955, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 18, time 38.637169838, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
* Run 19, time 38.7114498615, deg 4
  0: z^2 - 12*y - 6*z + 12 == 0
  1: y*z - 18*x - 12*y + 2*z - 6 == 0
  2: nvu - 1/6*z + 1 == 0
TIME AVG 39.5 (../invgen/Traces/NLA_tosem/multilocs/l0/cohencu.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/cohendiv.l0.tcs'
Expect (3): b = ay, x = qy+r, rvu >= 2*y*a
* Run 0, time 8.29320883751, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 1, time 8.2509739399, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 2, time 8.19527697563, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 3, time 8.70844697952, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 4, time 8.79945588112, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 5, time 8.13371181488, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 6, time 9.11923289299, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 7, time 8.18550419807, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 8, time 8.27663207054, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 9, time 8.67386507988, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 10, time 8.81365203857, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 11, time 8.32812786102, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 12, time 8.98565101624, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 13, time 8.31996202469, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 14, time 8.82247304916, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 15, time 8.27663588524, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 16, time 8.68018698692, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 17, time 8.84892392159, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 18, time 8.21914100647, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
* Run 19, time 8.73975396156, deg 3
  0: a*y - b == 0
  1: -2*a*y + rvu >= 0
  2: q*y + rvu - x == 0
  3: -q*y - 2*b + x >= 0
TIME AVG 8.5 (../invgen/Traces/NLA_tosem/multilocs/l0/cohendiv.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/dijkstra.l0.tcs'
Expect (1): nq = p^2 + qr
* Run 0, time 30.6700081825, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 1, time 30.5423550606, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 2, time 29.728482008, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 3, time 30.2286841869, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 4, time 28.9064958096, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 5, time 30.162749052, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 6, time 30.4716949463, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 7, time 30.6542570591, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 8, time 31.3046851158, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 9, time 33.0081708431, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 10, time 33.4050281048, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 11, time 30.0030829906, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 12, time 31.6048967838, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 13, time 32.0636692047, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 14, time 33.6350960732, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 15, time 32.3040111065, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 16, time 32.0748541355, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 17, time 32.1242468357, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 18, time 32.042440176, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
* Run 19, time 32.4505131245, deg 4
  0: -nvu*q + p^2 + q*rvu == 0
  1: h^2*p - 4*h*nvu*q + 4*h*q*rvu + 4*nvu*p*q - p*q^2 - 4*p*q*rvu == 0
  2: h^2*nvu - h^2*rvu - 4*h*nvu*p + 4*h*p*rvu + 4*nvu^2*q - nvu*q^2 - 8*nvu*q*rvu + q^2*rvu + 4*q*rvu^2 == 0
  3: h^3 - 12*h*nvu*q - h*q^2 + 12*h*q*rvu + 16*nvu*p*q - 4*p*q^2 - 16*p*q*rvu == 0
TIME AVG 31.4 (../invgen/Traces/NLA_tosem/multilocs/l0/dijkstra.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/divbin.l0.tcs'
Expect (1): bq-a+r = 0
* Run 0, time 28.4325771332, deg 4
  0: b*q - A + rvu == 0
* Run 1, time 25.5466070175, deg 4
  0: b*q - A + rvu == 0
* Run 2, time 25.7948131561, deg 4
  0: b*q - A + rvu == 0
* Run 3, time 26.8699598312, deg 4
  0: b*q - A + rvu == 0
* Run 4, time 26.8449380398, deg 4
  0: b*q - A + rvu == 0
* Run 5, time 27.4813899994, deg 4
  0: b*q - A + rvu == 0
* Run 6, time 27.5890378952, deg 4
  0: b*q - A + rvu == 0
* Run 7, time 27.7571930885, deg 4
  0: b*q - A + rvu == 0
* Run 8, time 28.1059811115, deg 4
  0: b*q - A + rvu == 0
* Run 9, time 27.2833390236, deg 4
  0: b*q - A + rvu == 0
* Run 10, time 27.3002650738, deg 4
  0: b*q - A + rvu == 0
* Run 11, time 26.1928730011, deg 4
  0: b*q - A + rvu == 0
* Run 12, time 26.2553050518, deg 4
  0: b*q - A + rvu == 0
* Run 13, time 28.921587944, deg 4
  0: b*q - A + rvu == 0
* Run 14, time 26.0742681026, deg 4
  0: b*q - A + rvu == 0
* Run 15, time 30.0266699791, deg 4
  0: b*q - A + rvu == 0
* Run 16, time 27.477175951, deg 4
  0: b*q - A + rvu == 0
* Run 17, time 24.1162781715, deg 4
  0: b*q - A + rvu == 0
* Run 18, time 25.6629829407, deg 4
  0: b*q - A + rvu == 0
* Run 19, time 26.3398430347, deg 4
  0: b*q - A + rvu == 0
TIME AVG 27.0 (../invgen/Traces/NLA_tosem/multilocs/l0/divbin.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/euclidex1.l0.tcs'
Expect (3): a = kb+c, a = yr+xp, b = x*q+y*s
* Run 0, time 56.9743340015, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 1, time 57.1991930008, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 2, time 54.8016281128, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 3, time 53.6258540154, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 4, time 55.3222980499, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 5, time 55.8070178032, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 6, time 52.6481950283, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 7, time 54.7309989929, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 8, time 53.1167299747, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 9, time 53.5986530781, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 10, time 55.4166059494, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 11, time 52.8086688519, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 12, time 55.4451179504, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 13, time 51.278993845, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 14, time 54.0719847679, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 15, time 51.9225199223, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 16, time 53.0496220589, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 17, time 51.6500749588, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 18, time 54.501470089, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
* Run 19, time 50.654706955, deg 3
  0: -p*s + q*rvu + 1 == 0
  1: p*x + q*y - a == 0
  2: rvu*x + s*y - b == 0
TIME AVG 53.9 (../invgen/Traces/NLA_tosem/multilocs/l0/euclidex1.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/euclidex2.l0.tcs'
Expect (2): a = yr + xp, b = xq + ys
* Run 0, time 4.36025094986, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 1, time 4.15814900398, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 2, time 3.67043590546, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 3, time 4.46136593819, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 4, time 4.31414198875, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 5, time 4.08072900772, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 6, time 4.32459902763, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 7, time 4.51878714561, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 8, time 3.55826187134, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 9, time 4.06438994408, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 10, time 4.4374730587, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 11, time 3.58968114853, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 12, time 4.43849182129, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 13, time 4.59562587738, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 14, time 4.42113900185, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 15, time 4.4041030407, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 16, time 4.44314193726, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
* Run 17, time 4.10311508179, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 18, time 3.91458511353, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
* Run 19, time 4.61698389053, deg 2
  0: b*k - a + c == 0
  1: p*x + rvu*y - a == 0
  2: q*x + s*y - b == 0
TIME AVG 4.2 (../invgen/Traces/NLA_tosem/multilocs/l0/euclidex2.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/euclidex3.l0.tcs'
Expect (4): a = yr+xp, b = xq+ys, a = kb+c, v = bd
* Run 0, time 8.04227900505, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 1, time 8.05651307106, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 2, time 8.28597688675, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 3, time 8.28312206268, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 4, time 8.35573387146, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 5, time 8.15939903259, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 6, time 8.46416902542, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 7, time 8.25909996033, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 8, time 8.00535297394, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 9, time 8.24372696877, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 10, time 7.89639496803, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 11, time 9.15652513504, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 12, time 8.19630408287, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 13, time 8.38193702698, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 14, time 8.17649483681, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 15, time 7.98953199387, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 16, time 8.16762399673, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 17, time 8.23442411423, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 18, time 8.27865505219, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
* Run 19, time 8.27353191376, deg 2
  0: b*d - v == 0
  1: b*k - a + c == 0
  2: p*x + rvu*y - a == 0
  3: q*x + s*y - b == 0
TIME AVG 8.2 (../invgen/Traces/NLA_tosem/multilocs/l0/euclidex3.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/fermat1_new.l0.tcs'
Expect (1): 4*(A+r) = u*u-v*v-2*u+2*v
* Run 0, time 30.4692659378, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 1, time 32.0906040668, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 2, time 31.9117510319, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 3, time 33.0743398666, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 4, time 32.8647079468, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 5, time 31.9548959732, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 6, time 32.0113389492, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 7, time 31.4929320812, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 8, time 31.2128081322, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 9, time 31.6620759964, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 10, time 30.7282109261, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 11, time 30.8888828754, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 12, time 31.0013291836, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 13, time 31.6021180153, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 14, time 32.0693569183, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 15, time 31.5926399231, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 16, time 31.6405210495, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 17, time 31.1370398998, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 18, time 31.6288919449, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 19, time 31.8421587944, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
TIME AVG 31.6 (../invgen/Traces/NLA_tosem/multilocs/l0/fermat1_new.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/fermat2.l0.tcs'
Expect (1): 4*(A+r) == u*u-v*v-2*u+2*v
* Run 0, time 30.8711018562, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 1, time 31.3062779903, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 2, time 31.6835250854, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 3, time 31.4063649178, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 4, time 32.3623039722, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 5, time 31.4296638966, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 6, time 31.8585951328, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 7, time 31.4883451462, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 8, time 31.4641089439, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 9, time 31.7148499489, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 10, time 31.2082920074, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 11, time 30.7991490364, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 12, time 32.2018289566, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 13, time 31.352298975, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 14, time 31.8492970467, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 15, time 32.0159840584, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 16, time 31.5294139385, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 17, time 31.5422661304, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 18, time 31.927134037, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
* Run 19, time 32.2668979168, deg 4
  0: u^2 - v^2 - 4*A - 4*rvu - 2*u + 2*v == 0
TIME AVG 31.6 (../invgen/Traces/NLA_tosem/multilocs/l0/fermat2.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/freire1.l0.tcs'
Expect (1): a = 2x + r*r - rvu
* Run 0, time 33.8713319302, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 1, time 34.2430360317, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 2, time 34.135543108, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 3, time 34.5325059891, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 4, time 33.9451601505, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 5, time 33.586796999, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 6, time 33.8672978878, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 7, time 33.891261816, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 8, time 33.4579770565, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 9, time 33.6514930725, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 10, time 33.9217019081, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 11, time 33.8052370548, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 12, time 33.9097468853, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 13, time 34.5113129616, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 14, time 33.6807799339, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 15, time 33.677052021, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 16, time 33.5544428825, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 17, time 33.9644870758, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 18, time 33.5148608685, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
* Run 19, time 33.754322052, deg 7
  0: rvu^2 - a - rvu + 2*x == 0
TIME AVG 33.9 (../invgen/Traces/NLA_tosem/multilocs/l0/freire1.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/freire2_comb.l0.tcs'
Expect (2): 4*r*r*r - 6*r*r + 3*r + 4*x - 4*a == 1, 4*s -12*r*r == 1
* Run 0, time 45.2489500046, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 1, time 45.191849947, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 2, time 43.9712440968, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 3, time 45.6537480354, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 4, time 45.0124938488, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 5, time 44.165225029, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 6, time 45.244328022, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 7, time 44.9739940166, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 8, time 46.5754811764, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 9, time 44.862831831, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 10, time 45.5501480103, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 11, time 45.424503088, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 12, time 44.2461829185, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 13, time 44.971914053, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 14, time 44.9708178043, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 15, time 45.0474421978, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 16, time 45.5474369526, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 17, time 46.0999019146, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: -27*a^2 + s^3 - 27*a*s + 54*a*x - 3*s^2 + 27*s*x - 27*x^2 - 27/4*a - 3/8*s + 27/4*x - 91/64 == 0
  2: rvu^2 - 1/3*s + 1/12 == 0
  3: a*rvu - rvu*x - 1/9*s^2 + 3/2*a - 7/8*rvu + 5/9*s - 3/2*x + 35/144 == 0
* Run 18, time 45.5703639984, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
* Run 19, time 43.9015579224, deg 5
  0: rvu*s - 3*a + 2*rvu - 3/2*s + 3*x - 3/8 == 0
  1: rvu^2 - 1/3*s + 1/12 == 0
TIME AVG 45.1 (../invgen/Traces/NLA_tosem/multilocs/l0/freire2_comb.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/geo1.l0.tcs'
Expect (1): x*z - x - y + 1 == 0
* Run 0, time 14.6560630798, deg 7
  0: x*z - x - y + 1 == 0
* Run 1, time 14.6584630013, deg 7
  0: x*z - x - y + 1 == 0
* Run 2, time 14.6798369884, deg 7
  0: x*z - x - y + 1 == 0
* Run 3, time 14.6948401928, deg 7
  0: x*z - x - y + 1 == 0
* Run 4, time 14.817250967, deg 7
  0: x*z - x - y + 1 == 0
* Run 5, time 14.727976799, deg 7
  0: x*z - x - y + 1 == 0
* Run 6, time 14.6620790958, deg 7
  0: x*z - x - y + 1 == 0
* Run 7, time 14.7322969437, deg 7
  0: x*z - x - y + 1 == 0
* Run 8, time 14.609746933, deg 7
  0: x*z - x - y + 1 == 0
* Run 9, time 14.8839800358, deg 7
  0: x*z - x - y + 1 == 0
* Run 10, time 14.7307140827, deg 7
  0: x*z - x - y + 1 == 0
* Run 11, time 16.3305771351, deg 7
  0: x*z - x - y + 1 == 0
* Run 12, time 14.6143960953, deg 7
  0: x*z - x - y + 1 == 0
* Run 13, time 14.6444962025, deg 7
  0: x*z - x - y + 1 == 0
* Run 14, time 14.7210571766, deg 7
  0: x*z - x - y + 1 == 0
* Run 15, time 14.5977971554, deg 7
  0: x*z - x - y + 1 == 0
* Run 16, time 14.6643660069, deg 7
  0: x*z - x - y + 1 == 0
* Run 17, time 14.6023349762, deg 7
  0: x*z - x - y + 1 == 0
* Run 18, time 14.732571125, deg 7
  0: x*z - x - y + 1 == 0
* Run 19, time 14.7064130306, deg 7
  0: x*z - x - y + 1 == 0
TIME AVG 14.8 (../invgen/Traces/NLA_tosem/multilocs/l0/geo1.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/geo2.l0.tcs'
Expect (1): 1+xz-x-z*y = 0
* Run 0, time 24.119093895, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 1, time 24.6393239498, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 2, time 23.5542390347, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 3, time 24.4019238949, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 4, time 24.5270459652, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 5, time 26.539413929, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 6, time 24.9310939312, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 7, time 23.7054729462, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 8, time 23.5594871044, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 9, time 24.4045860767, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 10, time 24.6102919579, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 11, time 24.1950318813, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 12, time 23.9894461632, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 13, time 23.8672280312, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 14, time 24.8240959644, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 15, time 24.2770168781, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 16, time 23.4437460899, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 17, time 24.4921240807, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 18, time 24.0704820156, deg 5
  0: x*z - y*z - x + 1 == 0
* Run 19, time 24.9067220688, deg 5
  0: x*z - y*z - x + 1 == 0
TIME AVG 24.4 (../invgen/Traces/NLA_tosem/multilocs/l0/geo2.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/geo3.l0.tcs'
Expect (1): zx-x+a-a*z*y = 0
* Run 0, time 22.724093914, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 1, time 22.6575820446, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 2, time 24.6690590382, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 3, time 24.2496631145, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 4, time 22.913946867, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 5, time 22.8187561035, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 6, time 23.0194029808, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 7, time 23.6243181229, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 8, time 23.3615679741, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 9, time 22.8574080467, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 10, time 23.7834880352, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 11, time 23.0057528019, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 12, time 23.2800722122, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 13, time 22.6779780388, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 14, time 24.6701200008, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 15, time 22.9644110203, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 16, time 23.5736010075, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 17, time 24.0539140701, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 18, time 23.0211598873, deg 4
  0: a*y*z - x*z - a + x == 0
* Run 19, time 24.2634329796, deg 4
  0: a*y*z - x*z - a + x == 0
TIME AVG 23.4 (../invgen/Traces/NLA_tosem/multilocs/l0/geo3.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/hard.l0.tcs'
Expect (2): nvu = qd+r, a = dp
* Run 0, time 8.93460702896, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 1, time 9.21645593643, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 2, time 9.24818921089, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 3, time 9.61983394623, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 4, time 8.9725189209, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 5, time 8.60867214203, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 6, time 9.15534687042, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 7, time 9.18063282967, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 8, time 9.08992505074, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 9, time 9.16488385201, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 10, time 9.13534879684, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 11, time 9.31815695763, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 12, time 9.19802713394, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 13, time 8.89166712761, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 14, time 9.1867980957, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 15, time 9.48116612434, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 16, time 9.18728399277, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 17, time 9.2674870491, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 18, time 9.27884697914, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
* Run 19, time 9.06373715401, deg 3
  0: D*p - d1 == 0
  1: D*q - A + rvu == 0
TIME AVG 9.2 (../invgen/Traces/NLA_tosem/multilocs/l0/hard.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/knuth.l0.tcs'
Expect (1): ddq - 4rd + 4kd - 2qd + 8r = 8n
* Run 0, time 58.0372941494, deg 3
  0: -1/4*d^2*q - d*k + 1/2*d*q + d*rvu + 2*nvu - 2*rvu == 0
* Run 1, time 61.0794811249, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 2, time 60.6104288101, deg 3
  0: d*k - d*t - d1*k + d1*t == 0
  1: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 3, time 63.8852579594, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 4, time 61.1857788563, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 5, time 61.5922141075, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 6, time 62.6038570404, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 7, time 62.2983620167, deg 3
  0: d*k - d*t - d1*k + d1*t == 0
  1: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 8, time 65.3829391003, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 9, time 61.0227799416, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 10, time 61.6690340042, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 11, time 59.2130630016, deg 3
  0: d*k - d*t - d1*k + d1*t == 0
  1: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 12, time 60.0412428379, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 13, time 60.8958730698, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 14, time 60.8907060623, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 15, time 63.5227248669, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 16, time 61.0607018471, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 17, time 61.0655231476, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 18, time 60.2256858349, deg 3
  0: k*t - t^2 == 0
  1: d*k - d*t - d1*k + d1*t == 0
  2: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 19, time 60.7087450027, deg 3
  0: d*k - d*t - d1*k + d1*t == 0
  1: d^2*q - 2*d*q - 4*d*rvu + 4*d*t + 4*d1*k - 4*d1*t - 8*nvu + 8*rvu == 0
TIME AVG 61.3 (../invgen/Traces/NLA_tosem/multilocs/l0/knuth.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/lcm1.l0.tcs'
Expect (1): xu + yv = ab
* Run 0, time 8.79134011269, deg 3
  0: a*b - u*x - v*y == 0
* Run 1, time 8.82746386528, deg 3
  0: a*b - u*x - v*y == 0
* Run 2, time 8.65814399719, deg 3
  0: a*b - u*x - v*y == 0
* Run 3, time 8.83742904663, deg 3
  0: a*b - u*x - v*y == 0
* Run 4, time 8.53700995445, deg 3
  0: a*b - u*x - v*y == 0
* Run 5, time 9.08387589455, deg 3
  0: a*b - u*x - v*y == 0
* Run 6, time 8.51844406128, deg 3
  0: a*b - u*x - v*y == 0
* Run 7, time 8.26107001305, deg 3
  0: a*b - u*x - v*y == 0
* Run 8, time 8.32055592537, deg 3
  0: a*b - u*x - v*y == 0
* Run 9, time 8.59491205215, deg 3
  0: a*b - u*x - v*y == 0
* Run 10, time 8.82289505005, deg 3
  0: a*b - u*x - v*y == 0
* Run 11, time 8.94635510445, deg 3
  0: a*b - u*x - v*y == 0
* Run 12, time 8.9071700573, deg 3
  0: a*b - u*x - v*y == 0
* Run 13, time 8.36989712715, deg 3
  0: a*b - u*x - v*y == 0
* Run 14, time 8.92026805878, deg 3
  0: a*b - u*x - v*y == 0
* Run 15, time 8.80061101913, deg 3
  0: a*b - u*x - v*y == 0
* Run 16, time 8.73680400848, deg 3
  0: a*b - u*x - v*y == 0
* Run 17, time 8.75487589836, deg 3
  0: a*b - u*x - v*y == 0
* Run 18, time 8.52287793159, deg 3
  0: a*b - u*x - v*y == 0
* Run 19, time 8.07546401024, deg 3
  0: a*b - u*x - v*y == 0
TIME AVG 8.7 (../invgen/Traces/NLA_tosem/multilocs/l0/lcm1.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/lcm2.l0.tcs'
Expect (1): xu + yv = 2ab
* Run 0, time 9.33075404167, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 1, time 8.85320401192, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 2, time 9.13275694847, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 3, time 15.1023960114, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 4, time 9.12510299683, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 5, time 8.95868992805, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 6, time 9.3694460392, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 7, time 8.9447851181, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 8, time 9.15833091736, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 9, time 8.99850702286, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 10, time 9.29244709015, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 11, time 24.0797729492, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 12, time 24.9919102192, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 13, time 8.89599299431, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 14, time 9.07595205307, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 15, time 9.02882599831, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 16, time 8.97991585732, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 17, time 8.90896511078, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 18, time 17.4965469837, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
* Run 19, time 13.1807188988, deg 3
  0: a*b - 1/2*u*x - 1/2*v*y == 0
TIME AVG 11.5 (../invgen/Traces/NLA_tosem/multilocs/l0/lcm2.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/mannadiv.l0.tcs'
Expect (1): x1 = x2*y1+y2+y3
* Run 0, time 23.0507378578, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 1, time 23.0099630356, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 2, time 22.3420197964, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 3, time 22.7895879745, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 4, time 24.0240721703, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 5, time 23.5334069729, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 6, time 23.1452770233, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 7, time 23.6740608215, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 8, time 23.103053093, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 9, time 23.0293998718, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 10, time 22.0374081135, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 11, time 22.270596981, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 12, time 25.7811529636, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 13, time 22.023763895, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 14, time 22.2524080276, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 15, time 22.2627780437, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 16, time 23.6725280285, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 17, time 23.7700169086, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 18, time 22.8089849949, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
* Run 19, time 23.005412817, deg 4
  0: x2*y1 - x1 + y2 + y3 == 0
TIME AVG 23.1 (../invgen/Traces/NLA_tosem/multilocs/l0/mannadiv.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/prod4br.l0.tcs'
Expect (1): q+abp = xy
* Run 0, time 8.42133498192, deg 3
  0: a*b*p - x*y + q == 0
* Run 1, time 8.19017601013, deg 3
  0: a*b*p - x*y + q == 0
* Run 2, time 8.23447489738, deg 3
  0: a*b*p - x*y + q == 0
* Run 3, time 8.1797478199, deg 3
  0: a*b*p - x*y + q == 0
* Run 4, time 8.36139512062, deg 3
  0: a*b*p - x*y + q == 0
* Run 5, time 8.0543320179, deg 3
  0: a*b*p - x*y + q == 0
* Run 6, time 8.36902594566, deg 3
  0: a*b*p - x*y + q == 0
* Run 7, time 8.22853088379, deg 3
  0: a*b*p - x*y + q == 0
* Run 8, time 8.32212090492, deg 3
  0: a*b*p - x*y + q == 0
* Run 9, time 8.07545113564, deg 3
  0: a*b*p - x*y + q == 0
* Run 10, time 8.21514391899, deg 3
  0: a*b*p - x*y + q == 0
* Run 11, time 8.10956001282, deg 3
  0: a*b*p - x*y + q == 0
* Run 12, time 8.19626402855, deg 3
  0: a*b*p - x*y + q == 0
* Run 13, time 8.00959086418, deg 3
  0: a*b*p - x*y + q == 0
* Run 14, time 8.31142878532, deg 3
  0: a*b*p - x*y + q == 0
* Run 15, time 8.06969404221, deg 3
  0: a*b*p - x*y + q == 0
* Run 16, time 8.35776615143, deg 3
  0: a*b*p - x*y + q == 0
* Run 17, time 8.31435990334, deg 3
  0: a*b*p - x*y + q == 0
* Run 18, time 8.19616007805, deg 3
  0: a*b*p - x*y + q == 0
* Run 19, time 8.27909207344, deg 3
  0: a*b*p - x*y + q == 0
TIME AVG 8.2 (../invgen/Traces/NLA_tosem/multilocs/l0/prod4br.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/prodbin.l0.tcs'
Expect (1): z+xy = a*b
* Run 0, time 32.2524030209, deg 4
  0: a*b - x*y - z == 0
* Run 1, time 32.3741269112, deg 4
  0: a*b - x*y - z == 0
* Run 2, time 32.3200559616, deg 4
  0: a*b - x*y - z == 0
* Run 3, time 32.6946220398, deg 4
  0: a*b - x*y - z == 0
* Run 4, time 31.8640098572, deg 4
  0: a*b - x*y - z == 0
* Run 5, time 31.1415250301, deg 4
  0: a*b - x*y - z == 0
* Run 6, time 32.6544220448, deg 4
  0: a*b - x*y - z == 0
* Run 7, time 31.3826949596, deg 4
  0: a*b - x*y - z == 0
* Run 8, time 33.7030768394, deg 4
  0: a*b - x*y - z == 0
* Run 9, time 32.51202178, deg 4
  0: a*b - x*y - z == 0
* Run 10, time 31.3021228313, deg 4
  0: a*b - x*y - z == 0
* Run 11, time 33.0498030186, deg 4
  0: a*b - x*y - z == 0
* Run 12, time 32.6595029831, deg 4
  0: a*b - x*y - z == 0
* Run 13, time 32.894217968, deg 4
  0: a*b - x*y - z == 0
* Run 14, time 32.8314659595, deg 4
  0: a*b - x*y - z == 0
* Run 15, time 32.529487133, deg 4
  0: a*b - x*y - z == 0
* Run 16, time 33.3455781937, deg 4
  0: a*b - x*y - z == 0
* Run 17, time 32.4115931988, deg 4
  0: a*b - x*y - z == 0
* Run 18, time 32.7396819592, deg 4
  0: a*b - x*y - z == 0
* Run 19, time 33.1554539204, deg 4
  0: a*b - x*y - z == 0
TIME AVG 32.5 (../invgen/Traces/NLA_tosem/multilocs/l0/prodbin.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/ps2.l0.tcs'
Expect (1): 2x - y^2 - y = 0
* Run 0, time 28.8099820614, deg 7
  0: y^2 - 2*x + y == 0
* Run 1, time 28.9917681217, deg 7
  0: y^2 - 2*x + y == 0
* Run 2, time 28.8184440136, deg 7
  0: y^2 - 2*x + y == 0
* Run 3, time 29.013188839, deg 7
  0: y^2 - 2*x + y == 0
* Run 4, time 29.103290081, deg 7
  0: y^2 - 2*x + y == 0
* Run 5, time 29.2346889973, deg 7
  0: y^2 - 2*x + y == 0
* Run 6, time 28.8974640369, deg 7
  0: y^2 - 2*x + y == 0
* Run 7, time 33.790626049, deg 7
  0: y^2 - 2*x + y == 0
* Run 8, time 28.9206340313, deg 7
  0: y^2 - 2*x + y == 0
* Run 9, time 29.1555089951, deg 7
  0: y^2 - 2*x + y == 0
* Run 10, time 29.0592620373, deg 7
  0: y^2 - 2*x + y == 0
* Run 11, time 29.1157140732, deg 7
  0: y^2 - 2*x + y == 0
* Run 12, time 28.7085630894, deg 7
  0: y^2 - 2*x + y == 0
* Run 13, time 28.7898008823, deg 7
  0: y^2 - 2*x + y == 0
* Run 14, time 28.9883699417, deg 7
  0: y^2 - 2*x + y == 0
* Run 15, time 29.1270711422, deg 7
  0: y^2 - 2*x + y == 0
* Run 16, time 29.0161211491, deg 7
  0: y^2 - 2*x + y == 0
* Run 17, time 28.4054899216, deg 7
  0: y^2 - 2*x + y == 0
* Run 18, time 28.622136116, deg 7
  0: y^2 - 2*x + y == 0
* Run 19, time 29.2289872169, deg 7
  0: y^2 - 2*x + y == 0
TIME AVG 29.2 (../invgen/Traces/NLA_tosem/multilocs/l0/ps2.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/ps3.l0.tcs'
Expect (1): 6x-2y^3-3y^2-y = 0
* Run 0, time 27.6781818867, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 1, time 28.1047489643, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 2, time 27.6465389729, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 3, time 27.9128148556, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 4, time 28.0794041157, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 5, time 27.9523429871, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 6, time 27.6861000061, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 7, time 27.1455378532, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 8, time 27.9318621159, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 9, time 27.9883050919, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 10, time 28.0620288849, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 11, time 27.9674351215, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 12, time 27.6701028347, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 13, time 27.5942261219, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 14, time 27.8420958519, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 15, time 28.063256979, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 16, time 27.9092850685, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 17, time 27.5283591747, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 18, time 27.6463899612, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
* Run 19, time 29.3148441315, deg 7
  0: y^3 + 3/2*y^2 - 3*x + 1/2*y == 0
TIME AVG 27.9 (../invgen/Traces/NLA_tosem/multilocs/l0/ps3.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/ps4.l0.tcs'
Expect (1): 4x-y^4-2*y^3-y^2 = 0
* Run 0, time 29.7373039722, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 1, time 30.8229718208, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 2, time 29.7839078903, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 3, time 29.3355960846, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 4, time 30.1817700863, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 5, time 29.59770298, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 6, time 29.1220080853, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 7, time 29.1061251163, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 8, time 30.0770921707, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 9, time 29.6505010128, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 10, time 29.3446609974, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 11, time 29.5619170666, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 12, time 29.7417440414, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 13, time 29.5532391071, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 14, time 29.9988658428, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 15, time 29.4410409927, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 16, time 29.8548779488, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 17, time 29.3096950054, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 18, time 28.9593400955, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
* Run 19, time 29.8402059078, deg 7
  0: y^4 + 2*y^3 + y^2 - 4*x == 0
TIME AVG 29.7 (../invgen/Traces/NLA_tosem/multilocs/l0/ps4.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/ps5.l0.tcs'
Expect (1): 6*y**5 + 15*y**4 + 10*y**3 - 30*x - y == 0
* Run 0, time 29.4950559139, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 1, time 30.1651029587, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 2, time 29.6141571999, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 3, time 30.6956870556, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 4, time 30.5811369419, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 5, time 30.905351162, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 6, time 29.759939909, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 7, time 31.4717650414, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 8, time 30.3461577892, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 9, time 30.4514210224, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 10, time 29.7870600224, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 11, time 30.3147201538, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 12, time 30.3469290733, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 13, time 30.041711092, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 14, time 30.1371731758, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 15, time 30.4065139294, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 16, time 30.2938110828, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 17, time 29.7311451435, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 18, time 30.0056779385, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
* Run 19, time 29.9914081097, deg 7
  0: y^5 + 5/2*y^4 + 5/3*y^3 - 5*x - 1/6*y == 0
TIME AVG 30.2 (../invgen/Traces/NLA_tosem/multilocs/l0/ps5.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/ps6.l0.tcs'
Expect (1): -2*y**6 - 6*y**5 - 5*y**4 + y**2 + 12*x = 0.0
* Run 0, time 29.2454419136, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 1, time 27.4801559448, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 2, time 29.7518980503, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 3, time 29.8049840927, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 4, time 26.7138340473, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 5, time 28.7634019852, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 6, time 28.9719469547, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 7, time 28.7133359909, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 8, time 26.3833169937, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 9, time 27.7803509235, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 10, time 28.3376400471, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 11, time 29.0506830215, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 12, time 28.3224420547, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 13, time 29.9450001717, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 14, time 25.3807020187, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 15, time 27.4263930321, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 16, time 28.7347900867, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 17, time 28.4480679035, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 18, time 27.4926800728, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
* Run 19, time 27.1126868725, deg 7
  0: y^6 + 3*y^5 + 5/2*y^4 - 1/2*y^2 - 6*x == 0
TIME AVG 28.2 (../invgen/Traces/NLA_tosem/multilocs/l0/ps6.l0.tcs)



SUMMARY (inv_typ 'eqt')
Invariants generated from '../invgen/Traces/NLA_tosem/multilocs/l0/sqrt1.l0.tcs'
Expect (3): s = (a+1)*(a+1), t = 2*a + 1, a*a <= nvu
* Run 0, time 39.0975117683, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 1, time 39.2895281315, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 2, time 39.9965441227, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 3, time 39.0885288715, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 4, time 39.1296150684, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 5, time 39.7290599346, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 6, time 39.4013431072, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 7, time 39.271684885, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 8, time 39.4439649582, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 9, time 39.2352509499, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 10, time 39.4818880558, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 11, time 40.246573925, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 12, time 40.3670239449, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 13, time 38.8961369991, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 14, time 39.2475619316, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 15, time 39.4288887978, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 16, time 39.2719070911, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 17, time 39.9064030647, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 18, time 39.5892190933, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
* Run 19, time 40.9091501236, deg 5
  0: t^2 - 4*s + 2*t + 1 == 0
  1: 1/2*t - 1/2 >= 0
  2: a - 1/2*t + 1/2 == 0
  3: 1/4*t^2 - nvu + 1/2*t + 1/4 <= 0
TIME AVG 39.6 (../invgen/Traces/NLA_tosem/multilocs/l0/sqrt1.l0.tcs)


sage: sols = benchmark_dir('../invgen/Traces/AES_tosem/multilocs/l0/',inv_typ='simple_nested', runs=20)

********** BEGIN BENCHMARK **********
Invariant Type: simple_nested
Trace Directory: ../invgen/Traces/AES_tosem/multilocs/l0/
Number of runs for each trace file: 20
********** *************** **********



***** (0) Generate invs from file 'AesDecrypt.l0.tcs' *****

dig:Info:2013-06-24 22:05:51.174212, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [ct, pt, rk, st]
2. xinfo: 
 0. All: ['ct', 'pt', 'rk', 'st']
 1. Assume: []
 2. Const: []
 3. Expect: []
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/AesDecrypt.l0.tcs", |vs|=4, deg=5, |terms|=126

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: pt_5 - st_1_1 == 0
  1: pt_2 - st_0_2 == 0
  2: pt_6 - st_1_2 == 0
  3: pt_1 - st_0_1 == 0
  4: pt_3 - st_0_3 == 0
  5: pt_7 - st_1_3 == 0
  6: pt_0 - st_0_0 == 0
  7: pt_4 - st_1_0 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('pt', 'st'))
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'pt' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == pt[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
75.1799988747

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: pt_5 - st_1_1 == 0
  1: pt_2 - st_0_2 == 0
  2: pt_6 - st_1_2 == 0
  3: pt_1 - st_0_1 == 0
  4: pt_3 - st_0_3 == 0
  5: pt_7 - st_1_3 == 0
  6: pt_0 - st_0_0 == 0
  7: pt_4 - st_1_0 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('pt', 'st'))
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'pt' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == pt[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
74.8874299526

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: pt_5 - st_1_1 == 0
  1: pt_2 - st_0_2 == 0
  2: pt_6 - st_1_2 == 0
  3: pt_1 - st_0_1 == 0
  4: pt_3 - st_0_3 == 0
  5: pt_7 - st_1_3 == 0
  6: pt_0 - st_0_0 == 0
  7: pt_4 - st_1_0 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('pt', 'st'))
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'pt' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == pt[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
73.6653800011

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: pt_5 - st_1_1 == 0
  1: pt_2 - st_0_2 == 0
  2: pt_6 - st_1_2 == 0
  3: pt_1 - st_0_1 == 0
  4: pt_3 - st_0_3 == 0
  5: pt_7 - st_1_3 == 0
  6: pt_0 - st_0_0 == 0
  7: pt_4 - st_1_0 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('pt', 'st'))
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'pt' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == pt[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
73.8546869755

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: pt_5 - st_1_1 == 0
  1: pt_2 - st_0_2 == 0
  2: pt_6 - st_1_2 == 0
  3: pt_1 - st_0_1 == 0
  4: pt_3 - st_0_3 == 0
  5: pt_7 - st_1_3 == 0
  6: pt_0 - st_0_0 == 0
  7: pt_4 - st_1_0 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('pt', 'st'))
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'pt' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == pt[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
75.1639969349

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: pt_5 - st_1_1 == 0
  1: pt_2 - st_0_2 == 0
  2: pt_6 - st_1_2 == 0
  3: pt_1 - st_0_1 == 0
  4: pt_3 - st_0_3 == 0
  5: pt_7 - st_1_3 == 0
  6: pt_0 - st_0_0 == 0
  7: pt_4 - st_1_0 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('pt', 'st'))
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'pt' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == pt[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
73.2066400051

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: pt_5 - st_1_1 == 0
  1: pt_2 - st_0_2 == 0
  2: pt_6 - st_1_2 == 0
  3: pt_1 - st_0_1 == 0
  4: pt_3 - st_0_3 == 0
  5: pt_7 - st_1_3 == 0
  6: pt_0 - st_0_0 == 0
  7: pt_4 - st_1_0 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('pt', 'st'))
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'pt' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 5 expressions generated
dig_arrays:Info:Apply reachability analysis to 5 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == pt[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
73.9284739494

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: pt_5 - st_1_1 == 0
  1: pt_2 - st_0_2 == 0
  2: pt_6 - st_1_2 == 0
  3: pt_1 - st_0_1 == 0
  4: pt_3 - st_0_3 == 0
  5: pt_7 - st_1_3 == 0
  6: pt_0 - st_0_0 == 0
  7: pt_4 - st_1_0 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('pt', 'st'))
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'pt' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 5 expressions generated
dig_arrays:Info:Apply reachability analysis to 5 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == pt[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
73.476801157

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: pt_5 - st_1_1 == 0
  1: pt_2 - st_0_2 == 0
  2: pt_6 - st_1_2 == 0
  3: pt_1 - st_0_1 == 0
  4: pt_3 - st_0_3 == 0
  5: pt_7 - st_1_3 == 0
  6: pt_0 - st_0_0 == 0
  7: pt_4 - st_1_0 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('pt', 'st'))
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'pt' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == pt[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
73.8359780312

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: pt_5 - st_1_1 == 0
  1: pt_2 - st_0_2 == 0
  2: pt_6 - st_1_2 == 0
  3: pt_1 - st_0_1 == 0
  4: pt_3 - st_0_3 == 0
  5: pt_7 - st_1_3 == 0
  6: pt_0 - st_0_0 == 0
  7: pt_4 - st_1_0 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('pt', 'st'))
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'pt' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == pt[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
72.8623478413

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: pt_5 - st_1_1 == 0
  1: pt_2 - st_0_2 == 0
  2: pt_6 - st_1_2 == 0
  3: pt_1 - st_0_1 == 0
  4: pt_3 - st_0_3 == 0
  5: pt_7 - st_1_3 == 0
  6: pt_0 - st_0_0 == 0
  7: pt_4 - st_1_0 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('pt', 'st'))
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'pt' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 5 expressions generated
dig_arrays:Info:Apply reachability analysis to 5 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == pt[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
74.4903128147

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: pt_5 - st_1_1 == 0
  1: pt_2 - st_0_2 == 0
  2: pt_6 - st_1_2 == 0
  3: pt_1 - st_0_1 == 0
  4: pt_3 - st_0_3 == 0
  5: pt_7 - st_1_3 == 0
  6: pt_0 - st_0_0 == 0
  7: pt_4 - st_1_0 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('pt', 'st'))
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'pt' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == pt[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
73.5183341503

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: pt_5 - st_1_1 == 0
  1: pt_2 - st_0_2 == 0
  2: pt_6 - st_1_2 == 0
  3: pt_1 - st_0_1 == 0
  4: pt_3 - st_0_3 == 0
  5: pt_7 - st_1_3 == 0
  6: pt_0 - st_0_0 == 0
  7: pt_4 - st_1_0 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('pt', 'st'))
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'pt' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 5 expressions generated
dig_arrays:Info:Apply reachability analysis to 5 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == pt[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
74.8496179581

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: pt_5 - st_1_1 == 0
  1: pt_2 - st_0_2 == 0
  2: pt_6 - st_1_2 == 0
  3: pt_1 - st_0_1 == 0
  4: pt_3 - st_0_3 == 0
  5: pt_7 - st_1_3 == 0
  6: pt_0 - st_0_0 == 0
  7: pt_4 - st_1_0 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('pt', 'st'))
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'pt' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == pt[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
73.6764600277

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: pt_5 - st_1_1 == 0
  1: pt_2 - st_0_2 == 0
  2: pt_6 - st_1_2 == 0
  3: pt_1 - st_0_1 == 0
  4: pt_3 - st_0_3 == 0
  5: pt_7 - st_1_3 == 0
  6: pt_0 - st_0_0 == 0
  7: pt_4 - st_1_0 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('pt', 'st'))
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'pt' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == pt[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
73.3224368095

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: pt_5 - st_1_1 == 0
  1: pt_2 - st_0_2 == 0
  2: pt_6 - st_1_2 == 0
  3: pt_1 - st_0_1 == 0
  4: pt_3 - st_0_3 == 0
  5: pt_7 - st_1_3 == 0
  6: pt_0 - st_0_0 == 0
  7: pt_4 - st_1_0 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('pt', 'st'))
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'pt' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == pt[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
72.5906260014

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: pt_5 - st_1_1 == 0
  1: pt_2 - st_0_2 == 0
  2: pt_6 - st_1_2 == 0
  3: pt_1 - st_0_1 == 0
  4: pt_3 - st_0_3 == 0
  5: pt_7 - st_1_3 == 0
  6: pt_0 - st_0_0 == 0
  7: pt_4 - st_1_0 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('pt', 'st'))
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'pt' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == pt[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
73.5306499004

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: pt_5 - st_1_1 == 0
  1: pt_2 - st_0_2 == 0
  2: pt_6 - st_1_2 == 0
  3: pt_1 - st_0_1 == 0
  4: pt_3 - st_0_3 == 0
  5: pt_7 - st_1_3 == 0
  6: pt_0 - st_0_0 == 0
  7: pt_4 - st_1_0 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('pt', 'st'))
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'pt' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == pt[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
73.426514864

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: pt_5 - st_1_1 == 0
  1: pt_2 - st_0_2 == 0
  2: pt_6 - st_1_2 == 0
  3: pt_1 - st_0_1 == 0
  4: pt_3 - st_0_3 == 0
  5: pt_7 - st_1_3 == 0
  6: pt_0 - st_0_0 == 0
  7: pt_4 - st_1_0 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('pt', 'st'))
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'pt' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == pt[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
73.8654000759

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: pt_5 - st_1_1 == 0
  1: pt_2 - st_0_2 == 0
  2: pt_6 - st_1_2 == 0
  3: pt_1 - st_0_1 == 0
  4: pt_3 - st_0_3 == 0
  5: pt_7 - st_1_3 == 0
  6: pt_0 - st_0_0 == 0
  7: pt_4 - st_1_0 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('pt', 'st'))
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'pt' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'pt' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == pt[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
73.1738939285


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/AesDecrypt.l0.tcs'
Expect (0): 
* Run 0, time 75.1799988747, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 1, time 74.8874299526, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 2, time 73.6653800011, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 3, time 73.8546869755, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 4, time 75.1639969349, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 5, time 73.2066400051, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 6, time 73.9284739494, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 7, time 73.476801157, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 8, time 73.8359780312, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 9, time 72.8623478413, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 10, time 74.4903128147, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 11, time 73.5183341503, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 12, time 74.8496179581, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 13, time 73.6764600277, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 14, time 73.3224368095, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 15, time 72.5906260014, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 16, time 73.5306499004, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 17, time 73.426514864, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 18, time 73.8654000759, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 19, time 73.1738939285, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
TIME AVG 73.8 (../invgen/Traces/AES_tosem/multilocs/l0/AesDecrypt.l0.tcs)


***** (1) Generate invs from file 'AesEncrypt.l0.tcs' *****

dig:Info:2013-06-24 22:30:29.455295, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [ct, pt, rk, st]
2. xinfo: 
 0. All: ['ct', 'pt', 'rk', 'st']
 1. Assume: []
 2. Const: []
 3. Expect: []
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/AesEncrypt.l0.tcs", |vs|=4, deg=5, |terms|=126

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: -ct_2 + st_0_2 == 0
  1: -ct_6 + st_1_2 == 0
  2: -ct_3 + st_0_3 == 0
  3: -ct_7 + st_1_3 == 0
  4: -ct_0 + st_0_0 == 0
  5: -ct_4 + st_1_0 == 0
  6: -ct_1 + st_0_1 == 0
  7: -ct_5 + st_1_1 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('ct', 'st'))
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'ct' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == ct[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
73.3974990845

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: -ct_2 + st_0_2 == 0
  1: -ct_6 + st_1_2 == 0
  2: -ct_3 + st_0_3 == 0
  3: -ct_7 + st_1_3 == 0
  4: -ct_0 + st_0_0 == 0
  5: -ct_4 + st_1_0 == 0
  6: -ct_1 + st_0_1 == 0
  7: -ct_5 + st_1_1 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('ct', 'st'))
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'ct' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == ct[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
73.2834310532

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: -ct_2 + st_0_2 == 0
  1: -ct_6 + st_1_2 == 0
  2: -ct_3 + st_0_3 == 0
  3: -ct_7 + st_1_3 == 0
  4: -ct_0 + st_0_0 == 0
  5: -ct_4 + st_1_0 == 0
  6: -ct_1 + st_0_1 == 0
  7: -ct_5 + st_1_1 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('ct', 'st'))
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'ct' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == ct[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
72.9537599087

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: -ct_2 + st_0_2 == 0
  1: -ct_6 + st_1_2 == 0
  2: -ct_3 + st_0_3 == 0
  3: -ct_7 + st_1_3 == 0
  4: -ct_0 + st_0_0 == 0
  5: -ct_4 + st_1_0 == 0
  6: -ct_1 + st_0_1 == 0
  7: -ct_5 + st_1_1 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('ct', 'st'))
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'ct' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == ct[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
72.7853939533

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: -ct_2 + st_0_2 == 0
  1: -ct_6 + st_1_2 == 0
  2: -ct_3 + st_0_3 == 0
  3: -ct_7 + st_1_3 == 0
  4: -ct_0 + st_0_0 == 0
  5: -ct_4 + st_1_0 == 0
  6: -ct_1 + st_0_1 == 0
  7: -ct_5 + st_1_1 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('ct', 'st'))
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'ct' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == ct[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
69.6030371189

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: -ct_2 + st_0_2 == 0
  1: -ct_6 + st_1_2 == 0
  2: -ct_3 + st_0_3 == 0
  3: -ct_7 + st_1_3 == 0
  4: -ct_0 + st_0_0 == 0
  5: -ct_4 + st_1_0 == 0
  6: -ct_1 + st_0_1 == 0
  7: -ct_5 + st_1_1 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('ct', 'st'))
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'ct' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == ct[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
69.9623310566

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: -ct_2 + st_0_2 == 0
  1: -ct_6 + st_1_2 == 0
  2: -ct_3 + st_0_3 == 0
  3: -ct_7 + st_1_3 == 0
  4: -ct_0 + st_0_0 == 0
  5: -ct_4 + st_1_0 == 0
  6: -ct_1 + st_0_1 == 0
  7: -ct_5 + st_1_1 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('ct', 'st'))
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'ct' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 5 expressions generated
dig_arrays:Info:Apply reachability analysis to 5 nestings to find valid ones
dig_arrays:Debug:4. Nesting st[i1][i2] == ct[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
69.8858909607

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: -ct_2 + st_0_2 == 0
  1: -ct_6 + st_1_2 == 0
  2: -ct_3 + st_0_3 == 0
  3: -ct_7 + st_1_3 == 0
  4: -ct_0 + st_0_0 == 0
  5: -ct_4 + st_1_0 == 0
  6: -ct_1 + st_0_1 == 0
  7: -ct_5 + st_1_1 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('ct', 'st'))
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'ct' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 5 expressions generated
dig_arrays:Info:Apply reachability analysis to 5 nestings to find valid ones
dig_arrays:Debug:4. Nesting st[i1][i2] == ct[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
70.1711101532

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: -ct_2 + st_0_2 == 0
  1: -ct_6 + st_1_2 == 0
  2: -ct_3 + st_0_3 == 0
  3: -ct_7 + st_1_3 == 0
  4: -ct_0 + st_0_0 == 0
  5: -ct_4 + st_1_0 == 0
  6: -ct_1 + st_0_1 == 0
  7: -ct_5 + st_1_1 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('ct', 'st'))
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'ct' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == ct[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
69.6454951763

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: -ct_2 + st_0_2 == 0
  1: -ct_6 + st_1_2 == 0
  2: -ct_3 + st_0_3 == 0
  3: -ct_7 + st_1_3 == 0
  4: -ct_0 + st_0_0 == 0
  5: -ct_4 + st_1_0 == 0
  6: -ct_1 + st_0_1 == 0
  7: -ct_5 + st_1_1 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('ct', 'st'))
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'ct' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == ct[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
69.6032049656

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: -ct_2 + st_0_2 == 0
  1: -ct_6 + st_1_2 == 0
  2: -ct_3 + st_0_3 == 0
  3: -ct_7 + st_1_3 == 0
  4: -ct_0 + st_0_0 == 0
  5: -ct_4 + st_1_0 == 0
  6: -ct_1 + st_0_1 == 0
  7: -ct_5 + st_1_1 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('ct', 'st'))
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'ct' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 5 expressions generated
dig_arrays:Info:Apply reachability analysis to 5 nestings to find valid ones
dig_arrays:Debug:4. Nesting st[i1][i2] == ct[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
70.0477571487

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: -ct_2 + st_0_2 == 0
  1: -ct_6 + st_1_2 == 0
  2: -ct_3 + st_0_3 == 0
  3: -ct_7 + st_1_3 == 0
  4: -ct_0 + st_0_0 == 0
  5: -ct_4 + st_1_0 == 0
  6: -ct_1 + st_0_1 == 0
  7: -ct_5 + st_1_1 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('ct', 'st'))
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'ct' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == ct[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
69.5908510685

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: -ct_2 + st_0_2 == 0
  1: -ct_6 + st_1_2 == 0
  2: -ct_3 + st_0_3 == 0
  3: -ct_7 + st_1_3 == 0
  4: -ct_0 + st_0_0 == 0
  5: -ct_4 + st_1_0 == 0
  6: -ct_1 + st_0_1 == 0
  7: -ct_5 + st_1_1 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('ct', 'st'))
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'ct' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 5 expressions generated
dig_arrays:Info:Apply reachability analysis to 5 nestings to find valid ones
dig_arrays:Debug:4. Nesting st[i1][i2] == ct[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
70.6196789742

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: -ct_2 + st_0_2 == 0
  1: -ct_6 + st_1_2 == 0
  2: -ct_3 + st_0_3 == 0
  3: -ct_7 + st_1_3 == 0
  4: -ct_0 + st_0_0 == 0
  5: -ct_4 + st_1_0 == 0
  6: -ct_1 + st_0_1 == 0
  7: -ct_5 + st_1_1 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('ct', 'st'))
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'ct' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == ct[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
69.3288090229

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: -ct_2 + st_0_2 == 0
  1: -ct_6 + st_1_2 == 0
  2: -ct_3 + st_0_3 == 0
  3: -ct_7 + st_1_3 == 0
  4: -ct_0 + st_0_0 == 0
  5: -ct_4 + st_1_0 == 0
  6: -ct_1 + st_0_1 == 0
  7: -ct_5 + st_1_1 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('ct', 'st'))
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'ct' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == ct[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
69.7344450951

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: -ct_2 + st_0_2 == 0
  1: -ct_6 + st_1_2 == 0
  2: -ct_3 + st_0_3 == 0
  3: -ct_7 + st_1_3 == 0
  4: -ct_0 + st_0_0 == 0
  5: -ct_4 + st_1_0 == 0
  6: -ct_1 + st_0_1 == 0
  7: -ct_5 + st_1_1 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('ct', 'st'))
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'ct' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == ct[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
69.6394410133

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: -ct_2 + st_0_2 == 0
  1: -ct_6 + st_1_2 == 0
  2: -ct_3 + st_0_3 == 0
  3: -ct_7 + st_1_3 == 0
  4: -ct_0 + st_0_0 == 0
  5: -ct_4 + st_1_0 == 0
  6: -ct_1 + st_0_1 == 0
  7: -ct_5 + st_1_1 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('ct', 'st'))
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'ct' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == ct[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
69.5467741489

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: -ct_2 + st_0_2 == 0
  1: -ct_6 + st_1_2 == 0
  2: -ct_3 + st_0_3 == 0
  3: -ct_7 + st_1_3 == 0
  4: -ct_0 + st_0_0 == 0
  5: -ct_4 + st_1_0 == 0
  6: -ct_1 + st_0_1 == 0
  7: -ct_5 + st_1_1 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('ct', 'st'))
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'ct' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == ct[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
69.7040200233

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: -ct_2 + st_0_2 == 0
  1: -ct_6 + st_1_2 == 0
  2: -ct_3 + st_0_3 == 0
  3: -ct_7 + st_1_3 == 0
  4: -ct_0 + st_0_0 == 0
  5: -ct_4 + st_1_0 == 0
  6: -ct_1 + st_0_1 == 0
  7: -ct_5 + st_1_1 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('ct', 'st'))
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'ct' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == ct[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
69.8254430294

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 194 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=195, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=195)
dig_miscs:Debug:sample_traces: chose |tcs1|=195, |tcs2|=105 (attempted 195/300 tcs)
dig:Info:Compute invs over 195 tcs
dig_miscs:Debug:Create equations from 195 traces
dig_miscs:Debug:Solve 195 (uniq) eqts for 195 unknowns
dig:Info:Detected invariants for Eqt:
  0: -ct_2 + st_0_2 == 0
  1: -ct_6 + st_1_2 == 0
  2: -ct_3 + st_0_3 == 0
  3: -ct_7 + st_1_3 == 0
  4: -ct_0 + st_0_0 == 0
  5: -ct_4 + st_1_0 == 0
  6: -ct_1 + st_0_1 == 0
  7: -ct_5 + st_1_1 == 0
refine:Debug:rfilter(|ps|=8, |tcs|=105)
refine:Debug:rfilter (before 8, after 8, diff 0)
dig_arrays:Info:Partition 8 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 8 eqts (group ('ct', 'st'))
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'ct' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'ct' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=8
dig_miscs:Debug:Create equations from 8 traces
dig_miscs:Debug:Solve 8 (uniq) eqts for 2 unknowns
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,ct,st,pt]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == ct[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
70.3035180569


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/AesEncrypt.l0.tcs'
Expect (0): 
* Run 0, time 73.3974990845, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 1, time 73.2834310532, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 2, time 72.9537599087, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 3, time 72.7853939533, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 4, time 69.6030371189, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 5, time 69.9623310566, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 6, time 69.8858909607, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 7, time 70.1711101532, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 8, time 69.6454951763, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 9, time 69.6032049656, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 10, time 70.0477571487, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 11, time 69.5908510685, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 12, time 70.6196789742, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 13, time 69.3288090229, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 14, time 69.7344450951, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 15, time 69.6394410133, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 16, time 69.5467741489, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 17, time 69.7040200233, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 18, time 69.8254430294, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 19, time 70.3035180569, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
TIME AVG 70.5 (../invgen/Traces/AES_tosem/multilocs/l0/AesEncrypt.l0.tcs)


***** (2) Generate invs from file 'AesKeySetupDec.l0.tcs' *****

dig:Info:2013-06-24 22:54:01.033768, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [cipherKey, rk]
2. xinfo: 
 0. All: ['cipherKey', 'rk']
 1. Assume: []
 2. Const: []
 3. Expect: []
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 18 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/AesKeySetupDec.l0.tcs", |vs|=2, deg=7, |terms|=36

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
71.8634109497

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
71.9737150669

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
73.4237720966

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
73.9562060833

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
75.8439741135

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
73.3763749599

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
73.3167250156

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
73.9221148491

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
73.5400469303

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
73.6437759399

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
73.097561121

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
73.7961220741

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
73.5479769707

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
74.0010869503

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
73.6328141689

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
74.425483942

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
73.9301869869

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
73.9179461002

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
73.5732848644

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
72.2177228928


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/AesKeySetupDec.l0.tcs'
Expect (0): 
* Run 0, time 71.8634109497, deg 7
* Run 1, time 71.9737150669, deg 7
* Run 2, time 73.4237720966, deg 7
* Run 3, time 73.9562060833, deg 7
* Run 4, time 75.8439741135, deg 7
* Run 5, time 73.3763749599, deg 7
* Run 6, time 73.3167250156, deg 7
* Run 7, time 73.9221148491, deg 7
* Run 8, time 73.5400469303, deg 7
* Run 9, time 73.6437759399, deg 7
* Run 10, time 73.097561121, deg 7
* Run 11, time 73.7961220741, deg 7
* Run 12, time 73.5479769707, deg 7
* Run 13, time 74.0010869503, deg 7
* Run 14, time 73.6328141689, deg 7
* Run 15, time 74.425483942, deg 7
* Run 16, time 73.9301869869, deg 7
* Run 17, time 73.9179461002, deg 7
* Run 18, time 73.5732848644, deg 7
* Run 19, time 72.2177228928, deg 7
TIME AVG 73.6 (../invgen/Traces/AES_tosem/multilocs/l0/AesKeySetupDec.l0.tcs)


***** (3) Generate invs from file 'AesKeySetupEnc.l0.tcs' *****

dig:Info:2013-06-24 23:18:33.660378, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [cipherKey, rk]
2. xinfo: 
 0. All: ['cipherKey', 'rk']
 1. Assume: []
 2. Const: []
 3. Expect: []
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 18 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/AesKeySetupEnc.l0.tcs", |vs|=2, deg=7, |terms|=36

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: -cipherKey_9 + rk_2_1 == 0
  1: -cipherKey_5 + rk_1_1 == 0
  2: -cipherKey_4 + rk_1_0 == 0
  3: -cipherKey_8 + rk_2_0 == 0
  4: -cipherKey_3 + rk_0_3 == 0
  5: -cipherKey_13 + rk_3_1 == 0
  6: -cipherKey_12 + rk_3_0 == 0
  7: -cipherKey_10 + rk_2_2 == 0
  8: -cipherKey_15 + rk_3_3 == 0
  9: -cipherKey_6 + rk_1_2 == 0
 10: -cipherKey_1 + rk_0_1 == 0
 11: -cipherKey_0 + rk_0_0 == 0
 12: -cipherKey_7 + rk_1_3 == 0
 13: -cipherKey_14 + rk_3_2 == 0
 14: -cipherKey_11 + rk_2_3 == 0
 15: -cipherKey_2 + rk_0_2 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 1}, {'rk0': 1, 'rk1': 0}, {'rk0': 2, 'rk1': 0}, {'rk0': 0, 'rk1': 3}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 1}, {'rk0': 1, 'rk1': 0}, {'rk0': 2, 'rk1': 0}, {'rk0': 0, 'rk1': 3}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.2328870296

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: -cipherKey_15 + rk_3_3 == 0
  1: -cipherKey_2 + rk_0_2 == 0
  2: -cipherKey_4 + rk_1_0 == 0
  3: -cipherKey_1 + rk_0_1 == 0
  4: -cipherKey_7 + rk_1_3 == 0
  5: -cipherKey_14 + rk_3_2 == 0
  6: -cipherKey_12 + rk_3_0 == 0
  7: -cipherKey_10 + rk_2_2 == 0
  8: -cipherKey_9 + rk_2_1 == 0
  9: -cipherKey_6 + rk_1_2 == 0
 10: -cipherKey_5 + rk_1_1 == 0
 11: -cipherKey_0 + rk_0_0 == 0
 12: -cipherKey_13 + rk_3_1 == 0
 13: -cipherKey_8 + rk_2_0 == 0
 14: -cipherKey_11 + rk_2_3 == 0
 15: -cipherKey_3 + rk_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
75.9262139797

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: -cipherKey_15 + rk_3_3 == 0
  1: -cipherKey_2 + rk_0_2 == 0
  2: -cipherKey_4 + rk_1_0 == 0
  3: -cipherKey_1 + rk_0_1 == 0
  4: -cipherKey_7 + rk_1_3 == 0
  5: -cipherKey_14 + rk_3_2 == 0
  6: -cipherKey_12 + rk_3_0 == 0
  7: -cipherKey_10 + rk_2_2 == 0
  8: -cipherKey_9 + rk_2_1 == 0
  9: -cipherKey_6 + rk_1_2 == 0
 10: -cipherKey_5 + rk_1_1 == 0
 11: -cipherKey_0 + rk_0_0 == 0
 12: -cipherKey_13 + rk_3_1 == 0
 13: -cipherKey_8 + rk_2_0 == 0
 14: -cipherKey_11 + rk_2_3 == 0
 15: -cipherKey_3 + rk_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
75.9082610607

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: -cipherKey_15 + rk_3_3 == 0
  1: -cipherKey_2 + rk_0_2 == 0
  2: -cipherKey_4 + rk_1_0 == 0
  3: -cipherKey_1 + rk_0_1 == 0
  4: -cipherKey_7 + rk_1_3 == 0
  5: -cipherKey_14 + rk_3_2 == 0
  6: -cipherKey_12 + rk_3_0 == 0
  7: -cipherKey_10 + rk_2_2 == 0
  8: -cipherKey_9 + rk_2_1 == 0
  9: -cipherKey_6 + rk_1_2 == 0
 10: -cipherKey_5 + rk_1_1 == 0
 11: -cipherKey_0 + rk_0_0 == 0
 12: -cipherKey_13 + rk_3_1 == 0
 13: -cipherKey_8 + rk_2_0 == 0
 14: -cipherKey_11 + rk_2_3 == 0
 15: -cipherKey_3 + rk_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.2968699932

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: -cipherKey_15 + rk_3_3 == 0
  1: -cipherKey_2 + rk_0_2 == 0
  2: -cipherKey_4 + rk_1_0 == 0
  3: -cipherKey_1 + rk_0_1 == 0
  4: -cipherKey_7 + rk_1_3 == 0
  5: -cipherKey_14 + rk_3_2 == 0
  6: -cipherKey_12 + rk_3_0 == 0
  7: -cipherKey_10 + rk_2_2 == 0
  8: -cipherKey_9 + rk_2_1 == 0
  9: -cipherKey_6 + rk_1_2 == 0
 10: -cipherKey_5 + rk_1_1 == 0
 11: -cipherKey_0 + rk_0_0 == 0
 12: -cipherKey_13 + rk_3_1 == 0
 13: -cipherKey_8 + rk_2_0 == 0
 14: -cipherKey_11 + rk_2_3 == 0
 15: -cipherKey_3 + rk_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.0627989769

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: -cipherKey_15 + rk_3_3 == 0
  1: -cipherKey_2 + rk_0_2 == 0
  2: -cipherKey_4 + rk_1_0 == 0
  3: -cipherKey_1 + rk_0_1 == 0
  4: -cipherKey_7 + rk_1_3 == 0
  5: -cipherKey_14 + rk_3_2 == 0
  6: -cipherKey_12 + rk_3_0 == 0
  7: -cipherKey_10 + rk_2_2 == 0
  8: -cipherKey_9 + rk_2_1 == 0
  9: -cipherKey_6 + rk_1_2 == 0
 10: -cipherKey_5 + rk_1_1 == 0
 11: -cipherKey_0 + rk_0_0 == 0
 12: -cipherKey_13 + rk_3_1 == 0
 13: -cipherKey_8 + rk_2_0 == 0
 14: -cipherKey_11 + rk_2_3 == 0
 15: -cipherKey_3 + rk_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.3348040581

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: -cipherKey_15 + rk_3_3 == 0
  1: -cipherKey_2 + rk_0_2 == 0
  2: -cipherKey_4 + rk_1_0 == 0
  3: -cipherKey_1 + rk_0_1 == 0
  4: -cipherKey_7 + rk_1_3 == 0
  5: -cipherKey_14 + rk_3_2 == 0
  6: -cipherKey_12 + rk_3_0 == 0
  7: -cipherKey_10 + rk_2_2 == 0
  8: -cipherKey_9 + rk_2_1 == 0
  9: -cipherKey_6 + rk_1_2 == 0
 10: -cipherKey_5 + rk_1_1 == 0
 11: -cipherKey_0 + rk_0_0 == 0
 12: -cipherKey_13 + rk_3_1 == 0
 13: -cipherKey_8 + rk_2_0 == 0
 14: -cipherKey_11 + rk_2_3 == 0
 15: -cipherKey_3 + rk_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
75.9037590027

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: -cipherKey_9 + rk_2_1 == 0
  1: -cipherKey_5 + rk_1_1 == 0
  2: -cipherKey_4 + rk_1_0 == 0
  3: -cipherKey_8 + rk_2_0 == 0
  4: -cipherKey_3 + rk_0_3 == 0
  5: -cipherKey_13 + rk_3_1 == 0
  6: -cipherKey_12 + rk_3_0 == 0
  7: -cipherKey_10 + rk_2_2 == 0
  8: -cipherKey_15 + rk_3_3 == 0
  9: -cipherKey_6 + rk_1_2 == 0
 10: -cipherKey_1 + rk_0_1 == 0
 11: -cipherKey_0 + rk_0_0 == 0
 12: -cipherKey_7 + rk_1_3 == 0
 13: -cipherKey_14 + rk_3_2 == 0
 14: -cipherKey_11 + rk_2_3 == 0
 15: -cipherKey_2 + rk_0_2 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 1}, {'rk0': 1, 'rk1': 0}, {'rk0': 2, 'rk1': 0}, {'rk0': 0, 'rk1': 3}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 1}, {'rk0': 1, 'rk1': 0}, {'rk0': 2, 'rk1': 0}, {'rk0': 0, 'rk1': 3}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
75.82716012

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_14 - rk_3_2 == 0
  1: -cipherKey_2 + rk_0_2 == 0
  2: -cipherKey_4 + rk_1_0 == 0
  3: -cipherKey_13 + rk_3_1 == 0
  4: -cipherKey_9 + rk_2_1 == 0
  5: -cipherKey_8 + rk_2_0 == 0
  6: -cipherKey_1 + rk_0_1 == 0
  7: -cipherKey_10 + rk_2_2 == 0
  8: -cipherKey_7 + rk_1_3 == 0
  9: -cipherKey_3 + rk_0_3 == 0
 10: -cipherKey_6 + rk_1_2 == 0
 11: -cipherKey_0 + rk_0_0 == 0
 12: -cipherKey_11 + rk_2_3 == 0
 13: -cipherKey_5 + rk_1_1 == 0
 14: -cipherKey_12 + rk_3_0 == 0
 15: -cipherKey_15 + rk_3_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Warn:Some rels were modifed
cipherKey_14 - rk_3_2 == 0
cipherKey_2 - rk_0_2 == 0
cipherKey_4 - rk_1_0 == 0
cipherKey_13 - rk_3_1 == 0
cipherKey_9 - rk_2_1 == 0
cipherKey_8 - rk_2_0 == 0
cipherKey_1 - rk_0_1 == 0
cipherKey_10 - rk_2_2 == 0
cipherKey_7 - rk_1_3 == 0
cipherKey_3 - rk_0_3 == 0
cipherKey_6 - rk_1_2 == 0
cipherKey_0 - rk_0_0 == 0
cipherKey_11 - rk_2_3 == 0
cipherKey_5 - rk_1_1 == 0
cipherKey_12 - rk_3_0 == 0
cipherKey_15 - rk_3_3 == 0
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 3}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 1}, {'rk0': 3, 'rk1': 0}, {'rk0': 3, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 3}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 1}, {'rk0': 3, 'rk1': 0}, {'rk0': 3, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.1369252205

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: -cipherKey_9 + rk_2_1 == 0
  1: -cipherKey_5 + rk_1_1 == 0
  2: -cipherKey_4 + rk_1_0 == 0
  3: -cipherKey_14 + rk_3_2 == 0
  4: -cipherKey_2 + rk_0_2 == 0
  5: -cipherKey_8 + rk_2_0 == 0
  6: -cipherKey_3 + rk_0_3 == 0
  7: -cipherKey_10 + rk_2_2 == 0
  8: -cipherKey_1 + rk_0_1 == 0
  9: -cipherKey_6 + rk_1_2 == 0
 10: -cipherKey_12 + rk_3_0 == 0
 11: -cipherKey_0 + rk_0_0 == 0
 12: -cipherKey_7 + rk_1_3 == 0
 13: -cipherKey_15 + rk_3_3 == 0
 14: -cipherKey_11 + rk_2_3 == 0
 15: -cipherKey_13 + rk_3_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 1}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 1}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.2297008038

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: -cipherKey_15 + rk_3_3 == 0
  1: -cipherKey_2 + rk_0_2 == 0
  2: -cipherKey_4 + rk_1_0 == 0
  3: -cipherKey_1 + rk_0_1 == 0
  4: -cipherKey_7 + rk_1_3 == 0
  5: -cipherKey_14 + rk_3_2 == 0
  6: -cipherKey_12 + rk_3_0 == 0
  7: -cipherKey_10 + rk_2_2 == 0
  8: -cipherKey_9 + rk_2_1 == 0
  9: -cipherKey_6 + rk_1_2 == 0
 10: -cipherKey_5 + rk_1_1 == 0
 11: -cipherKey_0 + rk_0_0 == 0
 12: -cipherKey_13 + rk_3_1 == 0
 13: -cipherKey_8 + rk_2_0 == 0
 14: -cipherKey_11 + rk_2_3 == 0
 15: -cipherKey_3 + rk_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.2869400978

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: -cipherKey_13 + rk_3_1 == 0
  1: -cipherKey_2 + rk_0_2 == 0
  2: -cipherKey_4 + rk_1_0 == 0
  3: -cipherKey_3 + rk_0_3 == 0
  4: -cipherKey_5 + rk_1_1 == 0
  5: -cipherKey_15 + rk_3_3 == 0
  6: cipherKey_14 - rk_3_2 == 0
  7: -cipherKey_10 + rk_2_2 == 0
  8: -cipherKey_1 + rk_0_1 == 0
  9: -cipherKey_8 + rk_2_0 == 0
 10: -cipherKey_12 + rk_3_0 == 0
 11: -cipherKey_6 + rk_1_2 == 0
 12: -cipherKey_0 + rk_0_0 == 0
 13: -cipherKey_7 + rk_1_3 == 0
 14: -cipherKey_9 + rk_2_1 == 0
 15: -cipherKey_11 + rk_2_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Warn:Some rels were modifed
-cipherKey_13 + rk_3_1 == 0
-cipherKey_2 + rk_0_2 == 0
-cipherKey_4 + rk_1_0 == 0
-cipherKey_3 + rk_0_3 == 0
-cipherKey_5 + rk_1_1 == 0
-cipherKey_15 + rk_3_3 == 0
-cipherKey_14 + rk_3_2 == 0
-cipherKey_10 + rk_2_2 == 0
-cipherKey_1 + rk_0_1 == 0
-cipherKey_8 + rk_2_0 == 0
-cipherKey_12 + rk_3_0 == 0
-cipherKey_6 + rk_1_2 == 0
-cipherKey_0 + rk_0_0 == 0
-cipherKey_7 + rk_1_3 == 0
-cipherKey_9 + rk_2_1 == 0
-cipherKey_11 + rk_2_3 == 0
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 1}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 3}, {'rk0': 1, 'rk1': 1}, {'rk0': 3, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 1}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 3}, {'rk0': 1, 'rk1': 1}, {'rk0': 3, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.8585579395

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: -cipherKey_15 + rk_3_3 == 0
  1: -cipherKey_2 + rk_0_2 == 0
  2: -cipherKey_4 + rk_1_0 == 0
  3: -cipherKey_1 + rk_0_1 == 0
  4: -cipherKey_7 + rk_1_3 == 0
  5: -cipherKey_14 + rk_3_2 == 0
  6: -cipherKey_12 + rk_3_0 == 0
  7: -cipherKey_10 + rk_2_2 == 0
  8: -cipherKey_9 + rk_2_1 == 0
  9: -cipherKey_6 + rk_1_2 == 0
 10: -cipherKey_5 + rk_1_1 == 0
 11: -cipherKey_0 + rk_0_0 == 0
 12: -cipherKey_13 + rk_3_1 == 0
 13: -cipherKey_8 + rk_2_0 == 0
 14: -cipherKey_11 + rk_2_3 == 0
 15: -cipherKey_3 + rk_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.9289968014

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: -cipherKey_15 + rk_3_3 == 0
  1: -cipherKey_2 + rk_0_2 == 0
  2: -cipherKey_4 + rk_1_0 == 0
  3: -cipherKey_1 + rk_0_1 == 0
  4: -cipherKey_7 + rk_1_3 == 0
  5: -cipherKey_14 + rk_3_2 == 0
  6: -cipherKey_12 + rk_3_0 == 0
  7: -cipherKey_10 + rk_2_2 == 0
  8: -cipherKey_9 + rk_2_1 == 0
  9: -cipherKey_6 + rk_1_2 == 0
 10: -cipherKey_5 + rk_1_1 == 0
 11: -cipherKey_0 + rk_0_0 == 0
 12: -cipherKey_13 + rk_3_1 == 0
 13: -cipherKey_8 + rk_2_0 == 0
 14: -cipherKey_11 + rk_2_3 == 0
 15: -cipherKey_3 + rk_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
75.7989099026

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: -cipherKey_15 + rk_3_3 == 0
  1: -cipherKey_2 + rk_0_2 == 0
  2: -cipherKey_4 + rk_1_0 == 0
  3: -cipherKey_1 + rk_0_1 == 0
  4: -cipherKey_7 + rk_1_3 == 0
  5: -cipherKey_14 + rk_3_2 == 0
  6: -cipherKey_12 + rk_3_0 == 0
  7: -cipherKey_10 + rk_2_2 == 0
  8: -cipherKey_9 + rk_2_1 == 0
  9: -cipherKey_6 + rk_1_2 == 0
 10: -cipherKey_5 + rk_1_1 == 0
 11: -cipherKey_0 + rk_0_0 == 0
 12: -cipherKey_13 + rk_3_1 == 0
 13: -cipherKey_8 + rk_2_0 == 0
 14: -cipherKey_11 + rk_2_3 == 0
 15: -cipherKey_3 + rk_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.2154951096

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: -cipherKey_15 + rk_3_3 == 0
  1: -cipherKey_2 + rk_0_2 == 0
  2: -cipherKey_4 + rk_1_0 == 0
  3: -cipherKey_1 + rk_0_1 == 0
  4: -cipherKey_7 + rk_1_3 == 0
  5: -cipherKey_14 + rk_3_2 == 0
  6: -cipherKey_12 + rk_3_0 == 0
  7: -cipherKey_10 + rk_2_2 == 0
  8: -cipherKey_9 + rk_2_1 == 0
  9: -cipherKey_6 + rk_1_2 == 0
 10: -cipherKey_5 + rk_1_1 == 0
 11: -cipherKey_0 + rk_0_0 == 0
 12: -cipherKey_13 + rk_3_1 == 0
 13: -cipherKey_8 + rk_2_0 == 0
 14: -cipherKey_11 + rk_2_3 == 0
 15: -cipherKey_3 + rk_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.2407619953

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: -cipherKey_9 + rk_2_1 == 0
  1: -cipherKey_5 + rk_1_1 == 0
  2: -cipherKey_4 + rk_1_0 == 0
  3: -cipherKey_2 + rk_0_2 == 0
  4: -cipherKey_8 + rk_2_0 == 0
  5: -cipherKey_13 + rk_3_1 == 0
  6: -cipherKey_12 + rk_3_0 == 0
  7: -cipherKey_10 + rk_2_2 == 0
  8: -cipherKey_1 + rk_0_1 == 0
  9: -cipherKey_6 + rk_1_2 == 0
 10: -cipherKey_15 + rk_3_3 == 0
 11: -cipherKey_0 + rk_0_0 == 0
 12: -cipherKey_7 + rk_1_3 == 0
 13: -cipherKey_3 + rk_0_3 == 0
 14: -cipherKey_11 + rk_2_3 == 0
 15: -cipherKey_14 + rk_3_2 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 1}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 1}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
75.8441910744

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_14 - rk_3_2 == 0
  1: -cipherKey_2 + rk_0_2 == 0
  2: -cipherKey_4 + rk_1_0 == 0
  3: -cipherKey_3 + rk_0_3 == 0
  4: -cipherKey_5 + rk_1_1 == 0
  5: -cipherKey_15 + rk_3_3 == 0
  6: -cipherKey_1 + rk_0_1 == 0
  7: -cipherKey_10 + rk_2_2 == 0
  8: -cipherKey_8 + rk_2_0 == 0
  9: -cipherKey_12 + rk_3_0 == 0
 10: -cipherKey_6 + rk_1_2 == 0
 11: -cipherKey_0 + rk_0_0 == 0
 12: -cipherKey_7 + rk_1_3 == 0
 13: -cipherKey_9 + rk_2_1 == 0
 14: -cipherKey_11 + rk_2_3 == 0
 15: -cipherKey_13 + rk_3_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Warn:Some rels were modifed
cipherKey_14 - rk_3_2 == 0
cipherKey_2 - rk_0_2 == 0
cipherKey_4 - rk_1_0 == 0
cipherKey_3 - rk_0_3 == 0
cipherKey_5 - rk_1_1 == 0
cipherKey_15 - rk_3_3 == 0
cipherKey_1 - rk_0_1 == 0
cipherKey_10 - rk_2_2 == 0
cipherKey_8 - rk_2_0 == 0
cipherKey_12 - rk_3_0 == 0
cipherKey_6 - rk_1_2 == 0
cipherKey_0 - rk_0_0 == 0
cipherKey_7 - rk_1_3 == 0
cipherKey_9 - rk_2_1 == 0
cipherKey_11 - rk_2_3 == 0
cipherKey_13 - rk_3_1 == 0
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 3}, {'rk0': 1, 'rk1': 1}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 1}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 3}, {'rk0': 1, 'rk1': 1}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.3772540092

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: -cipherKey_15 + rk_3_3 == 0
  1: -cipherKey_2 + rk_0_2 == 0
  2: -cipherKey_4 + rk_1_0 == 0
  3: -cipherKey_1 + rk_0_1 == 0
  4: -cipherKey_7 + rk_1_3 == 0
  5: -cipherKey_14 + rk_3_2 == 0
  6: -cipherKey_12 + rk_3_0 == 0
  7: -cipherKey_10 + rk_2_2 == 0
  8: -cipherKey_9 + rk_2_1 == 0
  9: -cipherKey_6 + rk_1_2 == 0
 10: -cipherKey_5 + rk_1_1 == 0
 11: -cipherKey_0 + rk_0_0 == 0
 12: -cipherKey_13 + rk_3_1 == 0
 13: -cipherKey_8 + rk_2_0 == 0
 14: -cipherKey_11 + rk_2_3 == 0
 15: -cipherKey_3 + rk_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
75.8860330582

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: -cipherKey_9 + rk_2_1 == 0
  1: -cipherKey_5 + rk_1_1 == 0
  2: -cipherKey_4 + rk_1_0 == 0
  3: -cipherKey_14 + rk_3_2 == 0
  4: -cipherKey_2 + rk_0_2 == 0
  5: -cipherKey_13 + rk_3_1 == 0
  6: -cipherKey_12 + rk_3_0 == 0
  7: -cipherKey_10 + rk_2_2 == 0
  8: -cipherKey_3 + rk_0_3 == 0
  9: -cipherKey_6 + rk_1_2 == 0
 10: -cipherKey_1 + rk_0_1 == 0
 11: -cipherKey_0 + rk_0_0 == 0
 12: -cipherKey_15 + rk_3_3 == 0
 13: -cipherKey_7 + rk_1_3 == 0
 14: -cipherKey_11 + rk_2_3 == 0
 15: -cipherKey_8 + rk_2_0 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 1}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 1, 'rk1': 3}, {'rk0': 2, 'rk1': 3}, {'rk0': 2, 'rk1': 0}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 1}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 1, 'rk1': 3}, {'rk0': 2, 'rk1': 3}, {'rk0': 2, 'rk1': 0}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [cipherKey,rk]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
75.8281311989


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/AesKeySetupEnc.l0.tcs'
Expect (0): 
* Run 0, time 76.2328870296, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 1}, {'rk0': 1, 'rk1': 0}, {'rk0': 2, 'rk1': 0}, {'rk0': 0, 'rk1': 3}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 2}])
* Run 1, time 75.9262139797, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 2, time 75.9082610607, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 3, time 76.2968699932, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 4, time 76.0627989769, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 5, time 76.3348040581, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 6, time 75.9037590027, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 7, time 75.82716012, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 1}, {'rk0': 1, 'rk1': 0}, {'rk0': 2, 'rk1': 0}, {'rk0': 0, 'rk1': 3}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 2}])
* Run 8, time 76.1369252205, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 3}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 1}, {'rk0': 3, 'rk1': 0}, {'rk0': 3, 'rk1': 3}])
* Run 9, time 76.2297008038, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 1}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 1}])
* Run 10, time 76.2869400978, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 11, time 76.8585579395, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 1}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 3}, {'rk0': 1, 'rk1': 1}, {'rk0': 3, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}])
* Run 12, time 76.9289968014, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 13, time 75.7989099026, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 14, time 76.2154951096, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 15, time 76.2407619953, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 16, time 75.8441910744, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 1}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}])
* Run 17, time 76.3772540092, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 3}, {'rk0': 1, 'rk1': 1}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 1}])
* Run 18, time 75.8860330582, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 19, time 75.8281311989, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 1}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 1, 'rk1': 3}, {'rk0': 2, 'rk1': 3}, {'rk0': 2, 'rk1': 0}])
TIME AVG 76.2 (../invgen/Traces/AES_tosem/multilocs/l0/AesKeySetupEnc.l0.tcs)


***** (4) Generate invs from file 'Block2State.l0.tcs' *****

dig:Info:2013-06-24 23:43:58.392057, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [rvu, t]
2. xinfo: 
 0. All: ['rvu', 't']
 1. Assume: []
 2. Const: []
 3. Expect: ['r[i][j] + t[4i + j] = 0']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 18 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/Block2State.l0.tcs", |vs|=2, deg=7, |terms|=36

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_0_1 + t_1 == 0
  1: -rvu_3_0 + t_12 == 0
  2: -rvu_1_1 + t_5 == 0
  3: -rvu_2_1 + t_9 == 0
  4: -rvu_0_2 + t_2 == 0
  5: -rvu_3_1 + t_13 == 0
  6: -rvu_1_2 + t_6 == 0
  7: -rvu_2_2 + t_10 == 0
  8: -rvu_0_3 + t_3 == 0
  9: -rvu_3_2 + t_14 == 0
 10: -rvu_1_3 + t_7 == 0
 11: -rvu_0_0 + t_0 == 0
 12: -rvu_2_3 + t_11 == 0
 13: -rvu_1_0 + t_4 == 0
 14: -rvu_3_3 + t_15 == 0
 15: -rvu_2_0 + t_8 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 't'))
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 't' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rvu): lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,t]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == t[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
4.12005519867

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_0_1 + t_1 == 0
  1: -rvu_3_0 + t_12 == 0
  2: -rvu_1_1 + t_5 == 0
  3: -rvu_2_1 + t_9 == 0
  4: -rvu_0_2 + t_2 == 0
  5: -rvu_3_1 + t_13 == 0
  6: -rvu_1_2 + t_6 == 0
  7: -rvu_2_2 + t_10 == 0
  8: -rvu_0_3 + t_3 == 0
  9: -rvu_3_2 + t_14 == 0
 10: -rvu_1_3 + t_7 == 0
 11: -rvu_0_0 + t_0 == 0
 12: -rvu_2_3 + t_11 == 0
 13: -rvu_1_0 + t_4 == 0
 14: -rvu_3_3 + t_15 == 0
 15: -rvu_2_0 + t_8 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 't'))
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 't' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rvu): lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,t]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == t[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
4.11720585823

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_0_1 + t_1 == 0
  1: -rvu_3_0 + t_12 == 0
  2: -rvu_1_1 + t_5 == 0
  3: -rvu_2_1 + t_9 == 0
  4: -rvu_0_2 + t_2 == 0
  5: -rvu_3_1 + t_13 == 0
  6: -rvu_1_2 + t_6 == 0
  7: -rvu_2_2 + t_10 == 0
  8: -rvu_0_3 + t_3 == 0
  9: -rvu_3_2 + t_14 == 0
 10: -rvu_1_3 + t_7 == 0
 11: -rvu_0_0 + t_0 == 0
 12: -rvu_2_3 + t_11 == 0
 13: -rvu_1_0 + t_4 == 0
 14: -rvu_3_3 + t_15 == 0
 15: -rvu_2_0 + t_8 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 't'))
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 't' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rvu): lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,t]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == t[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
4.1435880661

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_0_1 + t_1 == 0
  1: -rvu_3_0 + t_12 == 0
  2: -rvu_1_1 + t_5 == 0
  3: -rvu_2_1 + t_9 == 0
  4: -rvu_0_2 + t_2 == 0
  5: -rvu_3_1 + t_13 == 0
  6: -rvu_1_2 + t_6 == 0
  7: -rvu_2_2 + t_10 == 0
  8: -rvu_0_3 + t_3 == 0
  9: -rvu_3_2 + t_14 == 0
 10: -rvu_1_3 + t_7 == 0
 11: -rvu_0_0 + t_0 == 0
 12: -rvu_2_3 + t_11 == 0
 13: -rvu_1_0 + t_4 == 0
 14: -rvu_3_3 + t_15 == 0
 15: -rvu_2_0 + t_8 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 't'))
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 't' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rvu): lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,t]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == t[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
4.02709913254

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_0_1 + t_1 == 0
  1: -rvu_3_0 + t_12 == 0
  2: -rvu_1_1 + t_5 == 0
  3: -rvu_2_1 + t_9 == 0
  4: -rvu_0_2 + t_2 == 0
  5: -rvu_3_1 + t_13 == 0
  6: -rvu_1_2 + t_6 == 0
  7: -rvu_2_2 + t_10 == 0
  8: -rvu_0_3 + t_3 == 0
  9: -rvu_3_2 + t_14 == 0
 10: -rvu_1_3 + t_7 == 0
 11: -rvu_0_0 + t_0 == 0
 12: -rvu_2_3 + t_11 == 0
 13: -rvu_1_0 + t_4 == 0
 14: -rvu_3_3 + t_15 == 0
 15: -rvu_2_0 + t_8 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 't'))
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 't' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rvu): lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,t]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == t[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
4.1887409687

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_0_1 + t_1 == 0
  1: -rvu_3_0 + t_12 == 0
  2: -rvu_1_1 + t_5 == 0
  3: -rvu_2_1 + t_9 == 0
  4: -rvu_0_2 + t_2 == 0
  5: -rvu_3_1 + t_13 == 0
  6: -rvu_1_2 + t_6 == 0
  7: -rvu_2_2 + t_10 == 0
  8: -rvu_0_3 + t_3 == 0
  9: -rvu_3_2 + t_14 == 0
 10: -rvu_1_3 + t_7 == 0
 11: -rvu_0_0 + t_0 == 0
 12: -rvu_2_3 + t_11 == 0
 13: -rvu_1_0 + t_4 == 0
 14: -rvu_3_3 + t_15 == 0
 15: -rvu_2_0 + t_8 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 't'))
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 't' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rvu): lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,t]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == t[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
4.08435797691

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_0_1 + t_1 == 0
  1: -rvu_3_0 + t_12 == 0
  2: -rvu_1_1 + t_5 == 0
  3: -rvu_2_1 + t_9 == 0
  4: -rvu_0_2 + t_2 == 0
  5: -rvu_3_1 + t_13 == 0
  6: -rvu_1_2 + t_6 == 0
  7: -rvu_2_2 + t_10 == 0
  8: -rvu_0_3 + t_3 == 0
  9: -rvu_3_2 + t_14 == 0
 10: -rvu_1_3 + t_7 == 0
 11: -rvu_0_0 + t_0 == 0
 12: -rvu_2_3 + t_11 == 0
 13: -rvu_1_0 + t_4 == 0
 14: -rvu_3_3 + t_15 == 0
 15: -rvu_2_0 + t_8 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 't'))
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 't' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rvu): lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,t]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == t[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
4.06871700287

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_0_1 + t_1 == 0
  1: -rvu_3_0 + t_12 == 0
  2: -rvu_1_1 + t_5 == 0
  3: -rvu_2_1 + t_9 == 0
  4: -rvu_0_2 + t_2 == 0
  5: -rvu_3_1 + t_13 == 0
  6: -rvu_1_2 + t_6 == 0
  7: -rvu_2_2 + t_10 == 0
  8: -rvu_0_3 + t_3 == 0
  9: -rvu_3_2 + t_14 == 0
 10: -rvu_1_3 + t_7 == 0
 11: -rvu_0_0 + t_0 == 0
 12: -rvu_2_3 + t_11 == 0
 13: -rvu_1_0 + t_4 == 0
 14: -rvu_3_3 + t_15 == 0
 15: -rvu_2_0 + t_8 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 't'))
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 't' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rvu): lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,t]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == t[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
4.05228996277

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_0_1 + t_1 == 0
  1: -rvu_3_0 + t_12 == 0
  2: -rvu_1_1 + t_5 == 0
  3: -rvu_2_1 + t_9 == 0
  4: -rvu_0_2 + t_2 == 0
  5: -rvu_3_1 + t_13 == 0
  6: -rvu_1_2 + t_6 == 0
  7: -rvu_2_2 + t_10 == 0
  8: -rvu_0_3 + t_3 == 0
  9: -rvu_3_2 + t_14 == 0
 10: -rvu_1_3 + t_7 == 0
 11: -rvu_0_0 + t_0 == 0
 12: -rvu_2_3 + t_11 == 0
 13: -rvu_1_0 + t_4 == 0
 14: -rvu_3_3 + t_15 == 0
 15: -rvu_2_0 + t_8 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 't'))
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 't' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rvu): lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,t]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == t[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
4.11521792412

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_0_1 + t_1 == 0
  1: -rvu_3_0 + t_12 == 0
  2: -rvu_1_1 + t_5 == 0
  3: -rvu_2_1 + t_9 == 0
  4: -rvu_0_2 + t_2 == 0
  5: -rvu_3_1 + t_13 == 0
  6: -rvu_1_2 + t_6 == 0
  7: -rvu_2_2 + t_10 == 0
  8: -rvu_0_3 + t_3 == 0
  9: -rvu_3_2 + t_14 == 0
 10: -rvu_1_3 + t_7 == 0
 11: -rvu_0_0 + t_0 == 0
 12: -rvu_2_3 + t_11 == 0
 13: -rvu_1_0 + t_4 == 0
 14: -rvu_3_3 + t_15 == 0
 15: -rvu_2_0 + t_8 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 't'))
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 't' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rvu): lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,t]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == t[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
4.24020504951

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_0_1 + t_1 == 0
  1: -rvu_3_0 + t_12 == 0
  2: -rvu_1_1 + t_5 == 0
  3: -rvu_2_1 + t_9 == 0
  4: -rvu_0_2 + t_2 == 0
  5: -rvu_3_1 + t_13 == 0
  6: -rvu_1_2 + t_6 == 0
  7: -rvu_2_2 + t_10 == 0
  8: -rvu_0_3 + t_3 == 0
  9: -rvu_3_2 + t_14 == 0
 10: -rvu_1_3 + t_7 == 0
 11: -rvu_0_0 + t_0 == 0
 12: -rvu_2_3 + t_11 == 0
 13: -rvu_1_0 + t_4 == 0
 14: -rvu_3_3 + t_15 == 0
 15: -rvu_2_0 + t_8 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 't'))
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 't' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rvu): lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,t]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == t[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
4.05156493187

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_0_1 + t_1 == 0
  1: -rvu_3_0 + t_12 == 0
  2: -rvu_1_1 + t_5 == 0
  3: -rvu_2_1 + t_9 == 0
  4: -rvu_0_2 + t_2 == 0
  5: -rvu_3_1 + t_13 == 0
  6: -rvu_1_2 + t_6 == 0
  7: -rvu_2_2 + t_10 == 0
  8: -rvu_0_3 + t_3 == 0
  9: -rvu_3_2 + t_14 == 0
 10: -rvu_1_3 + t_7 == 0
 11: -rvu_0_0 + t_0 == 0
 12: -rvu_2_3 + t_11 == 0
 13: -rvu_1_0 + t_4 == 0
 14: -rvu_3_3 + t_15 == 0
 15: -rvu_2_0 + t_8 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 't'))
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 't' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rvu): lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,t]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == t[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
4.12908101082

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_0_1 + t_1 == 0
  1: -rvu_3_0 + t_12 == 0
  2: -rvu_1_1 + t_5 == 0
  3: -rvu_2_1 + t_9 == 0
  4: -rvu_0_2 + t_2 == 0
  5: -rvu_3_1 + t_13 == 0
  6: -rvu_1_2 + t_6 == 0
  7: -rvu_2_2 + t_10 == 0
  8: -rvu_0_3 + t_3 == 0
  9: -rvu_3_2 + t_14 == 0
 10: -rvu_1_3 + t_7 == 0
 11: -rvu_0_0 + t_0 == 0
 12: -rvu_2_3 + t_11 == 0
 13: -rvu_1_0 + t_4 == 0
 14: -rvu_3_3 + t_15 == 0
 15: -rvu_2_0 + t_8 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 't'))
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 't' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rvu): lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,t]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == t[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
4.1184720993

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_0_1 + t_1 == 0
  1: -rvu_3_0 + t_12 == 0
  2: -rvu_1_1 + t_5 == 0
  3: -rvu_2_1 + t_9 == 0
  4: -rvu_0_2 + t_2 == 0
  5: -rvu_3_1 + t_13 == 0
  6: -rvu_1_2 + t_6 == 0
  7: -rvu_2_2 + t_10 == 0
  8: -rvu_0_3 + t_3 == 0
  9: -rvu_3_2 + t_14 == 0
 10: -rvu_1_3 + t_7 == 0
 11: -rvu_0_0 + t_0 == 0
 12: -rvu_2_3 + t_11 == 0
 13: -rvu_1_0 + t_4 == 0
 14: -rvu_3_3 + t_15 == 0
 15: -rvu_2_0 + t_8 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 't'))
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 't' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rvu): lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,t]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == t[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
4.10118579865

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_0_1 + t_1 == 0
  1: -rvu_3_0 + t_12 == 0
  2: -rvu_1_1 + t_5 == 0
  3: -rvu_2_1 + t_9 == 0
  4: -rvu_0_2 + t_2 == 0
  5: -rvu_3_1 + t_13 == 0
  6: -rvu_1_2 + t_6 == 0
  7: -rvu_2_2 + t_10 == 0
  8: -rvu_0_3 + t_3 == 0
  9: -rvu_3_2 + t_14 == 0
 10: -rvu_1_3 + t_7 == 0
 11: -rvu_0_0 + t_0 == 0
 12: -rvu_2_3 + t_11 == 0
 13: -rvu_1_0 + t_4 == 0
 14: -rvu_3_3 + t_15 == 0
 15: -rvu_2_0 + t_8 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 't'))
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 't' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rvu): lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,t]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == t[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
4.20311403275

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_0_1 + t_1 == 0
  1: -rvu_3_0 + t_12 == 0
  2: -rvu_1_1 + t_5 == 0
  3: -rvu_2_1 + t_9 == 0
  4: -rvu_0_2 + t_2 == 0
  5: -rvu_3_1 + t_13 == 0
  6: -rvu_1_2 + t_6 == 0
  7: -rvu_2_2 + t_10 == 0
  8: -rvu_0_3 + t_3 == 0
  9: -rvu_3_2 + t_14 == 0
 10: -rvu_1_3 + t_7 == 0
 11: -rvu_0_0 + t_0 == 0
 12: -rvu_2_3 + t_11 == 0
 13: -rvu_1_0 + t_4 == 0
 14: -rvu_3_3 + t_15 == 0
 15: -rvu_2_0 + t_8 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 't'))
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 't' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rvu): lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,t]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == t[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
4.12478494644

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_0_1 + t_1 == 0
  1: -rvu_3_0 + t_12 == 0
  2: -rvu_1_1 + t_5 == 0
  3: -rvu_2_1 + t_9 == 0
  4: -rvu_0_2 + t_2 == 0
  5: -rvu_3_1 + t_13 == 0
  6: -rvu_1_2 + t_6 == 0
  7: -rvu_2_2 + t_10 == 0
  8: -rvu_0_3 + t_3 == 0
  9: -rvu_3_2 + t_14 == 0
 10: -rvu_1_3 + t_7 == 0
 11: -rvu_0_0 + t_0 == 0
 12: -rvu_2_3 + t_11 == 0
 13: -rvu_1_0 + t_4 == 0
 14: -rvu_3_3 + t_15 == 0
 15: -rvu_2_0 + t_8 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 't'))
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 't' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rvu): lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,t]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == t[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
4.2553191185

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_0_1 + t_1 == 0
  1: -rvu_3_0 + t_12 == 0
  2: -rvu_1_1 + t_5 == 0
  3: -rvu_2_1 + t_9 == 0
  4: -rvu_0_2 + t_2 == 0
  5: -rvu_3_1 + t_13 == 0
  6: -rvu_1_2 + t_6 == 0
  7: -rvu_2_2 + t_10 == 0
  8: -rvu_0_3 + t_3 == 0
  9: -rvu_3_2 + t_14 == 0
 10: -rvu_1_3 + t_7 == 0
 11: -rvu_0_0 + t_0 == 0
 12: -rvu_2_3 + t_11 == 0
 13: -rvu_1_0 + t_4 == 0
 14: -rvu_3_3 + t_15 == 0
 15: -rvu_2_0 + t_8 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 't'))
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 't' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rvu): lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,t]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == t[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
4.10780978203

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_0_1 + t_1 == 0
  1: -rvu_3_0 + t_12 == 0
  2: -rvu_1_1 + t_5 == 0
  3: -rvu_2_1 + t_9 == 0
  4: -rvu_0_2 + t_2 == 0
  5: -rvu_3_1 + t_13 == 0
  6: -rvu_1_2 + t_6 == 0
  7: -rvu_2_2 + t_10 == 0
  8: -rvu_0_3 + t_3 == 0
  9: -rvu_3_2 + t_14 == 0
 10: -rvu_1_3 + t_7 == 0
 11: -rvu_0_0 + t_0 == 0
 12: -rvu_2_3 + t_11 == 0
 13: -rvu_1_0 + t_4 == 0
 14: -rvu_3_3 + t_15 == 0
 15: -rvu_2_0 + t_8 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 't'))
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 't' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rvu): lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,t]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == t[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
4.10279989243

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_0_1 + t_1 == 0
  1: -rvu_3_0 + t_12 == 0
  2: -rvu_1_1 + t_5 == 0
  3: -rvu_2_1 + t_9 == 0
  4: -rvu_0_2 + t_2 == 0
  5: -rvu_3_1 + t_13 == 0
  6: -rvu_1_2 + t_6 == 0
  7: -rvu_2_2 + t_10 == 0
  8: -rvu_0_3 + t_3 == 0
  9: -rvu_3_2 + t_14 == 0
 10: -rvu_1_3 + t_7 == 0
 11: -rvu_0_0 + t_0 == 0
 12: -rvu_2_3 + t_11 == 0
 13: -rvu_1_0 + t_4 == 0
 14: -rvu_3_3 + t_15 == 0
 15: -rvu_2_0 + t_8 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 't'))
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 't' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 't' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rvu): lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,t]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == t[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
4.22461605072


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/Block2State.l0.tcs'
Expect (1): r[i][j] + t[4i + j] = 0
* Run 0, time 4.12005519867, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 1, time 4.11720585823, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 2, time 4.1435880661, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 3, time 4.02709913254, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 4, time 4.1887409687, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 5, time 4.08435797691, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 6, time 4.06871700287, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 7, time 4.05228996277, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 8, time 4.11521792412, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 9, time 4.24020504951, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 10, time 4.05156493187, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 11, time 4.12908101082, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 12, time 4.1184720993, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 13, time 4.10118579865, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 14, time 4.20311403275, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 15, time 4.12478494644, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 16, time 4.2553191185, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 17, time 4.10780978203, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 18, time 4.10279989243, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 19, time 4.22461605072, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
TIME AVG 4.1 (../invgen/Traces/AES_tosem/multilocs/l0/Block2State.l0.tcs)


***** (5) Generate invs from file 'InvMixColumns.l0.tcs' *****

dig:Info:2013-06-24 23:45:21.234993, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [rvu, st]
2. xinfo: 
 0. All: ['rvu', 'st']
 1. Assume: []
 2. Const: []
 3. Expect: []
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 18 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/InvMixColumns.l0.tcs", |vs|=2, deg=7, |terms|=36

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.00060105324

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.01942610741

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.00659894943

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.03467702866

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.09160399437

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.15849804878

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.014523983

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.00915598869

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.06916809082

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.995249032974

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.00085496902

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.14135503769

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.01798200607

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.08429217339

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.00290894508

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.01095795631

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.00026202202

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.06346178055

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.10580801964

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.996315002441


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/InvMixColumns.l0.tcs'
Expect (0): 
* Run 0, time 1.00060105324, deg 7
* Run 1, time 1.01942610741, deg 7
* Run 2, time 1.00659894943, deg 7
* Run 3, time 1.03467702866, deg 7
* Run 4, time 1.09160399437, deg 7
* Run 5, time 1.15849804878, deg 7
* Run 6, time 1.014523983, deg 7
* Run 7, time 1.00915598869, deg 7
* Run 8, time 1.06916809082, deg 7
* Run 9, time 0.995249032974, deg 7
* Run 10, time 1.00085496902, deg 7
* Run 11, time 1.14135503769, deg 7
* Run 12, time 1.01798200607, deg 7
* Run 13, time 1.08429217339, deg 7
* Run 14, time 1.00290894508, deg 7
* Run 15, time 1.01095795631, deg 7
* Run 16, time 1.00026202202, deg 7
* Run 17, time 1.06346178055, deg 7
* Run 18, time 1.10580801964, deg 7
* Run 19, time 0.996315002441, deg 7
TIME AVG 1.0 (../invgen/Traces/AES_tosem/multilocs/l0/InvMixColumns.l0.tcs)


***** (6) Generate invs from file 'InvShiftRows.l0.tcs' *****

dig:Info:2013-06-24 23:45:42.306207, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [rvu, st]
2. xinfo: 
 0. All: ['rvu', 'st']
 1. Assume: []
 2. Const: []
 3. Expect: ['rvu = [[st[0][0], st[3][1], st[2][2], st[1][3]],[st[1][0], st[0][1], st[3][2], st[2][3]], [st[2][0], st[1][1], st[0][2], st[3][3]], [st[3][0], st[2][1], st[1][2], st[0][3]]];']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 18 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/InvShiftRows.l0.tcs", |vs|=2, deg=7, |terms|=36

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.63991808891

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.70526409149

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.68392300606

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.56568694115

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.61993312836

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.55467700958

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.59303689003

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.54189109802

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.65876603127

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.6918258667

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.50568604469

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.53982996941

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.60598111153

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.53477096558

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.66001796722

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.75857114792

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.70133113861

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.92523193359

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.68654799461

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.58647298813


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/InvShiftRows.l0.tcs'
Expect (1): rvu = [[st[0][0], st[3][1], st[2][2], st[1][3]],[st[1][0], st[0][1], st[3][2], st[2][3]], [st[2][0], st[1][1], st[0][2], st[3][3]], [st[3][0], st[2][1], st[1][2], st[0][3]]];
* Run 0, time 3.63991808891, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 1, time 3.70526409149, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 2, time 3.68392300606, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 3, time 3.56568694115, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 4, time 3.61993312836, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 5, time 3.55467700958, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 6, time 3.59303689003, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 7, time 3.54189109802, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 8, time 3.65876603127, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 9, time 3.6918258667, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 10, time 3.50568604469, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 11, time 3.53982996941, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 12, time 3.60598111153, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 13, time 3.53477096558, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 14, time 3.66001796722, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 15, time 3.75857114792, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 16, time 3.70133113861, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 17, time 3.92523193359, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 18, time 3.68654799461, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 19, time 3.58647298813, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
TIME AVG 3.6 (../invgen/Traces/AES_tosem/multilocs/l0/InvShiftRows.l0.tcs)


***** (7) Generate invs from file 'InvSubBytes.l0.tcs' *****

dig:Info:2013-06-24 23:46:55.330921, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [rvu, st]
2. xinfo: 
 0. All: ['rvu', 'st']
 1. Assume: []
 2. Const: []
 3. Expect: ['r[i][j] = Si[st[i,j]]']
 4. ExtFun: []
 5. ExtVar: ['S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22]', 'Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]']
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 18 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/InvSubBytes.l0.tcs", |vs|=2, deg=7, |terms|=36

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:8. Nesting rvu[i1][i2] == Si[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
dig_arrays:Debug:14. Nesting st[i1][i2] == S[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
3.4567220211

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:8. Nesting rvu[i1][i2] == Si[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
dig_arrays:Debug:14. Nesting st[i1][i2] == S[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
3.26583909988

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:8. Nesting rvu[i1][i2] == Si[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
dig_arrays:Debug:14. Nesting st[i1][i2] == S[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
3.20757913589

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:8. Nesting rvu[i1][i2] == Si[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
dig_arrays:Debug:14. Nesting st[i1][i2] == S[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
3.28444814682

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:8. Nesting rvu[i1][i2] == Si[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
dig_arrays:Debug:14. Nesting st[i1][i2] == S[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
3.27080702782

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:8. Nesting rvu[i1][i2] == Si[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
dig_arrays:Debug:14. Nesting st[i1][i2] == S[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
3.27486300468

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:8. Nesting rvu[i1][i2] == Si[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
dig_arrays:Debug:14. Nesting st[i1][i2] == S[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
3.22577595711

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:8. Nesting rvu[i1][i2] == Si[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
dig_arrays:Debug:14. Nesting st[i1][i2] == S[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
3.34381604195

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:8. Nesting rvu[i1][i2] == Si[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
dig_arrays:Debug:14. Nesting st[i1][i2] == S[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
3.15798401833

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:8. Nesting rvu[i1][i2] == Si[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
dig_arrays:Debug:14. Nesting st[i1][i2] == S[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
3.30915307999

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:8. Nesting rvu[i1][i2] == Si[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
dig_arrays:Debug:14. Nesting st[i1][i2] == S[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
3.16097903252

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:8. Nesting rvu[i1][i2] == Si[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
dig_arrays:Debug:14. Nesting st[i1][i2] == S[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
3.33279418945

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:8. Nesting rvu[i1][i2] == Si[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
dig_arrays:Debug:14. Nesting st[i1][i2] == S[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
3.27354001999

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:8. Nesting rvu[i1][i2] == Si[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
dig_arrays:Debug:14. Nesting st[i1][i2] == S[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
3.3396961689

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:8. Nesting rvu[i1][i2] == Si[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
dig_arrays:Debug:14. Nesting st[i1][i2] == S[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
3.21248316765

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:8. Nesting rvu[i1][i2] == Si[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
dig_arrays:Debug:14. Nesting st[i1][i2] == S[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
3.32143902779

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:8. Nesting rvu[i1][i2] == Si[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
dig_arrays:Debug:14. Nesting st[i1][i2] == S[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
3.18707990646

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:8. Nesting rvu[i1][i2] == Si[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
dig_arrays:Debug:14. Nesting st[i1][i2] == S[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
3.2767739296

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:8. Nesting rvu[i1][i2] == Si[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
dig_arrays:Debug:14. Nesting st[i1][i2] == S[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
3.308989048

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:8. Nesting rvu[i1][i2] == Si[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
dig_arrays:Debug:14. Nesting st[i1][i2] == S[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
3.24266004562


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/InvSubBytes.l0.tcs'
Expect (1): r[i][j] = Si[st[i,j]]
* Run 0, time 3.4567220211, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 1, time 3.26583909988, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 2, time 3.20757913589, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 3, time 3.28444814682, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 4, time 3.27080702782, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 5, time 3.27486300468, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 6, time 3.22577595711, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 7, time 3.34381604195, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 8, time 3.15798401833, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 9, time 3.30915307999, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 10, time 3.16097903252, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 11, time 3.33279418945, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 12, time 3.27354001999, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 13, time 3.3396961689, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 14, time 3.21248316765, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 15, time 3.32143902779, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 16, time 3.18707990646, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 17, time 3.2767739296, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 18, time 3.308989048, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 19, time 3.24266004562, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
TIME AVG 3.3 (../invgen/Traces/AES_tosem/multilocs/l0/InvSubBytes.l0.tcs)


***** (8) Generate invs from file 'KeyScheduleMod1.l0.tcs' *****

dig:Info:2013-06-24 23:48:01.028671, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [W, rk]
2. xinfo: 
 0. All: ['W', 'rk']
 1. Assume: []
 2. Const: []
 3. Expect: []
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 18 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/KeyScheduleMod1.l0.tcs", |vs|=2, deg=7, |terms|=36

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=99)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
77.8594021797

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=99)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
77.6727318764

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=99)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
77.702726841

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=99)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
77.6354079247

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=99)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.0991899967

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=99)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
77.4704151154

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=99)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
77.8849618435

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=99)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.2207560539

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=99)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
77.0772941113

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=99)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.9298868179

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=99)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
77.9997820854

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=99)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
77.9404358864

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=99)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.3187949657

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=99)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
77.8767368793

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=99)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.0815341473

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=99)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
77.660241127

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=99)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
77.0188140869

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=99)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.0680289268

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=99)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.1166219711

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=99)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
77.5549788475


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/KeyScheduleMod1.l0.tcs'
Expect (0): 
* Run 0, time 77.8594021797, deg 7
* Run 1, time 77.6727318764, deg 7
* Run 2, time 77.702726841, deg 7
* Run 3, time 77.6354079247, deg 7
* Run 4, time 79.0991899967, deg 7
* Run 5, time 77.4704151154, deg 7
* Run 6, time 77.8849618435, deg 7
* Run 7, time 78.2207560539, deg 7
* Run 8, time 77.0772941113, deg 7
* Run 9, time 78.9298868179, deg 7
* Run 10, time 77.9997820854, deg 7
* Run 11, time 77.9404358864, deg 7
* Run 12, time 78.3187949657, deg 7
* Run 13, time 77.8767368793, deg 7
* Run 14, time 78.0815341473, deg 7
* Run 15, time 77.660241127, deg 7
* Run 16, time 77.0188140869, deg 7
* Run 17, time 78.0680289268, deg 7
* Run 18, time 78.1166219711, deg 7
* Run 19, time 77.5549788475, deg 7
TIME AVG 77.9 (../invgen/Traces/AES_tosem/multilocs/l0/KeyScheduleMod1.l0.tcs)


***** (9) Generate invs from file 'KeyScheduleMod2.l0.tcs' *****

dig:Info:2013-06-25 00:14:01.916071, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [W, rk]
2. xinfo: 
 0. All: ['W', 'rk']
 1. Assume: []
 2. Const: []
 3. Expect: []
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 18 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/KeyScheduleMod2.l0.tcs", |vs|=2, deg=7, |terms|=36

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
  0: -W_1_3 + rk_1_3 == 0
  1: -W_1_0 + rk_1_0 == 0
  2: -W_0_1 + rk_0_1 == 0
  3: -W_0_3 + rk_0_3 == 0
  4: -W_2_2 + rk_2_2 == 0
  5: -W_0_2 + rk_0_2 == 0
  6: -W_1_2 + rk_1_2 == 0
  7: -W_3_1 + rk_3_1 == 0
  8: -W_2_0 + rk_2_0 == 0
  9: -W_2_1 + rk_2_1 == 0
 10: -W_2_3 + rk_2_3 == 0
 11: -W_3_2 + rk_3_2 == 0
 12: -W_3_3 + rk_3_3 == 0
 13: -W_0_0 + rk_0_0 == 0
 14: -W_3_0 + rk_3_0 == 0
 15: -W_1_1 + rk_1_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=99)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('W', 'rk'))
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot W): lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'W' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.964345932

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
  0: -W_1_3 + rk_1_3 == 0
  1: -W_1_0 + rk_1_0 == 0
  2: -W_0_1 + rk_0_1 == 0
  3: -W_0_3 + rk_0_3 == 0
  4: -W_2_2 + rk_2_2 == 0
  5: -W_0_2 + rk_0_2 == 0
  6: -W_1_2 + rk_1_2 == 0
  7: -W_3_1 + rk_3_1 == 0
  8: -W_2_0 + rk_2_0 == 0
  9: -W_2_1 + rk_2_1 == 0
 10: -W_2_3 + rk_2_3 == 0
 11: -W_3_2 + rk_3_2 == 0
 12: -W_3_3 + rk_3_3 == 0
 13: -W_0_0 + rk_0_0 == 0
 14: -W_3_0 + rk_3_0 == 0
 15: -W_1_1 + rk_1_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=99)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('W', 'rk'))
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot W): lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'W' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.593116045

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
  0: -W_1_3 + rk_1_3 == 0
  1: -W_1_0 + rk_1_0 == 0
  2: -W_0_1 + rk_0_1 == 0
  3: -W_0_3 + rk_0_3 == 0
  4: -W_2_2 + rk_2_2 == 0
  5: -W_0_2 + rk_0_2 == 0
  6: -W_1_2 + rk_1_2 == 0
  7: -W_3_1 + rk_3_1 == 0
  8: -W_2_0 + rk_2_0 == 0
  9: -W_2_1 + rk_2_1 == 0
 10: -W_2_3 + rk_2_3 == 0
 11: -W_3_2 + rk_3_2 == 0
 12: -W_3_3 + rk_3_3 == 0
 13: -W_0_0 + rk_0_0 == 0
 14: -W_3_0 + rk_3_0 == 0
 15: -W_1_1 + rk_1_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=99)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('W', 'rk'))
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot W): lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'W' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.8269250393

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
  0: -W_1_3 + rk_1_3 == 0
  1: -W_1_0 + rk_1_0 == 0
  2: -W_0_1 + rk_0_1 == 0
  3: -W_0_3 + rk_0_3 == 0
  4: -W_2_2 + rk_2_2 == 0
  5: -W_0_2 + rk_0_2 == 0
  6: -W_1_2 + rk_1_2 == 0
  7: -W_3_1 + rk_3_1 == 0
  8: -W_2_0 + rk_2_0 == 0
  9: -W_2_1 + rk_2_1 == 0
 10: -W_2_3 + rk_2_3 == 0
 11: -W_3_2 + rk_3_2 == 0
 12: -W_3_3 + rk_3_3 == 0
 13: -W_0_0 + rk_0_0 == 0
 14: -W_3_0 + rk_3_0 == 0
 15: -W_1_1 + rk_1_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=99)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('W', 'rk'))
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot W): lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'W' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
80.0249578953

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
  0: -W_1_3 + rk_1_3 == 0
  1: -W_1_0 + rk_1_0 == 0
  2: -W_0_1 + rk_0_1 == 0
  3: -W_0_3 + rk_0_3 == 0
  4: -W_2_2 + rk_2_2 == 0
  5: -W_0_2 + rk_0_2 == 0
  6: -W_1_2 + rk_1_2 == 0
  7: -W_3_1 + rk_3_1 == 0
  8: -W_2_0 + rk_2_0 == 0
  9: -W_2_1 + rk_2_1 == 0
 10: -W_2_3 + rk_2_3 == 0
 11: -W_3_2 + rk_3_2 == 0
 12: -W_3_3 + rk_3_3 == 0
 13: -W_0_0 + rk_0_0 == 0
 14: -W_3_0 + rk_3_0 == 0
 15: -W_1_1 + rk_1_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=99)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('W', 'rk'))
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot W): lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'W' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.3187561035

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
  0: -W_1_3 + rk_1_3 == 0
  1: -W_1_0 + rk_1_0 == 0
  2: -W_0_1 + rk_0_1 == 0
  3: -W_0_3 + rk_0_3 == 0
  4: -W_2_2 + rk_2_2 == 0
  5: -W_0_2 + rk_0_2 == 0
  6: -W_1_2 + rk_1_2 == 0
  7: -W_3_1 + rk_3_1 == 0
  8: -W_2_0 + rk_2_0 == 0
  9: -W_2_1 + rk_2_1 == 0
 10: -W_2_3 + rk_2_3 == 0
 11: -W_3_2 + rk_3_2 == 0
 12: -W_3_3 + rk_3_3 == 0
 13: -W_0_0 + rk_0_0 == 0
 14: -W_3_0 + rk_3_0 == 0
 15: -W_1_1 + rk_1_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=99)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('W', 'rk'))
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot W): lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'W' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.2813959122

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
  0: -W_1_3 + rk_1_3 == 0
  1: -W_1_0 + rk_1_0 == 0
  2: -W_0_1 + rk_0_1 == 0
  3: -W_0_3 + rk_0_3 == 0
  4: -W_2_2 + rk_2_2 == 0
  5: -W_0_2 + rk_0_2 == 0
  6: -W_1_2 + rk_1_2 == 0
  7: -W_3_1 + rk_3_1 == 0
  8: -W_2_0 + rk_2_0 == 0
  9: -W_2_1 + rk_2_1 == 0
 10: -W_2_3 + rk_2_3 == 0
 11: -W_3_2 + rk_3_2 == 0
 12: -W_3_3 + rk_3_3 == 0
 13: -W_0_0 + rk_0_0 == 0
 14: -W_3_0 + rk_3_0 == 0
 15: -W_1_1 + rk_1_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=99)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('W', 'rk'))
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot W): lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'W' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.6221730709

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
  0: -W_1_3 + rk_1_3 == 0
  1: -W_1_0 + rk_1_0 == 0
  2: -W_0_1 + rk_0_1 == 0
  3: -W_0_3 + rk_0_3 == 0
  4: -W_2_2 + rk_2_2 == 0
  5: -W_0_2 + rk_0_2 == 0
  6: -W_1_2 + rk_1_2 == 0
  7: -W_3_1 + rk_3_1 == 0
  8: -W_2_0 + rk_2_0 == 0
  9: -W_2_1 + rk_2_1 == 0
 10: -W_2_3 + rk_2_3 == 0
 11: -W_3_2 + rk_3_2 == 0
 12: -W_3_3 + rk_3_3 == 0
 13: -W_0_0 + rk_0_0 == 0
 14: -W_3_0 + rk_3_0 == 0
 15: -W_1_1 + rk_1_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=99)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('W', 'rk'))
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot W): lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'W' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.6956069469

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
  0: -W_1_3 + rk_1_3 == 0
  1: -W_1_0 + rk_1_0 == 0
  2: -W_0_1 + rk_0_1 == 0
  3: -W_0_3 + rk_0_3 == 0
  4: -W_2_2 + rk_2_2 == 0
  5: -W_0_2 + rk_0_2 == 0
  6: -W_1_2 + rk_1_2 == 0
  7: -W_3_1 + rk_3_1 == 0
  8: -W_2_0 + rk_2_0 == 0
  9: -W_2_1 + rk_2_1 == 0
 10: -W_2_3 + rk_2_3 == 0
 11: -W_3_2 + rk_3_2 == 0
 12: -W_3_3 + rk_3_3 == 0
 13: -W_0_0 + rk_0_0 == 0
 14: -W_3_0 + rk_3_0 == 0
 15: -W_1_1 + rk_1_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=99)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('W', 'rk'))
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot W): lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'W' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.3922140598

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
  0: -W_1_3 + rk_1_3 == 0
  1: -W_1_0 + rk_1_0 == 0
  2: -W_0_1 + rk_0_1 == 0
  3: -W_0_3 + rk_0_3 == 0
  4: -W_2_2 + rk_2_2 == 0
  5: -W_0_2 + rk_0_2 == 0
  6: -W_1_2 + rk_1_2 == 0
  7: -W_3_1 + rk_3_1 == 0
  8: -W_2_0 + rk_2_0 == 0
  9: -W_2_1 + rk_2_1 == 0
 10: -W_2_3 + rk_2_3 == 0
 11: -W_3_2 + rk_3_2 == 0
 12: -W_3_3 + rk_3_3 == 0
 13: -W_0_0 + rk_0_0 == 0
 14: -W_3_0 + rk_3_0 == 0
 15: -W_1_1 + rk_1_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=99)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('W', 'rk'))
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot W): lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'W' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.4245629311

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
  0: -W_1_3 + rk_1_3 == 0
  1: -W_1_0 + rk_1_0 == 0
  2: -W_0_1 + rk_0_1 == 0
  3: -W_0_3 + rk_0_3 == 0
  4: -W_2_2 + rk_2_2 == 0
  5: -W_0_2 + rk_0_2 == 0
  6: -W_1_2 + rk_1_2 == 0
  7: -W_3_1 + rk_3_1 == 0
  8: -W_2_0 + rk_2_0 == 0
  9: -W_2_1 + rk_2_1 == 0
 10: -W_2_3 + rk_2_3 == 0
 11: -W_3_2 + rk_3_2 == 0
 12: -W_3_3 + rk_3_3 == 0
 13: -W_0_0 + rk_0_0 == 0
 14: -W_3_0 + rk_3_0 == 0
 15: -W_1_1 + rk_1_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=99)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('W', 'rk'))
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot W): lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'W' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.6421189308

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
  0: -W_1_3 + rk_1_3 == 0
  1: -W_1_0 + rk_1_0 == 0
  2: -W_0_1 + rk_0_1 == 0
  3: -W_0_3 + rk_0_3 == 0
  4: -W_2_2 + rk_2_2 == 0
  5: -W_0_2 + rk_0_2 == 0
  6: -W_1_2 + rk_1_2 == 0
  7: -W_3_1 + rk_3_1 == 0
  8: -W_2_0 + rk_2_0 == 0
  9: -W_2_1 + rk_2_1 == 0
 10: -W_2_3 + rk_2_3 == 0
 11: -W_3_2 + rk_3_2 == 0
 12: -W_3_3 + rk_3_3 == 0
 13: -W_0_0 + rk_0_0 == 0
 14: -W_3_0 + rk_3_0 == 0
 15: -W_1_1 + rk_1_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=99)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('W', 'rk'))
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot W): lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'W' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.5185980797

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
  0: -W_1_3 + rk_1_3 == 0
  1: -W_1_0 + rk_1_0 == 0
  2: -W_0_1 + rk_0_1 == 0
  3: -W_0_3 + rk_0_3 == 0
  4: -W_2_2 + rk_2_2 == 0
  5: -W_0_2 + rk_0_2 == 0
  6: -W_1_2 + rk_1_2 == 0
  7: -W_3_1 + rk_3_1 == 0
  8: -W_2_0 + rk_2_0 == 0
  9: -W_2_1 + rk_2_1 == 0
 10: -W_2_3 + rk_2_3 == 0
 11: -W_3_2 + rk_3_2 == 0
 12: -W_3_3 + rk_3_3 == 0
 13: -W_0_0 + rk_0_0 == 0
 14: -W_3_0 + rk_3_0 == 0
 15: -W_1_1 + rk_1_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=99)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('W', 'rk'))
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot W): lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'W' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.6379990578

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
  0: -W_1_3 + rk_1_3 == 0
  1: -W_1_0 + rk_1_0 == 0
  2: -W_0_1 + rk_0_1 == 0
  3: -W_0_3 + rk_0_3 == 0
  4: -W_2_2 + rk_2_2 == 0
  5: -W_0_2 + rk_0_2 == 0
  6: -W_1_2 + rk_1_2 == 0
  7: -W_3_1 + rk_3_1 == 0
  8: -W_2_0 + rk_2_0 == 0
  9: -W_2_1 + rk_2_1 == 0
 10: -W_2_3 + rk_2_3 == 0
 11: -W_3_2 + rk_3_2 == 0
 12: -W_3_3 + rk_3_3 == 0
 13: -W_0_0 + rk_0_0 == 0
 14: -W_3_0 + rk_3_0 == 0
 15: -W_1_1 + rk_1_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=99)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('W', 'rk'))
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot W): lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'W' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.0732889175

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
  0: -W_1_3 + rk_1_3 == 0
  1: -W_1_0 + rk_1_0 == 0
  2: -W_0_1 + rk_0_1 == 0
  3: -W_0_3 + rk_0_3 == 0
  4: -W_2_2 + rk_2_2 == 0
  5: -W_0_2 + rk_0_2 == 0
  6: -W_1_2 + rk_1_2 == 0
  7: -W_3_1 + rk_3_1 == 0
  8: -W_2_0 + rk_2_0 == 0
  9: -W_2_1 + rk_2_1 == 0
 10: -W_2_3 + rk_2_3 == 0
 11: -W_3_2 + rk_3_2 == 0
 12: -W_3_3 + rk_3_3 == 0
 13: -W_0_0 + rk_0_0 == 0
 14: -W_3_0 + rk_3_0 == 0
 15: -W_1_1 + rk_1_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=99)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('W', 'rk'))
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot W): lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'W' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.5204119682

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
  0: -W_1_3 + rk_1_3 == 0
  1: -W_1_0 + rk_1_0 == 0
  2: -W_0_1 + rk_0_1 == 0
  3: -W_0_3 + rk_0_3 == 0
  4: -W_2_2 + rk_2_2 == 0
  5: -W_0_2 + rk_0_2 == 0
  6: -W_1_2 + rk_1_2 == 0
  7: -W_3_1 + rk_3_1 == 0
  8: -W_2_0 + rk_2_0 == 0
  9: -W_2_1 + rk_2_1 == 0
 10: -W_2_3 + rk_2_3 == 0
 11: -W_3_2 + rk_3_2 == 0
 12: -W_3_3 + rk_3_3 == 0
 13: -W_0_0 + rk_0_0 == 0
 14: -W_3_0 + rk_3_0 == 0
 15: -W_1_1 + rk_1_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=99)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('W', 'rk'))
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot W): lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'W' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.1259109974

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
  0: -W_1_3 + rk_1_3 == 0
  1: -W_1_0 + rk_1_0 == 0
  2: -W_0_1 + rk_0_1 == 0
  3: -W_0_3 + rk_0_3 == 0
  4: -W_2_2 + rk_2_2 == 0
  5: -W_0_2 + rk_0_2 == 0
  6: -W_1_2 + rk_1_2 == 0
  7: -W_3_1 + rk_3_1 == 0
  8: -W_2_0 + rk_2_0 == 0
  9: -W_2_1 + rk_2_1 == 0
 10: -W_2_3 + rk_2_3 == 0
 11: -W_3_2 + rk_3_2 == 0
 12: -W_3_3 + rk_3_3 == 0
 13: -W_0_0 + rk_0_0 == 0
 14: -W_3_0 + rk_3_0 == 0
 15: -W_1_1 + rk_1_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=99)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('W', 'rk'))
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot W): lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'W' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.4957139492

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
  0: -W_1_3 + rk_1_3 == 0
  1: -W_1_0 + rk_1_0 == 0
  2: -W_0_1 + rk_0_1 == 0
  3: -W_0_3 + rk_0_3 == 0
  4: -W_2_2 + rk_2_2 == 0
  5: -W_0_2 + rk_0_2 == 0
  6: -W_1_2 + rk_1_2 == 0
  7: -W_3_1 + rk_3_1 == 0
  8: -W_2_0 + rk_2_0 == 0
  9: -W_2_1 + rk_2_1 == 0
 10: -W_2_3 + rk_2_3 == 0
 11: -W_3_2 + rk_3_2 == 0
 12: -W_3_3 + rk_3_3 == 0
 13: -W_0_0 + rk_0_0 == 0
 14: -W_3_0 + rk_3_0 == 0
 15: -W_1_1 + rk_1_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=99)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('W', 'rk'))
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot W): lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'W' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.905711174

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
  0: -W_1_3 + rk_1_3 == 0
  1: -W_1_0 + rk_1_0 == 0
  2: -W_0_1 + rk_0_1 == 0
  3: -W_0_3 + rk_0_3 == 0
  4: -W_2_2 + rk_2_2 == 0
  5: -W_0_2 + rk_0_2 == 0
  6: -W_1_2 + rk_1_2 == 0
  7: -W_3_1 + rk_3_1 == 0
  8: -W_2_0 + rk_2_0 == 0
  9: -W_2_1 + rk_2_1 == 0
 10: -W_2_3 + rk_2_3 == 0
 11: -W_3_2 + rk_3_2 == 0
 12: -W_3_3 + rk_3_3 == 0
 13: -W_0_0 + rk_0_0 == 0
 14: -W_3_0 + rk_3_0 == 0
 15: -W_1_1 + rk_1_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=99)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('W', 'rk'))
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot W): lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'W' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
80.015652895

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 200 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=201, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=201)
dig_miscs:Debug:sample_traces: chose |tcs1|=201, |tcs2|=99 (attempted 201/300 tcs)
dig:Info:Compute invs over 201 tcs
dig_miscs:Debug:Create equations from 201 traces
dig_miscs:Debug:Solve 201 (uniq) eqts for 201 unknowns
dig:Info:Detected invariants for Eqt:
  0: -W_1_3 + rk_1_3 == 0
  1: -W_1_0 + rk_1_0 == 0
  2: -W_0_1 + rk_0_1 == 0
  3: -W_0_3 + rk_0_3 == 0
  4: -W_2_2 + rk_2_2 == 0
  5: -W_0_2 + rk_0_2 == 0
  6: -W_1_2 + rk_1_2 == 0
  7: -W_3_1 + rk_3_1 == 0
  8: -W_2_0 + rk_2_0 == 0
  9: -W_2_1 + rk_2_1 == 0
 10: -W_2_3 + rk_2_3 == 0
 11: -W_3_2 + rk_3_2 == 0
 12: -W_3_3 + rk_3_3 == 0
 13: -W_0_0 + rk_0_0 == 0
 14: -W_3_0 + rk_3_0 == 0
 15: -W_1_1 + rk_1_1 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=99)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('W', 'rk'))
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'W' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot W): lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'W' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [W,rk]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.1910049915


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/KeyScheduleMod2.l0.tcs'
Expect (0): 
* Run 0, time 78.964345932, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 1, time 78.593116045, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 2, time 79.8269250393, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 3, time 80.0249578953, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 4, time 79.3187561035, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 5, time 79.2813959122, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 6, time 79.6221730709, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 7, time 79.6956069469, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 8, time 79.3922140598, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 9, time 79.4245629311, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 10, time 79.6421189308, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 11, time 79.5185980797, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 12, time 79.6379990578, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 13, time 79.0732889175, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 14, time 79.5204119682, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 15, time 79.1259109974, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 16, time 79.4957139492, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 17, time 79.905711174, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 18, time 80.015652895, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 19, time 79.1910049915, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
TIME AVG 79.5 (../invgen/Traces/AES_tosem/multilocs/l0/KeyScheduleMod2.l0.tcs)


***** (10) Generate invs from file 'KeySetupDec.l0.tcs' *****

dig:Info:2013-06-25 00:40:33.854890, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [cipherKey, rk]
2. xinfo: 
 0. All: ['cipherKey', 'rk']
 1. Assume: []
 2. Const: []
 3. Expect: []
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 18 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/KeySetupDec.l0.tcs", |vs|=2, deg=7, |terms|=36

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
74.4807760715

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
73.9525871277

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
73.0016539097

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
72.9407169819

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
73.2749118805

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
72.7382318974

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
73.1051800251

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
72.753510952

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
72.3143148422

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
72.5652649403

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
72.8459210396

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
74.7512280941

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
72.756029129

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
72.08689785

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
73.1532578468

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
72.5578598976

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
72.4289240837

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
72.6147620678

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
72.6491818428

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=100)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
72.5541467667


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/KeySetupDec.l0.tcs'
Expect (0): 
* Run 0, time 74.4807760715, deg 7
* Run 1, time 73.9525871277, deg 7
* Run 2, time 73.0016539097, deg 7
* Run 3, time 72.9407169819, deg 7
* Run 4, time 73.2749118805, deg 7
* Run 5, time 72.7382318974, deg 7
* Run 6, time 73.1051800251, deg 7
* Run 7, time 72.753510952, deg 7
* Run 8, time 72.3143148422, deg 7
* Run 9, time 72.5652649403, deg 7
* Run 10, time 72.8459210396, deg 7
* Run 11, time 74.7512280941, deg 7
* Run 12, time 72.756029129, deg 7
* Run 13, time 72.08689785, deg 7
* Run 14, time 73.1532578468, deg 7
* Run 15, time 72.5578598976, deg 7
* Run 16, time 72.4289240837, deg 7
* Run 17, time 72.6147620678, deg 7
* Run 18, time 72.6491818428, deg 7
* Run 19, time 72.5541467667, deg 7
TIME AVG 73.0 (../invgen/Traces/AES_tosem/multilocs/l0/KeySetupDec.l0.tcs)


***** (11) Generate invs from file 'KeySetupEnc.l0.tcs' *****

dig:Info:2013-06-25 01:04:55.005264, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [cipherKey, rk]
2. xinfo: 
 0. All: ['cipherKey', 'rk']
 1. Assume: []
 2. Const: []
 3. Expect: []
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 18 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/KeySetupEnc.l0.tcs", |vs|=2, deg=7, |terms|=36

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.9655199051

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.6376140118

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.0851089954

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.3917999268

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
75.9490890503

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.0498960018

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.1243288517

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
75.7422227859

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.1581261158

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
77.0780119896

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.2791180611

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.4893109798

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.5060689449

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.325165987

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.4940052032

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.0579741001

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.2474830151

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.0779509544

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
75.9794690609

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.4062650204


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/KeySetupEnc.l0.tcs'
Expect (0): 
* Run 0, time 76.9655199051, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 1, time 76.6376140118, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 2, time 76.0851089954, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 3, time 76.3917999268, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 4, time 75.9490890503, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 5, time 76.0498960018, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 6, time 76.1243288517, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 7, time 75.7422227859, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 8, time 76.1581261158, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 9, time 77.0780119896, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 10, time 76.2791180611, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 11, time 76.4893109798, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 12, time 76.5060689449, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 13, time 76.325165987, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 14, time 76.4940052032, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 15, time 76.0579741001, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 16, time 76.2474830151, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 17, time 76.0779509544, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 18, time 75.9794690609, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 19, time 76.4062650204, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
TIME AVG 76.3 (../invgen/Traces/AES_tosem/multilocs/l0/KeySetupEnc.l0.tcs)


***** (12) Generate invs from file 'KeySetupEnc4.l0.tcs' *****

dig:Info:2013-06-25 01:30:22.649618, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [cipherKey, rk]
2. xinfo: 
 0. All: ['cipherKey', 'rk']
 1. Assume: []
 2. Const: []
 3. Expect: ['cipherKey[4i+j] - rk[i][j] = 0 for i=0..3, j=0..3']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 18 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/KeySetupEnc4.l0.tcs", |vs|=2, deg=7, |terms|=36

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.0215001106

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.0156180859

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.3934810162

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.2294011116

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.1316709518

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.0634331703

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.4848980904

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.3009560108

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.4515719414

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.4585599899

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.2482202053

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.0979189873

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.2240560055

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.4367930889

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.1449759007

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.6856629848

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.7178142071

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.4269979

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
77.1649169922

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_0 - rk_0_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_14 - rk_3_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_15 - rk_3_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_8 - rk_2_0 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_6 - rk_1_2 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=100)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
76.5901710987


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/KeySetupEnc4.l0.tcs'
Expect (1): cipherKey[4i+j] - rk[i][j] = 0 for i=0..3, j=0..3
* Run 0, time 76.0215001106, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 1, time 76.0156180859, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 2, time 76.3934810162, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 3, time 76.2294011116, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 4, time 76.1316709518, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 5, time 76.0634331703, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 6, time 76.4848980904, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 7, time 76.3009560108, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 8, time 76.4515719414, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 9, time 76.4585599899, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 10, time 76.2482202053, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 11, time 76.0979189873, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 12, time 76.2240560055, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 13, time 76.4367930889, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 14, time 76.1449759007, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 15, time 76.6856629848, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 16, time 76.7178142071, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 17, time 76.4269979, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 18, time 77.1649169922, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 19, time 76.5901710987, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
TIME AVG 76.4 (../invgen/Traces/AES_tosem/multilocs/l0/KeySetupEnc4.l0.tcs)


***** (13) Generate invs from file 'KeySetupEnc6.l0.tcs' *****

dig:Info:2013-06-25 01:55:51.512622, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [cipherKey, rk]
2. xinfo: 
 0. All: ['cipherKey', 'rk']
 1. Assume: []
 2. Const: []
 3. Expect: ['cipherKey[4i+j] - rk[i][j] = 0 for i=0..5, j=0..3']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 18 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/KeySetupEnc6.l0.tcs", |vs|=2, deg=7, |terms|=36

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.6629579067

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.7365419865

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.80139184

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.4856460094

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.3222589493

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.480342865

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.3926448822

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.7731161118

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.9536259174

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.5399119854

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.5118808746

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.16710186

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.7524859905

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.6395130157

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.6808891296

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.690983057

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.1118309498

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.2346470356

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.2491149902

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.283452034


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/KeySetupEnc6.l0.tcs'
Expect (1): cipherKey[4i+j] - rk[i][j] = 0 for i=0..5, j=0..3
* Run 0, time 78.6629579067, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 1, time 78.7365419865, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 2, time 78.80139184, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 3, time 78.4856460094, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 4, time 78.3222589493, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 5, time 78.480342865, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 6, time 78.3926448822, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 7, time 78.7731161118, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 8, time 78.9536259174, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 9, time 78.5399119854, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 10, time 78.5118808746, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 11, time 79.16710186, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 12, time 78.7524859905, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 13, time 78.6395130157, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 14, time 78.6808891296, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 15, time 78.690983057, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 16, time 79.1118309498, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 17, time 79.2346470356, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 18, time 79.2491149902, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 19, time 79.283452034, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
TIME AVG 78.8 (../invgen/Traces/AES_tosem/multilocs/l0/KeySetupEnc6.l0.tcs)


***** (14) Generate invs from file 'KeySetupEnc8.l0.tcs' *****

dig:Info:2013-06-25 02:22:08.645635, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [cipherKey, rk]
2. xinfo: 
 0. All: ['cipherKey', 'rk']
 1. Assume: []
 2. Const: []
 3. Expect: ['cipherKey[4i+j] - rk[i][j] = 0 for i=0..7, j=0..3']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 18 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/KeySetupEnc8.l0.tcs", |vs|=2, deg=7, |terms|=36

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.9134321213

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.275015831

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.9166049957

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.0163710117

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.0931370258

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.2339980602

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.9492740631

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.071048975

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
78.7287540436

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.3220849037

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.4208371639

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.4708108902

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.2942378521

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.7028291225

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.8578081131

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.7164061069

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.3418650627

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.6773810387

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.7586581707

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 199 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=200, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=200)
dig_miscs:Debug:sample_traces: chose |tcs1|=200, |tcs2|=100 (attempted 200/300 tcs)
dig:Info:Compute invs over 200 tcs
dig_miscs:Debug:Create equations from 200 traces
dig_miscs:Debug:Solve 200 (uniq) eqts for 200 unknowns
dig:Info:Detected invariants for Eqt:
  0: cipherKey_12 - rk_3_0 == 0
  1: cipherKey_5 - rk_1_1 == 0
  2: cipherKey_20 - rk_5_0 == 0
  3: cipherKey_13 - rk_3_1 == 0
  4: cipherKey_18 - rk_4_2 == 0
  5: cipherKey_11 - rk_2_3 == 0
  6: cipherKey_4 - rk_1_0 == 0
  7: cipherKey_19 - rk_4_3 == 0
  8: cipherKey_2 - rk_0_2 == 0
  9: cipherKey_17 - rk_4_1 == 0
 10: cipherKey_10 - rk_2_2 == 0
 11: cipherKey_3 - rk_0_3 == 0
 12: cipherKey_1 - rk_0_1 == 0
 13: cipherKey_16 - rk_4_0 == 0
 14: cipherKey_9 - rk_2_1 == 0
 15: cipherKey_7 - rk_1_3 == 0
 16: cipherKey_0 - rk_0_0 == 0
 17: cipherKey_22 - rk_5_2 == 0
 18: cipherKey_15 - rk_3_3 == 0
 19: cipherKey_8 - rk_2_0 == 0
 20: cipherKey_6 - rk_1_2 == 0
 21: cipherKey_21 - rk_5_1 == 0
 22: cipherKey_14 - rk_3_2 == 0
refine:Debug:rfilter(|ps|=23, |tcs|=100)
refine:Debug:rfilter (before 23, after 23, diff 0)
dig_arrays:Info:Partition 23 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 23 eqts (group ('cipherKey', 'rk'))
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'cipherKey' is pivot
dig_arrays:Debug:solve 'rk' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'cipherKey' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rk' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=23
dig_miscs:Debug:Create equations from 23 traces
dig_miscs:Debug:Solve 23 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot rk): lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rk,cipherKey]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
79.2491130829


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/KeySetupEnc8.l0.tcs'
Expect (1): cipherKey[4i+j] - rk[i][j] = 0 for i=0..7, j=0..3
* Run 0, time 78.9134321213, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 1, time 79.275015831, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 2, time 78.9166049957, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 3, time 79.0163710117, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 4, time 79.0931370258, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 5, time 79.2339980602, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 6, time 78.9492740631, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 7, time 79.071048975, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 8, time 78.7287540436, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 9, time 79.3220849037, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 10, time 79.4208371639, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 11, time 79.4708108902, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 12, time 79.2942378521, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 13, time 79.7028291225, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 14, time 79.8578081131, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 15, time 79.7164061069, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 16, time 79.3418650627, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 17, time 79.6773810387, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 18, time 79.7586581707, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 19, time 79.2491130829, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
TIME AVG 79.3 (../invgen/Traces/AES_tosem/multilocs/l0/KeySetupEnc8.l0.tcs)


***** (15) Generate invs from file 'MixColumns.l0.tcs' *****

dig:Info:2013-06-25 02:48:36.220671, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [rvu, st]
2. xinfo: 
 0. All: ['rvu', 'st']
 1. Assume: []
 2. Const: []
 3. Expect: []
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 18 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/MixColumns.l0.tcs", |vs|=2, deg=7, |terms|=36

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.993118047714

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.08420109749

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.985572099686

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.10638999939

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.00101304054

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.99875497818

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.08256602287

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.982975006104

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.982656955719

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.985044002533

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.982859134674

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.18863296509

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.983325958252

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.983329057693

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.980758905411

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.980782985687

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.08224201202

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.97918009758

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
1.09524798393

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 0 expressions generated
dig_arrays:Info:Apply reachability analysis to 0 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.997184991837


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/MixColumns.l0.tcs'
Expect (0): 
* Run 0, time 0.993118047714, deg 7
* Run 1, time 1.08420109749, deg 7
* Run 2, time 0.985572099686, deg 7
* Run 3, time 1.10638999939, deg 7
* Run 4, time 1.00101304054, deg 7
* Run 5, time 0.99875497818, deg 7
* Run 6, time 1.08256602287, deg 7
* Run 7, time 0.982975006104, deg 7
* Run 8, time 0.982656955719, deg 7
* Run 9, time 0.985044002533, deg 7
* Run 10, time 0.982859134674, deg 7
* Run 11, time 1.18863296509, deg 7
* Run 12, time 0.983325958252, deg 7
* Run 13, time 0.983329057693, deg 7
* Run 14, time 0.980758905411, deg 7
* Run 15, time 0.980782985687, deg 7
* Run 16, time 1.08224201202, deg 7
* Run 17, time 0.97918009758, deg 7
* Run 18, time 1.09524798393, deg 7
* Run 19, time 0.997184991837, deg 7
TIME AVG 1.0 (../invgen/Traces/AES_tosem/multilocs/l0/MixColumns.l0.tcs)


***** (16) Generate invs from file 'RotWord.l0.tcs' *****

dig:Info:2013-06-25 02:48:56.933126, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [rvu, w]
2. xinfo: 
 0. All: ['rvu', 'w']
 1. Assume: []
 2. Const: []
 3. Expect: ['rvu = [w[1],w[2],w[3],w[0]]']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 18 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/RotWord.l0.tcs", |vs|=2, deg=7, |terms|=36

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
refine:Debug:rfilter(|ps|=4, |tcs|=291)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig_arrays:Info:Partition 4 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 4 eqts (group ('rvu', 'w'))
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'w' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,w]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.553415060043

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
refine:Debug:rfilter(|ps|=4, |tcs|=291)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig_arrays:Info:Partition 4 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 4 eqts (group ('rvu', 'w'))
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'w' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,w]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.526831865311

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
refine:Debug:rfilter(|ps|=4, |tcs|=291)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig_arrays:Info:Partition 4 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 4 eqts (group ('rvu', 'w'))
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'w' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,w]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.532904148102

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
refine:Debug:rfilter(|ps|=4, |tcs|=291)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig_arrays:Info:Partition 4 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 4 eqts (group ('rvu', 'w'))
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'w' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,w]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.537508010864

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
refine:Debug:rfilter(|ps|=4, |tcs|=291)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig_arrays:Info:Partition 4 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 4 eqts (group ('rvu', 'w'))
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'w' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,w]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.528556108475

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
refine:Debug:rfilter(|ps|=4, |tcs|=291)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig_arrays:Info:Partition 4 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 4 eqts (group ('rvu', 'w'))
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'w' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,w]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.628170013428

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
refine:Debug:rfilter(|ps|=4, |tcs|=291)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig_arrays:Info:Partition 4 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 4 eqts (group ('rvu', 'w'))
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'w' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,w]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.527209043503

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
refine:Debug:rfilter(|ps|=4, |tcs|=291)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig_arrays:Info:Partition 4 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 4 eqts (group ('rvu', 'w'))
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'w' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,w]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.529801130295

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
refine:Debug:rfilter(|ps|=4, |tcs|=291)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig_arrays:Info:Partition 4 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 4 eqts (group ('rvu', 'w'))
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'w' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,w]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.528623819351

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
refine:Debug:rfilter(|ps|=4, |tcs|=291)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig_arrays:Info:Partition 4 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 4 eqts (group ('rvu', 'w'))
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'w' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,w]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.528583049774

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
refine:Debug:rfilter(|ps|=4, |tcs|=291)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig_arrays:Info:Partition 4 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 4 eqts (group ('rvu', 'w'))
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'w' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,w]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.534992933273

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
refine:Debug:rfilter(|ps|=4, |tcs|=291)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig_arrays:Info:Partition 4 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 4 eqts (group ('rvu', 'w'))
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'w' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,w]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.537663936615

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
refine:Debug:rfilter(|ps|=4, |tcs|=291)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig_arrays:Info:Partition 4 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 4 eqts (group ('rvu', 'w'))
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'w' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,w]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.536074876785

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
refine:Debug:rfilter(|ps|=4, |tcs|=291)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig_arrays:Info:Partition 4 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 4 eqts (group ('rvu', 'w'))
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'w' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,w]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.635948181152

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
refine:Debug:rfilter(|ps|=4, |tcs|=291)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig_arrays:Info:Partition 4 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 4 eqts (group ('rvu', 'w'))
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'w' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,w]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.530045986176

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
refine:Debug:rfilter(|ps|=4, |tcs|=291)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig_arrays:Info:Partition 4 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 4 eqts (group ('rvu', 'w'))
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'w' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,w]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.531129837036

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
refine:Debug:rfilter(|ps|=4, |tcs|=291)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig_arrays:Info:Partition 4 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 4 eqts (group ('rvu', 'w'))
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'w' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,w]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.533623218536

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
refine:Debug:rfilter(|ps|=4, |tcs|=291)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig_arrays:Info:Partition 4 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 4 eqts (group ('rvu', 'w'))
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'w' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,w]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.533048152924

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
refine:Debug:rfilter(|ps|=4, |tcs|=291)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig_arrays:Info:Partition 4 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 4 eqts (group ('rvu', 'w'))
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'w' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,w]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.538620948792

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
refine:Debug:rfilter(|ps|=4, |tcs|=291)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig_arrays:Info:Partition 4 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 4 eqts (group ('rvu', 'w'))
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'w' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'w' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=4
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 2 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,w]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
0.558553934097


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/RotWord.l0.tcs'
Expect (1): rvu = [w[1],w[2],w[3],w[0]]
* Run 0, time 0.553415060043, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 1, time 0.526831865311, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 2, time 0.532904148102, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 3, time 0.537508010864, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 4, time 0.528556108475, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 5, time 0.628170013428, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 6, time 0.527209043503, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 7, time 0.529801130295, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 8, time 0.528623819351, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 9, time 0.528583049774, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 10, time 0.534992933273, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 11, time 0.537663936615, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 12, time 0.536074876785, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 13, time 0.635948181152, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 14, time 0.530045986176, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 15, time 0.531129837036, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 16, time 0.533623218536, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 17, time 0.533048152924, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 18, time 0.538620948792, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 19, time 0.558553934097, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
TIME AVG 0.5 (../invgen/Traces/AES_tosem/multilocs/l0/RotWord.l0.tcs)


***** (17) Generate invs from file 'ShiftRows.l0.tcs' *****

dig:Info:2013-06-25 02:49:07.937752, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [rvu, st]
2. xinfo: 
 0. All: ['rvu', 'st']
 1. Assume: []
 2. Const: []
 3. Expect: ['rvu = [[st[0][0], st[1][1], st[2][2], st[3][3]], [st[1][0], st[2][1], st[3][2], st[0][3]], [st[2][0], st[3][1], st[0][2], st[1][3]], [st[3][0], st[0][1], st[1][2], st[2][3]]]']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 18 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/ShiftRows.l0.tcs", |vs|=2, deg=7, |terms|=36

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.63416910172

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.79686808586

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.57235789299

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.58723187447

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.68646502495

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.78927493095

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.57227802277

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.60959219933

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.79617285728

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.60869002342

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.6008849144

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.73043298721

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.6284160614

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.63392710686

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.70806503296

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.69930386543

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.633715868

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.76926517487

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.60584211349

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:Detected invariants for SimpleArray:
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
3.64547681808


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/ShiftRows.l0.tcs'
Expect (1): rvu = [[st[0][0], st[1][1], st[2][2], st[3][3]], [st[1][0], st[2][1], st[3][2], st[0][3]], [st[2][0], st[3][1], st[0][2], st[1][3]], [st[3][0], st[0][1], st[1][2], st[2][3]]]
* Run 0, time 3.63416910172, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 1, time 3.79686808586, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 2, time 3.57235789299, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 3, time 3.58723187447, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 4, time 3.68646502495, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 5, time 3.78927493095, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 6, time 3.57227802277, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 7, time 3.60959219933, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 8, time 3.79617285728, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 9, time 3.60869002342, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 10, time 3.6008849144, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 11, time 3.73043298721, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 12, time 3.6284160614, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 13, time 3.63392710686, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 14, time 3.70806503296, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 15, time 3.69930386543, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 16, time 3.633715868, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 17, time 3.76926517487, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 18, time 3.60584211349, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 19, time 3.64547681808, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
TIME AVG 3.7 (../invgen/Traces/AES_tosem/multilocs/l0/ShiftRows.l0.tcs)


***** (18) Generate invs from file 'State2Block.l0.tcs' *****

dig:Info:2013-06-25 02:50:21.494500, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [rvu, st]
2. xinfo: 
 0. All: ['rvu', 'st']
 1. Assume: []
 2. Const: []
 3. Expect: ['r[4i+j] - st[i][j] = 0']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 18 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/State2Block.l0.tcs", |vs|=2, deg=7, |terms|=36

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_14 + st_3_2 == 0
  1: -rvu_7 + st_1_3 == 0
  2: -rvu_0 + st_0_0 == 0
  3: -rvu_11 + st_2_3 == 0
  4: -rvu_4 + st_1_0 == 0
  5: -rvu_15 + st_3_3 == 0
  6: -rvu_8 + st_2_0 == 0
  7: -rvu_1 + st_0_1 == 0
  8: -rvu_12 + st_3_0 == 0
  9: -rvu_5 + st_1_1 == 0
 10: -rvu_9 + st_2_1 == 0
 11: -rvu_2 + st_0_2 == 0
 12: -rvu_13 + st_3_1 == 0
 13: -rvu_6 + st_1_2 == 0
 14: -rvu_10 + st_2_2 == 0
 15: -rvu_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == rvu[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
4.35451388359

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_14 + st_3_2 == 0
  1: -rvu_7 + st_1_3 == 0
  2: -rvu_0 + st_0_0 == 0
  3: -rvu_11 + st_2_3 == 0
  4: -rvu_4 + st_1_0 == 0
  5: -rvu_15 + st_3_3 == 0
  6: -rvu_8 + st_2_0 == 0
  7: -rvu_1 + st_0_1 == 0
  8: -rvu_12 + st_3_0 == 0
  9: -rvu_5 + st_1_1 == 0
 10: -rvu_9 + st_2_1 == 0
 11: -rvu_2 + st_0_2 == 0
 12: -rvu_13 + st_3_1 == 0
 13: -rvu_6 + st_1_2 == 0
 14: -rvu_10 + st_2_2 == 0
 15: -rvu_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == rvu[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
4.18444800377

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_14 + st_3_2 == 0
  1: -rvu_7 + st_1_3 == 0
  2: -rvu_0 + st_0_0 == 0
  3: -rvu_11 + st_2_3 == 0
  4: -rvu_4 + st_1_0 == 0
  5: -rvu_15 + st_3_3 == 0
  6: -rvu_8 + st_2_0 == 0
  7: -rvu_1 + st_0_1 == 0
  8: -rvu_12 + st_3_0 == 0
  9: -rvu_5 + st_1_1 == 0
 10: -rvu_9 + st_2_1 == 0
 11: -rvu_2 + st_0_2 == 0
 12: -rvu_13 + st_3_1 == 0
 13: -rvu_6 + st_1_2 == 0
 14: -rvu_10 + st_2_2 == 0
 15: -rvu_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == rvu[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
4.15435290337

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_14 + st_3_2 == 0
  1: -rvu_7 + st_1_3 == 0
  2: -rvu_0 + st_0_0 == 0
  3: -rvu_11 + st_2_3 == 0
  4: -rvu_4 + st_1_0 == 0
  5: -rvu_15 + st_3_3 == 0
  6: -rvu_8 + st_2_0 == 0
  7: -rvu_1 + st_0_1 == 0
  8: -rvu_12 + st_3_0 == 0
  9: -rvu_5 + st_1_1 == 0
 10: -rvu_9 + st_2_1 == 0
 11: -rvu_2 + st_0_2 == 0
 12: -rvu_13 + st_3_1 == 0
 13: -rvu_6 + st_1_2 == 0
 14: -rvu_10 + st_2_2 == 0
 15: -rvu_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == rvu[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
4.2530798912

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_14 + st_3_2 == 0
  1: -rvu_7 + st_1_3 == 0
  2: -rvu_0 + st_0_0 == 0
  3: -rvu_11 + st_2_3 == 0
  4: -rvu_4 + st_1_0 == 0
  5: -rvu_15 + st_3_3 == 0
  6: -rvu_8 + st_2_0 == 0
  7: -rvu_1 + st_0_1 == 0
  8: -rvu_12 + st_3_0 == 0
  9: -rvu_5 + st_1_1 == 0
 10: -rvu_9 + st_2_1 == 0
 11: -rvu_2 + st_0_2 == 0
 12: -rvu_13 + st_3_1 == 0
 13: -rvu_6 + st_1_2 == 0
 14: -rvu_10 + st_2_2 == 0
 15: -rvu_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == rvu[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
4.13790607452

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_14 + st_3_2 == 0
  1: -rvu_7 + st_1_3 == 0
  2: -rvu_0 + st_0_0 == 0
  3: -rvu_11 + st_2_3 == 0
  4: -rvu_4 + st_1_0 == 0
  5: -rvu_15 + st_3_3 == 0
  6: -rvu_8 + st_2_0 == 0
  7: -rvu_1 + st_0_1 == 0
  8: -rvu_12 + st_3_0 == 0
  9: -rvu_5 + st_1_1 == 0
 10: -rvu_9 + st_2_1 == 0
 11: -rvu_2 + st_0_2 == 0
 12: -rvu_13 + st_3_1 == 0
 13: -rvu_6 + st_1_2 == 0
 14: -rvu_10 + st_2_2 == 0
 15: -rvu_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == rvu[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
4.1314740181

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_14 + st_3_2 == 0
  1: -rvu_7 + st_1_3 == 0
  2: -rvu_0 + st_0_0 == 0
  3: -rvu_11 + st_2_3 == 0
  4: -rvu_4 + st_1_0 == 0
  5: -rvu_15 + st_3_3 == 0
  6: -rvu_8 + st_2_0 == 0
  7: -rvu_1 + st_0_1 == 0
  8: -rvu_12 + st_3_0 == 0
  9: -rvu_5 + st_1_1 == 0
 10: -rvu_9 + st_2_1 == 0
 11: -rvu_2 + st_0_2 == 0
 12: -rvu_13 + st_3_1 == 0
 13: -rvu_6 + st_1_2 == 0
 14: -rvu_10 + st_2_2 == 0
 15: -rvu_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == rvu[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
4.36172699928

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_14 + st_3_2 == 0
  1: -rvu_7 + st_1_3 == 0
  2: -rvu_0 + st_0_0 == 0
  3: -rvu_11 + st_2_3 == 0
  4: -rvu_4 + st_1_0 == 0
  5: -rvu_15 + st_3_3 == 0
  6: -rvu_8 + st_2_0 == 0
  7: -rvu_1 + st_0_1 == 0
  8: -rvu_12 + st_3_0 == 0
  9: -rvu_5 + st_1_1 == 0
 10: -rvu_9 + st_2_1 == 0
 11: -rvu_2 + st_0_2 == 0
 12: -rvu_13 + st_3_1 == 0
 13: -rvu_6 + st_1_2 == 0
 14: -rvu_10 + st_2_2 == 0
 15: -rvu_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == rvu[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
4.12017989159

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_14 + st_3_2 == 0
  1: -rvu_7 + st_1_3 == 0
  2: -rvu_0 + st_0_0 == 0
  3: -rvu_11 + st_2_3 == 0
  4: -rvu_4 + st_1_0 == 0
  5: -rvu_15 + st_3_3 == 0
  6: -rvu_8 + st_2_0 == 0
  7: -rvu_1 + st_0_1 == 0
  8: -rvu_12 + st_3_0 == 0
  9: -rvu_5 + st_1_1 == 0
 10: -rvu_9 + st_2_1 == 0
 11: -rvu_2 + st_0_2 == 0
 12: -rvu_13 + st_3_1 == 0
 13: -rvu_6 + st_1_2 == 0
 14: -rvu_10 + st_2_2 == 0
 15: -rvu_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == rvu[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
4.15290808678

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_14 + st_3_2 == 0
  1: -rvu_7 + st_1_3 == 0
  2: -rvu_0 + st_0_0 == 0
  3: -rvu_11 + st_2_3 == 0
  4: -rvu_4 + st_1_0 == 0
  5: -rvu_15 + st_3_3 == 0
  6: -rvu_8 + st_2_0 == 0
  7: -rvu_1 + st_0_1 == 0
  8: -rvu_12 + st_3_0 == 0
  9: -rvu_5 + st_1_1 == 0
 10: -rvu_9 + st_2_1 == 0
 11: -rvu_2 + st_0_2 == 0
 12: -rvu_13 + st_3_1 == 0
 13: -rvu_6 + st_1_2 == 0
 14: -rvu_10 + st_2_2 == 0
 15: -rvu_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == rvu[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
4.17043590546

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_14 + st_3_2 == 0
  1: -rvu_7 + st_1_3 == 0
  2: -rvu_0 + st_0_0 == 0
  3: -rvu_11 + st_2_3 == 0
  4: -rvu_4 + st_1_0 == 0
  5: -rvu_15 + st_3_3 == 0
  6: -rvu_8 + st_2_0 == 0
  7: -rvu_1 + st_0_1 == 0
  8: -rvu_12 + st_3_0 == 0
  9: -rvu_5 + st_1_1 == 0
 10: -rvu_9 + st_2_1 == 0
 11: -rvu_2 + st_0_2 == 0
 12: -rvu_13 + st_3_1 == 0
 13: -rvu_6 + st_1_2 == 0
 14: -rvu_10 + st_2_2 == 0
 15: -rvu_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == rvu[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
4.27160191536

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_14 + st_3_2 == 0
  1: -rvu_7 + st_1_3 == 0
  2: -rvu_0 + st_0_0 == 0
  3: -rvu_11 + st_2_3 == 0
  4: -rvu_4 + st_1_0 == 0
  5: -rvu_15 + st_3_3 == 0
  6: -rvu_8 + st_2_0 == 0
  7: -rvu_1 + st_0_1 == 0
  8: -rvu_12 + st_3_0 == 0
  9: -rvu_5 + st_1_1 == 0
 10: -rvu_9 + st_2_1 == 0
 11: -rvu_2 + st_0_2 == 0
 12: -rvu_13 + st_3_1 == 0
 13: -rvu_6 + st_1_2 == 0
 14: -rvu_10 + st_2_2 == 0
 15: -rvu_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == rvu[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
4.30934786797

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_14 + st_3_2 == 0
  1: -rvu_7 + st_1_3 == 0
  2: -rvu_0 + st_0_0 == 0
  3: -rvu_11 + st_2_3 == 0
  4: -rvu_4 + st_1_0 == 0
  5: -rvu_15 + st_3_3 == 0
  6: -rvu_8 + st_2_0 == 0
  7: -rvu_1 + st_0_1 == 0
  8: -rvu_12 + st_3_0 == 0
  9: -rvu_5 + st_1_1 == 0
 10: -rvu_9 + st_2_1 == 0
 11: -rvu_2 + st_0_2 == 0
 12: -rvu_13 + st_3_1 == 0
 13: -rvu_6 + st_1_2 == 0
 14: -rvu_10 + st_2_2 == 0
 15: -rvu_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == rvu[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
4.15881299973

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_14 + st_3_2 == 0
  1: -rvu_7 + st_1_3 == 0
  2: -rvu_0 + st_0_0 == 0
  3: -rvu_11 + st_2_3 == 0
  4: -rvu_4 + st_1_0 == 0
  5: -rvu_15 + st_3_3 == 0
  6: -rvu_8 + st_2_0 == 0
  7: -rvu_1 + st_0_1 == 0
  8: -rvu_12 + st_3_0 == 0
  9: -rvu_5 + st_1_1 == 0
 10: -rvu_9 + st_2_1 == 0
 11: -rvu_2 + st_0_2 == 0
 12: -rvu_13 + st_3_1 == 0
 13: -rvu_6 + st_1_2 == 0
 14: -rvu_10 + st_2_2 == 0
 15: -rvu_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == rvu[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
4.25758314133

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_14 + st_3_2 == 0
  1: -rvu_7 + st_1_3 == 0
  2: -rvu_0 + st_0_0 == 0
  3: -rvu_11 + st_2_3 == 0
  4: -rvu_4 + st_1_0 == 0
  5: -rvu_15 + st_3_3 == 0
  6: -rvu_8 + st_2_0 == 0
  7: -rvu_1 + st_0_1 == 0
  8: -rvu_12 + st_3_0 == 0
  9: -rvu_5 + st_1_1 == 0
 10: -rvu_9 + st_2_1 == 0
 11: -rvu_2 + st_0_2 == 0
 12: -rvu_13 + st_3_1 == 0
 13: -rvu_6 + st_1_2 == 0
 14: -rvu_10 + st_2_2 == 0
 15: -rvu_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == rvu[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
4.13572311401

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_14 + st_3_2 == 0
  1: -rvu_7 + st_1_3 == 0
  2: -rvu_0 + st_0_0 == 0
  3: -rvu_11 + st_2_3 == 0
  4: -rvu_4 + st_1_0 == 0
  5: -rvu_15 + st_3_3 == 0
  6: -rvu_8 + st_2_0 == 0
  7: -rvu_1 + st_0_1 == 0
  8: -rvu_12 + st_3_0 == 0
  9: -rvu_5 + st_1_1 == 0
 10: -rvu_9 + st_2_1 == 0
 11: -rvu_2 + st_0_2 == 0
 12: -rvu_13 + st_3_1 == 0
 13: -rvu_6 + st_1_2 == 0
 14: -rvu_10 + st_2_2 == 0
 15: -rvu_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == rvu[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
4.13526010513

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_14 + st_3_2 == 0
  1: -rvu_7 + st_1_3 == 0
  2: -rvu_0 + st_0_0 == 0
  3: -rvu_11 + st_2_3 == 0
  4: -rvu_4 + st_1_0 == 0
  5: -rvu_15 + st_3_3 == 0
  6: -rvu_8 + st_2_0 == 0
  7: -rvu_1 + st_0_1 == 0
  8: -rvu_12 + st_3_0 == 0
  9: -rvu_5 + st_1_1 == 0
 10: -rvu_9 + st_2_1 == 0
 11: -rvu_2 + st_0_2 == 0
 12: -rvu_13 + st_3_1 == 0
 13: -rvu_6 + st_1_2 == 0
 14: -rvu_10 + st_2_2 == 0
 15: -rvu_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == rvu[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
4.23987793922

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_14 + st_3_2 == 0
  1: -rvu_7 + st_1_3 == 0
  2: -rvu_0 + st_0_0 == 0
  3: -rvu_11 + st_2_3 == 0
  4: -rvu_4 + st_1_0 == 0
  5: -rvu_15 + st_3_3 == 0
  6: -rvu_8 + st_2_0 == 0
  7: -rvu_1 + st_0_1 == 0
  8: -rvu_12 + st_3_0 == 0
  9: -rvu_5 + st_1_1 == 0
 10: -rvu_9 + st_2_1 == 0
 11: -rvu_2 + st_0_2 == 0
 12: -rvu_13 + st_3_1 == 0
 13: -rvu_6 + st_1_2 == 0
 14: -rvu_10 + st_2_2 == 0
 15: -rvu_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == rvu[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
4.27931785583

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_14 + st_3_2 == 0
  1: -rvu_7 + st_1_3 == 0
  2: -rvu_0 + st_0_0 == 0
  3: -rvu_11 + st_2_3 == 0
  4: -rvu_4 + st_1_0 == 0
  5: -rvu_15 + st_3_3 == 0
  6: -rvu_8 + st_2_0 == 0
  7: -rvu_1 + st_0_1 == 0
  8: -rvu_12 + st_3_0 == 0
  9: -rvu_5 + st_1_1 == 0
 10: -rvu_9 + st_2_1 == 0
 11: -rvu_2 + st_0_2 == 0
 12: -rvu_13 + st_3_1 == 0
 13: -rvu_6 + st_1_2 == 0
 14: -rvu_10 + st_2_2 == 0
 15: -rvu_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == rvu[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
4.15116405487

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
  0: -rvu_14 + st_3_2 == 0
  1: -rvu_7 + st_1_3 == 0
  2: -rvu_0 + st_0_0 == 0
  3: -rvu_11 + st_2_3 == 0
  4: -rvu_4 + st_1_0 == 0
  5: -rvu_15 + st_3_3 == 0
  6: -rvu_8 + st_2_0 == 0
  7: -rvu_1 + st_0_1 == 0
  8: -rvu_12 + st_3_0 == 0
  9: -rvu_5 + st_1_1 == 0
 10: -rvu_9 + st_2_1 == 0
 11: -rvu_2 + st_0_2 == 0
 12: -rvu_13 + st_3_1 == 0
 13: -rvu_6 + st_1_2 == 0
 14: -rvu_10 + st_2_2 == 0
 15: -rvu_3 + st_0_3 == 0
refine:Debug:rfilter(|ps|=16, |tcs|=267)
refine:Debug:rfilter (before 16, after 16, diff 0)
dig_arrays:Info:Partition 16 eqts into 1 groups
dig_arrays:Debug:0. Find rels over idx from 16 eqts (group ('rvu', 'st'))
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'rvu' is pivot
dig_arrays:Debug:solve 'st' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 2 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'coef' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:a_solve: Assume 'st' is pivot
dig_arrays:Debug:solve 'rvu' with respect to pivot with |tcs|=16
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_miscs:Debug:Create equations from 16 traces
dig_miscs:Debug:Solve 16 (uniq) eqts for 3 unknowns
dig_arrays:Debug:Result (pivot st): lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for SimpleArray:
  0: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [rvu,st]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting st[i1][i2] == rvu[(i1,i2)_] has 1 rel(s)
dig_arrays:Debug:lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
4.25945901871


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/State2Block.l0.tcs'
Expect (1): r[4i+j] - st[i][j] = 0
* Run 0, time 4.35451388359, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 1, time 4.18444800377, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 2, time 4.15435290337, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 3, time 4.2530798912, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 4, time 4.13790607452, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 5, time 4.1314740181, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 6, time 4.36172699928, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 7, time 4.12017989159, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 8, time 4.15290808678, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 9, time 4.17043590546, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 10, time 4.27160191536, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 11, time 4.30934786797, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 12, time 4.15881299973, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 13, time 4.25758314133, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 14, time 4.13572311401, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 15, time 4.13526010513, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 16, time 4.23987793922, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 17, time 4.27931785583, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 18, time 4.15116405487, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 19, time 4.25945901871, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
TIME AVG 4.2 (../invgen/Traces/AES_tosem/multilocs/l0/State2Block.l0.tcs)


***** (19) Generate invs from file 'SubBytes.l0.tcs' *****

dig:Info:2013-06-25 02:51:45.943278, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [rvu, st]
2. xinfo: 
 0. All: ['rvu', 'st']
 1. Assume: []
 2. Const: []
 3. Expect: ['r[i][j] = S[st[i,j]]']
 4. ExtFun: []
 5. ExtVar: ['S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22]', 'Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]']
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 18 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/SubBytes.l0.tcs", |vs|=2, deg=7, |terms|=36

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:6. Nesting rvu[i1][i2] == S[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
dig_arrays:Debug:16. Nesting st[i1][i2] == Si[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
3.19015097618

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:6. Nesting rvu[i1][i2] == S[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
dig_arrays:Debug:16. Nesting st[i1][i2] == Si[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
3.30117893219

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:6. Nesting rvu[i1][i2] == S[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
dig_arrays:Debug:16. Nesting st[i1][i2] == Si[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
3.12255597115

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:6. Nesting rvu[i1][i2] == S[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
dig_arrays:Debug:16. Nesting st[i1][i2] == Si[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
3.15657401085

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:6. Nesting rvu[i1][i2] == S[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
dig_arrays:Debug:16. Nesting st[i1][i2] == Si[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
3.24830293655

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:6. Nesting rvu[i1][i2] == S[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
dig_arrays:Debug:16. Nesting st[i1][i2] == Si[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
3.27678108215

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:6. Nesting rvu[i1][i2] == S[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
dig_arrays:Debug:16. Nesting st[i1][i2] == Si[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
3.11861181259

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:6. Nesting rvu[i1][i2] == S[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
dig_arrays:Debug:16. Nesting st[i1][i2] == Si[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
3.16397404671

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:6. Nesting rvu[i1][i2] == S[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
dig_arrays:Debug:16. Nesting st[i1][i2] == Si[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
3.1343228817

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:6. Nesting rvu[i1][i2] == S[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
dig_arrays:Debug:16. Nesting st[i1][i2] == Si[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
3.25817108154

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:6. Nesting rvu[i1][i2] == S[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
dig_arrays:Debug:16. Nesting st[i1][i2] == Si[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
3.24226593971

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:6. Nesting rvu[i1][i2] == S[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
dig_arrays:Debug:16. Nesting st[i1][i2] == Si[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
3.16175413132

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:6. Nesting rvu[i1][i2] == S[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
dig_arrays:Debug:16. Nesting st[i1][i2] == Si[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
3.15048885345

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:6. Nesting rvu[i1][i2] == S[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
dig_arrays:Debug:16. Nesting st[i1][i2] == Si[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
3.21963095665

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:6. Nesting rvu[i1][i2] == S[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
dig_arrays:Debug:16. Nesting st[i1][i2] == Si[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
3.38894081116

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:6. Nesting rvu[i1][i2] == S[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
dig_arrays:Debug:16. Nesting st[i1][i2] == Si[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
3.21057701111

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:6. Nesting rvu[i1][i2] == S[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
dig_arrays:Debug:16. Nesting st[i1][i2] == Si[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
3.14857602119

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:6. Nesting rvu[i1][i2] == S[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
dig_arrays:Debug:16. Nesting st[i1][i2] == Si[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
3.18918204308

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:6. Nesting rvu[i1][i2] == S[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
dig_arrays:Debug:16. Nesting st[i1][i2] == Si[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
3.17976689339

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 32 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=33, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=33)
dig_miscs:Debug:sample_traces: chose |tcs1|=33, |tcs2|=267 (attempted 33/300 tcs)
dig:Info:Compute invs over 33 tcs
dig_miscs:Debug:Create equations from 33 traces
dig_miscs:Debug:Solve 33 (uniq) eqts for 33 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=267)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,st]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:6. Nesting rvu[i1][i2] == S[st[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
dig_arrays:Debug:16. Nesting st[i1][i2] == Si[rvu[(i1,i2)_][(i1,i2)_]] has 1 rel(s)
dig_arrays:Debug:lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
3.34491491318


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/SubBytes.l0.tcs'
Expect (1): r[i][j] = S[st[i,j]]
* Run 0, time 3.19015097618, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 1, time 3.30117893219, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 2, time 3.12255597115, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 3, time 3.15657401085, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 4, time 3.24830293655, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 5, time 3.27678108215, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 6, time 3.11861181259, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 7, time 3.16397404671, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 8, time 3.1343228817, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 9, time 3.25817108154, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 10, time 3.24226593971, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 11, time 3.16175413132, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 12, time 3.15048885345, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 13, time 3.21963095665, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 14, time 3.38894081116, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 15, time 3.21057701111, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 16, time 3.14857602119, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 17, time 3.18918204308, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 18, time 3.17976689339, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 19, time 3.34491491318, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
TIME AVG 3.2 (../invgen/Traces/AES_tosem/multilocs/l0/SubBytes.l0.tcs)


***** (20) Generate invs from file 'SubWord.l0.tcs' *****

dig:Info:2013-06-25 02:52:50.385180, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [rvu, w]
2. xinfo: 
 0. All: ['rvu', 'w']
 1. Assume: []
 2. Const: []
 3. Expect: ['r[i] = S[w[i]]']
 4. ExtFun: []
 5. ExtVar: ['S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22]', 'Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]']
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 18 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/SubWord.l0.tcs", |vs|=2, deg=7, |terms|=36

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=291)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,w]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:4. Nesting rvu[i1] == S[w[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
dig_arrays:Debug:12. Nesting w[i1] == Si[rvu[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
1.35245203972

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=291)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,w]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:4. Nesting rvu[i1] == S[w[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
dig_arrays:Debug:12. Nesting w[i1] == Si[rvu[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
1.33483695984

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=291)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,w]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:4. Nesting rvu[i1] == S[w[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
dig_arrays:Debug:12. Nesting w[i1] == Si[rvu[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
1.36091899872

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=291)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,w]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:4. Nesting rvu[i1] == S[w[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
dig_arrays:Debug:12. Nesting w[i1] == Si[rvu[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
1.33895897865

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=291)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,w]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:4. Nesting rvu[i1] == S[w[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
dig_arrays:Debug:12. Nesting w[i1] == Si[rvu[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
1.3461561203

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=291)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,w]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:4. Nesting rvu[i1] == S[w[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
dig_arrays:Debug:12. Nesting w[i1] == Si[rvu[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
1.3325779438

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=291)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,w]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:4. Nesting rvu[i1] == S[w[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
dig_arrays:Debug:12. Nesting w[i1] == Si[rvu[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
1.43456983566

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=291)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,w]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:4. Nesting rvu[i1] == S[w[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
dig_arrays:Debug:12. Nesting w[i1] == Si[rvu[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
1.33147192001

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=291)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,w]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:4. Nesting rvu[i1] == S[w[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
dig_arrays:Debug:12. Nesting w[i1] == Si[rvu[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
1.32293891907

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=291)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,w]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:4. Nesting rvu[i1] == S[w[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
dig_arrays:Debug:12. Nesting w[i1] == Si[rvu[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
1.34480404854

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=291)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,w]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:4. Nesting rvu[i1] == S[w[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
dig_arrays:Debug:12. Nesting w[i1] == Si[rvu[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
1.33020305634

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=291)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,w]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:4. Nesting rvu[i1] == S[w[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
dig_arrays:Debug:12. Nesting w[i1] == Si[rvu[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
1.33388090134

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=291)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,w]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:4. Nesting rvu[i1] == S[w[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
dig_arrays:Debug:12. Nesting w[i1] == Si[rvu[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
1.34304785728

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=291)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,w]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:4. Nesting rvu[i1] == S[w[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
dig_arrays:Debug:12. Nesting w[i1] == Si[rvu[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
1.33494305611

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=291)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,w]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:4. Nesting rvu[i1] == S[w[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
dig_arrays:Debug:12. Nesting w[i1] == Si[rvu[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
1.43491101265

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=291)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,w]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:4. Nesting rvu[i1] == S[w[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
dig_arrays:Debug:12. Nesting w[i1] == Si[rvu[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
1.34247803688

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=291)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,w]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:4. Nesting rvu[i1] == S[w[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
dig_arrays:Debug:12. Nesting w[i1] == Si[rvu[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
1.34545516968

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=291)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,w]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:4. Nesting rvu[i1] == S[w[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
dig_arrays:Debug:12. Nesting w[i1] == Si[rvu[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
1.34647893906

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=291)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,w]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:4. Nesting rvu[i1] == S[w[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
dig_arrays:Debug:12. Nesting w[i1] == Si[rvu[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
1.33366203308

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 8 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=9, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=9)
dig_miscs:Debug:sample_traces: chose |tcs1|=9, |tcs2|=291 (attempted 9/300 tcs)
dig:Info:Compute invs over 9 tcs
dig_miscs:Debug:Create equations from 9 traces
dig_miscs:Debug:Solve 9 (uniq) eqts for 9 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=291)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [S [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], Si [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]]
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [S,Si,rvu,w]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:4. Nesting rvu[i1] == S[w[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
dig_arrays:Debug:12. Nesting w[i1] == Si[rvu[(i1)_]] has 1 rel(s)
dig_arrays:Debug:lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
1.3427491188


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/SubWord.l0.tcs'
Expect (1): r[i] = S[w[i]]
* Run 0, time 1.35245203972, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 1, time 1.33483695984, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 2, time 1.36091899872, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 3, time 1.33895897865, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 4, time 1.3461561203, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 5, time 1.3325779438, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 6, time 1.43456983566, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 7, time 1.33147192001, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 8, time 1.32293891907, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 9, time 1.34480404854, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 10, time 1.33020305634, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 11, time 1.33388090134, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 12, time 1.34304785728, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 13, time 1.33494305611, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 14, time 1.43491101265, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 15, time 1.34247803688, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 16, time 1.34545516968, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 17, time 1.34647893906, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 18, time 1.33366203308, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 19, time 1.3427491188, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
TIME AVG 1.3 (../invgen/Traces/AES_tosem/multilocs/l0/SubWord.l0.tcs)


***** (21) Generate invs from file 'addroundkey.l0.tcs' *****

dig:Info:2013-06-25 02:53:17.480086, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [rk0, rk1, rk2, rk3, rvu, st]
2. xinfo: 
 0. All: ['rk0', 'rk1', 'rk2', 'rk3', 'rvu', 'st']
 1. Assume: []
 2. Const: []
 3. Expect: ['r[i][j]= xor(st[i,j],rk[i,j])']
 4. ExtFun: ['xor']
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/addroundkey.l0.tcs", |vs|=6, deg=3, |terms|=84

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=43)
dig_miscs:Debug:fun: xor, fvals 254, idxs 1849
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk0,rk1,rk2,rk3,rvu]: 11 expressions generated
dig_arrays:Info:Apply reachability analysis to 11 nestings to find valid ones
dig_arrays:Debug:1. Nesting rk0[i1] == xor(st[rk2[(i1)_]][(i1)_],rvu[rk2[(i1)_]][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rk2,rvu,i1: rk0[i1] == xor(st[rk2[3]][i1],rvu[rk2[3]][i1])
dig_arrays:Debug:2. Nesting rk0[i1] == xor(st[rk2[(i1)_]][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rk2,rvu,i1: rk0[i1] == xor(st[rk2[3]][i1],rvu[0][i1])
dig_arrays:Debug:4. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[rk2[(i1)_]][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,rk2,i1: rk0[i1] == xor(st[0][i1],rvu[rk2[3]][i1])
dig_arrays:Debug:5. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
dig_arrays:Debug:7. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
dig_arrays:Debug:9. Nesting rk3[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
dig_arrays:Info:Potential rels: 6
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=300)
refine:Debug:rfilter (before 6, after 3, diff 3)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
3.13473296165

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=45)
dig_miscs:Debug:fun: xor, fvals 253, idxs 2025
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk0,rk1,rk2,rk3,rvu]: 5 expressions generated
dig_arrays:Info:Apply reachability analysis to 5 nestings to find valid ones
dig_arrays:Debug:1. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
dig_arrays:Debug:2. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
dig_arrays:Debug:3. Nesting rk2[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
dig_arrays:Debug:4. Nesting rk3[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
dig_arrays:Info:Potential rels: 4
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=300)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
3.19025397301

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=39)
dig_miscs:Debug:fun: xor, fvals 252, idxs 1521
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk0,rk1,rk2,rk3,rvu]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
dig_arrays:Debug:1. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
dig_arrays:Debug:2. Nesting rk3[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
3.01649904251

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=45)
dig_miscs:Debug:fun: xor, fvals 255, idxs 2025
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk0,rk1,rk2,rk3,rvu]: 4 expressions generated
dig_arrays:Info:Apply reachability analysis to 4 nestings to find valid ones
dig_arrays:Debug:0. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
dig_arrays:Debug:1. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
dig_arrays:Debug:3. Nesting rk3[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
2.89352798462

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=44)
dig_miscs:Debug:fun: xor, fvals 254, idxs 1936
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk0,rk1,rk2,rk3,rvu]: 4 expressions generated
dig_arrays:Info:Apply reachability analysis to 4 nestings to find valid ones
dig_arrays:Debug:0. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
dig_arrays:Debug:1. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
dig_arrays:Debug:2. Nesting rk2[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
3.10184407234

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=41)
dig_miscs:Debug:fun: xor, fvals 253, idxs 1681
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk0,rk1,rk2,rk3,rvu]: 5 expressions generated
dig_arrays:Info:Apply reachability analysis to 5 nestings to find valid ones
dig_arrays:Debug:0. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
dig_arrays:Debug:1. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
dig_arrays:Debug:2. Nesting rk2[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
dig_arrays:Debug:4. Nesting rk3[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
dig_arrays:Info:Potential rels: 4
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=300)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
3.16486001015

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=45)
dig_miscs:Debug:fun: xor, fvals 252, idxs 2025
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk0,rk1,rk2,rk3,rvu]: 17 expressions generated
dig_arrays:Info:Apply reachability analysis to 17 nestings to find valid ones
dig_arrays:Debug:1. Nesting rk0[i1] == xor(st[rvu[(i1)_][(i1)_]][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[rvu[3][3]][i1],rvu[0][i1])
dig_arrays:Debug:3. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
dig_arrays:Debug:10. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[st[(i1)_][(i1)_]][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[st[3][0]][i1])
dig_arrays:Debug:11. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
dig_arrays:Debug:13. Nesting rk2[i1] == xor(st[rvu[(i1)_][(i1)_]][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[rvu[2][0]][i1],rvu[2][i1])
dig_arrays:Debug:15. Nesting rk2[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
dig_arrays:Debug:16. Nesting rk3[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
dig_arrays:Info:Potential rels: 7
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=300)
refine:Debug:rfilter (before 7, after 4, diff 3)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
3.58785104752

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=43)
dig_miscs:Debug:fun: xor, fvals 254, idxs 1849
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk0,rk1,rk2,rk3,rvu]: 5 expressions generated
dig_arrays:Info:Apply reachability analysis to 5 nestings to find valid ones
dig_arrays:Debug:0. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
dig_arrays:Debug:1. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
dig_arrays:Debug:3. Nesting rk2[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
dig_arrays:Debug:4. Nesting rk3[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
dig_arrays:Info:Potential rels: 4
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=300)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
3.18096899986

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=46)
dig_miscs:Debug:fun: xor, fvals 251, idxs 2116
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk0,rk1,rk2,rk3,rvu]: 8 expressions generated
dig_arrays:Info:Apply reachability analysis to 8 nestings to find valid ones
dig_arrays:Debug:0. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
dig_arrays:Debug:1. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[st[(i1)_][(i1)_]][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[st[3][3]][i1])
dig_arrays:Debug:2. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
dig_arrays:Debug:4. Nesting rk2[i1] == xor(st[rvu[(i1)_][(i1)_]][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[rvu[1][1]][i1],rvu[2][i1])
dig_arrays:Debug:6. Nesting rk2[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
dig_arrays:Debug:7. Nesting rk3[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
dig_arrays:Info:Potential rels: 6
dig:Info:Refine 6 invs
refine:Debug:rfilter(|ps|=6, |tcs|=300)
refine:Debug:rfilter (before 6, after 4, diff 2)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
3.31460285187

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=47)
dig_miscs:Debug:fun: xor, fvals 253, idxs 2209
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk0,rk1,rk2,rk3,rvu]: 5 expressions generated
dig_arrays:Info:Apply reachability analysis to 5 nestings to find valid ones
dig_arrays:Debug:0. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
dig_arrays:Debug:3. Nesting rk2[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
dig_arrays:Debug:4. Nesting rk3[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  2: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
3.07397699356

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=47)
dig_miscs:Debug:fun: xor, fvals 254, idxs 2209
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk0,rk1,rk2,rk3,rvu]: 6 expressions generated
dig_arrays:Info:Apply reachability analysis to 6 nestings to find valid ones
dig_arrays:Debug:0. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
dig_arrays:Debug:1. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[st[(i1)_][(i1)_]][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[st[3][1]][i1])
dig_arrays:Debug:2. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
dig_arrays:Debug:3. Nesting rk2[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
dig_arrays:Debug:5. Nesting rk3[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
dig_arrays:Info:Potential rels: 5
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=300)
refine:Debug:rfilter (before 5, after 4, diff 1)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
3.35038399696

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=47)
dig_miscs:Debug:fun: xor, fvals 253, idxs 2209
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk0,rk1,rk2,rk3,rvu]: 5 expressions generated
dig_arrays:Info:Apply reachability analysis to 5 nestings to find valid ones
dig_arrays:Debug:0. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
dig_arrays:Debug:3. Nesting rk2[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
dig_arrays:Debug:4. Nesting rk3[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  2: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
3.01419901848

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=44)
dig_miscs:Debug:fun: xor, fvals 253, idxs 1936
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk0,rk1,rk2,rk3,rvu]: 6 expressions generated
dig_arrays:Info:Apply reachability analysis to 6 nestings to find valid ones
dig_arrays:Debug:0. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
dig_arrays:Debug:2. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
dig_arrays:Debug:3. Nesting rk2[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
dig_arrays:Debug:4. Nesting rk3[i1] == xor(st[(i1)_][(i1)_],rvu[st[(i1)_][(i1)_]][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[st[3][1]][i1])
dig_arrays:Debug:5. Nesting rk3[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
dig_arrays:Info:Potential rels: 5
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=300)
refine:Debug:rfilter (before 5, after 4, diff 1)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
3.44258093834

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=42)
dig_miscs:Debug:fun: xor, fvals 251, idxs 1764
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk0,rk1,rk2,rk3,rvu]: 6 expressions generated
dig_arrays:Info:Apply reachability analysis to 6 nestings to find valid ones
dig_arrays:Debug:2. Nesting rk1[i1] == xor(st[rvu[(i1)_][(i1)_]][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[rvu[3][2]][i1],rvu[1][i1])
dig_arrays:Debug:3. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 1, diff 1)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
2.74759888649

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=42)
dig_miscs:Debug:fun: xor, fvals 246, idxs 1764
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk0,rk1,rk2,rk3,rvu]: 4 expressions generated
dig_arrays:Info:Apply reachability analysis to 4 nestings to find valid ones
dig_arrays:Debug:0. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
dig_arrays:Debug:1. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
dig_arrays:Debug:3. Nesting rk3[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
2.89788389206

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=45)
dig_miscs:Debug:fun: xor, fvals 254, idxs 2025
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk0,rk1,rk2,rk3,rvu]: 20 expressions generated
dig_arrays:Info:Apply reachability analysis to 20 nestings to find valid ones
dig_arrays:Debug:4. Nesting rk0[i1] == xor(st[rk2[(i1)_]][(i1)_],rvu[rk2[(i1)_]][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rk2,rvu,i1: rk0[i1] == xor(st[rk2[1]][i1],rvu[rk2[1]][i1])
dig_arrays:Debug:5. Nesting rk0[i1] == xor(st[rk2[(i1)_]][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rk2,rvu,i1: rk0[i1] == xor(st[rk2[1]][i1],rvu[0][i1])
dig_arrays:Debug:10. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[rk2[(i1)_]][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,rk2,i1: rk0[i1] == xor(st[0][i1],rvu[rk2[1]][i1])
dig_arrays:Debug:11. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
dig_arrays:Debug:13. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
dig_arrays:Debug:14. Nesting rk2[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
dig_arrays:Debug:17. Nesting rk3[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
dig_arrays:Info:Potential rels: 7
dig:Info:Refine 7 invs
refine:Debug:rfilter(|ps|=7, |tcs|=300)
refine:Debug:rfilter (before 7, after 4, diff 3)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
3.75985193253

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=43)
dig_miscs:Debug:fun: xor, fvals 255, idxs 1849
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk0,rk1,rk2,rk3,rvu]: 6 expressions generated
dig_arrays:Info:Apply reachability analysis to 6 nestings to find valid ones
dig_arrays:Debug:0. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
dig_arrays:Debug:1. Nesting rk1[i1] == xor(st[rvu[(i1)_][(i1)_]][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[rvu[2][0]][i1],rvu[1][i1])
dig_arrays:Debug:2. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
dig_arrays:Debug:4. Nesting rk2[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
dig_arrays:Debug:5. Nesting rk3[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
dig_arrays:Info:Potential rels: 5
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=300)
refine:Debug:rfilter (before 5, after 4, diff 1)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
3.38562607765

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=46)
dig_miscs:Debug:fun: xor, fvals 254, idxs 2116
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk0,rk1,rk2,rk3,rvu]: 5 expressions generated
dig_arrays:Info:Apply reachability analysis to 5 nestings to find valid ones
dig_arrays:Debug:0. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
dig_arrays:Debug:1. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
dig_arrays:Debug:2. Nesting rk2[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
dig_arrays:Debug:3. Nesting rk3[i1] == xor(st[rvu[(i1)_][(i1)_]][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[rvu[0][0]][i1],rvu[3][i1])
dig_arrays:Debug:4. Nesting rk3[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
dig_arrays:Info:Potential rels: 5
dig:Info:Refine 5 invs
refine:Debug:rfilter(|ps|=5, |tcs|=300)
refine:Debug:rfilter (before 5, after 4, diff 1)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
3.74583220482

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=46)
dig_miscs:Debug:fun: xor, fvals 255, idxs 2116
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk0,rk1,rk2,rk3,rvu]: 4 expressions generated
dig_arrays:Info:Apply reachability analysis to 4 nestings to find valid ones
dig_arrays:Debug:0. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
dig_arrays:Debug:1. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
dig_arrays:Debug:2. Nesting rk2[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
dig_arrays:Debug:3. Nesting rk3[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
dig_arrays:Info:Potential rels: 4
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=300)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
3.154266119

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=42)
dig_miscs:Debug:fun: xor, fvals 250, idxs 1764
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk0,rk1,rk2,rk3,rvu]: 10 expressions generated
dig_arrays:Info:Apply reachability analysis to 10 nestings to find valid ones
dig_arrays:Debug:0. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[st[(i1)_][(i1)_]][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[st[3][2]][i1])
dig_arrays:Debug:1. Nesting rk0[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
dig_arrays:Debug:3. Nesting rk1[i1] == xor(st[rvu[(i1)_][(i1)_]][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[rvu[2][0]][i1],rvu[1][i1])
dig_arrays:Debug:4. Nesting rk1[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
dig_arrays:Debug:5. Nesting rk2[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
dig_arrays:Debug:6. Nesting rk3[i1] == xor(st[rk0[(i1)_]][(i1)_],rvu[rk0[(i1)_]][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rk0,rvu,i1: rk3[i1] == xor(st[rk0[3]][i1],rvu[rk0[3]][i1])
dig_arrays:Debug:7. Nesting rk3[i1] == xor(st[rk0[(i1)_]][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rk0,rvu,i1: rk3[i1] == xor(st[rk0[3]][i1],rvu[3][i1])
dig_arrays:Debug:8. Nesting rk3[i1] == xor(st[(i1)_][(i1)_],rvu[rk0[(i1)_]][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,rk0,i1: rk3[i1] == xor(st[3][i1],rvu[rk0[3]][i1])
dig_arrays:Debug:9. Nesting rk3[i1] == xor(st[(i1)_][(i1)_],rvu[(i1)_][(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
dig_arrays:Info:Potential rels: 9
dig:Info:Refine 9 invs
refine:Debug:rfilter(|ps|=9, |tcs|=300)
refine:Debug:rfilter (before 9, after 4, diff 5)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
3.37393903732


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/addroundkey.l0.tcs'
Expect (1): r[i][j]= xor(st[i,j],rk[i,j])
* Run 0, time 3.13473296165, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 1, time 3.19025397301, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 2, time 3.01649904251, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 3, time 2.89352798462, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 4, time 3.10184407234, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
* Run 5, time 3.16486001015, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 6, time 3.58785104752, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 7, time 3.18096899986, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 8, time 3.31460285187, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 9, time 3.07397699356, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  2: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 10, time 3.35038399696, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 11, time 3.01419901848, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  2: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 12, time 3.44258093834, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 13, time 2.74759888649, deg 3
  0: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
* Run 14, time 2.89788389206, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 15, time 3.75985193253, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 16, time 3.38562607765, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 17, time 3.74583220482, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 18, time 3.154266119, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 19, time 3.37393903732, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
TIME AVG 3.2 (../invgen/Traces/AES_tosem/multilocs/l0/addroundkey.l0.tcs)


***** (22) Generate invs from file 'addroundkey_vn.l0.tcs' *****

dig:Info:2013-06-25 02:54:22.418763, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [rk, rvu, st]
2. xinfo: 
 0. All: ['rk', 'rvu', 'st']
 1. Assume: []
 2. Const: []
 3. Expect: ['r[i][j]= xor(st[i,j],rk[i,j])']
 4. ExtFun: ['xor']
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 8 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/addroundkey_vn.l0.tcs", |vs|=3, deg=7, |terms|=120

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=43)
dig_miscs:Debug:fun: xor, fvals 254, idxs 1849
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk,rvu]: 5 expressions generated
dig_arrays:Info:Apply reachability analysis to 5 nestings to find valid ones
dig_arrays:Debug:3. Nesting rvu[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rk[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
3.37351298332

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=45)
dig_miscs:Debug:fun: xor, fvals 253, idxs 2025
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk,rvu]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:1. Nesting rk[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rvu[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
dig_arrays:Debug:2. Nesting rvu[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rk[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  1: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
3.66851496696

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=39)
dig_miscs:Debug:fun: xor, fvals 252, idxs 1521
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk,rvu]: 1 expressions generated
dig_arrays:Info:Apply reachability analysis to 1 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rk[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
2.68847894669

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=45)
dig_miscs:Debug:fun: xor, fvals 255, idxs 2025
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk,rvu]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting rvu[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rk[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
3.1439139843

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=44)
dig_miscs:Debug:fun: xor, fvals 254, idxs 1936
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk,rvu]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting rvu[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rk[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
2.91899180412

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=41)
dig_miscs:Debug:fun: xor, fvals 253, idxs 1681
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk,rvu]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == xor(rk[(i1,i2)_][(i1,i2)_],rvu[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
dig_arrays:Debug:1. Nesting rk[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rvu[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
  1: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
3.69168186188

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=45)
dig_miscs:Debug:fun: xor, fvals 252, idxs 2025
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk,rvu]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:1. Nesting rk[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rvu[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
dig_arrays:Debug:2. Nesting rvu[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rk[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  1: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
3.60781693459

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=43)
dig_miscs:Debug:fun: xor, fvals 254, idxs 1849
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk,rvu]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:1. Nesting rk[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rvu[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
3.18621397018

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=46)
dig_miscs:Debug:fun: xor, fvals 251, idxs 2116
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk,rvu]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:1. Nesting rk[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rvu[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
dig_arrays:Debug:2. Nesting rvu[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rk[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  1: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
3.66323804855

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=47)
dig_miscs:Debug:fun: xor, fvals 253, idxs 2209
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk,rvu]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:2. Nesting rvu[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rk[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
3.38432693481

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=47)
dig_miscs:Debug:fun: xor, fvals 254, idxs 2209
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk,rvu]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == xor(rk[(i1,i2)_][(i1,i2)_],rvu[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
dig_arrays:Debug:1. Nesting rk[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rvu[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
dig_arrays:Debug:2. Nesting rvu[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rk[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
  1: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  2: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
3.88152503967

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=47)
dig_miscs:Debug:fun: xor, fvals 253, idxs 2209
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk,rvu]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:2. Nesting rvu[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rk[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
3.38495707512

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=44)
dig_miscs:Debug:fun: xor, fvals 253, idxs 1936
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk,rvu]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == xor(rk[(i1,i2)_][(i1,i2)_],rvu[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
dig_arrays:Debug:1. Nesting rk[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rvu[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
dig_arrays:Debug:2. Nesting rvu[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rk[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
  1: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  2: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
3.97144007683

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=42)
dig_miscs:Debug:fun: xor, fvals 251, idxs 1764
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk,rvu]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:1. Nesting rvu[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rk[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
3.13969993591

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=42)
dig_miscs:Debug:fun: xor, fvals 246, idxs 1764
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk,rvu]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Info:Potential rels: 0
dig:Info:Refine 0 invs
refine:Debug:rfilter skips (|ps|=0, |tcs|=300)
dig:Info:Detected invariants for NestedArray:
2.57827019691

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=45)
dig_miscs:Debug:fun: xor, fvals 254, idxs 2025
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk,rvu]: 5 expressions generated
dig_arrays:Info:Apply reachability analysis to 5 nestings to find valid ones
dig_arrays:Debug:2. Nesting rk[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rvu[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
dig_arrays:Debug:3. Nesting rvu[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rk[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  1: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
3.93466210365

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=43)
dig_miscs:Debug:fun: xor, fvals 255, idxs 1849
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk,rvu]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == xor(rk[(i1,i2)_][(i1,i2)_],rvu[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
dig_arrays:Debug:1. Nesting rk[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rvu[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
dig_arrays:Debug:2. Nesting rvu[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rk[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
  1: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  2: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
4.05889296532

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=46)
dig_miscs:Debug:fun: xor, fvals 254, idxs 2116
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk,rvu]: 2 expressions generated
dig_arrays:Info:Apply reachability analysis to 2 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == xor(rk[(i1,i2)_][(i1,i2)_],rvu[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
dig_arrays:Debug:1. Nesting rk[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rvu[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
  1: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
3.44019412994

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=46)
dig_miscs:Debug:fun: xor, fvals 255, idxs 2116
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk,rvu]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:1. Nesting rk[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rvu[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
dig_arrays:Debug:2. Nesting rvu[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rk[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  1: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
3.65379309654

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 48 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=49, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=49)
dig_miscs:Debug:sample_traces: chose |tcs1|=49, |tcs2|=251 (attempted 49/300 tcs)
dig:Info:Compute invs over 49 tcs
dig_miscs:Debug:Create equations from 49 traces
dig_miscs:Debug:Solve 49 (uniq) eqts for 49 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=251)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=42)
dig_miscs:Debug:fun: xor, fvals 250, idxs 1764
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,st,rk,rvu]: 4 expressions generated
dig_arrays:Info:Apply reachability analysis to 4 nestings to find valid ones
dig_arrays:Debug:0. Nesting st[i1][i2] == xor(rk[(i1,i2)_][(i1,i2)_],rvu[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
dig_arrays:Debug:1. Nesting rk[i1][i2] == xor(st[(i1,i2)_][(i1,i2)_],rvu[(i1,i2)_][(i1,i2)_]) has 1 rel(s)
dig_arrays:Debug:lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
  1: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
3.72101211548


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/addroundkey_vn.l0.tcs'
Expect (1): r[i][j]= xor(st[i,j],rk[i,j])
* Run 0, time 3.37351298332, deg 7
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 1, time 3.66851496696, deg 7
  0: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  1: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 2, time 2.68847894669, deg 7
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 3, time 3.1439139843, deg 7
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 4, time 2.91899180412, deg 7
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 5, time 3.69168186188, deg 7
  0: lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
  1: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
* Run 6, time 3.60781693459, deg 7
  0: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  1: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 7, time 3.18621397018, deg 7
  0: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
* Run 8, time 3.66323804855, deg 7
  0: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  1: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 9, time 3.38432693481, deg 7
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 10, time 3.88152503967, deg 7
  0: lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
  1: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  2: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 11, time 3.38495707512, deg 7
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 12, time 3.97144007683, deg 7
  0: lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
  1: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  2: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 13, time 3.13969993591, deg 7
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 14, time 2.57827019691, deg 7
* Run 15, time 3.93466210365, deg 7
  0: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  1: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 16, time 4.05889296532, deg 7
  0: lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
  1: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  2: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 17, time 3.44019412994, deg 7
  0: lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
  1: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
* Run 18, time 3.65379309654, deg 7
  0: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  1: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 19, time 3.72101211548, deg 7
  0: lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
  1: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
TIME AVG 3.5 (../invgen/Traces/AES_tosem/multilocs/l0/addroundkey_vn.l0.tcs)


***** (23) Generate invs from file 'mul.l0.tcs' *****

dig:Info:2013-06-25 02:55:31.855769, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 298
1. vs: [a, b, rvu]
2. xinfo: 
 0. All: ['a', 'b', 'rvu']
 1. Assume: []
 2. Const: []
 3. Expect: ['r[i] = Alogtable(mod255(add(Logtable(a[i]),Logtable(b[i]))))']
 4. ExtFun: ['add', 'mod255']
 5. ExtVar: ['Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7]', 'Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]']
 6. Global: []
 7. Input: ['a', 'b']
 8. Output: []
reset deg from 8 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/mul.l0.tcs", |vs|=3, deg=7, |terms|=120

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig:Info:Compute invs over 298 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 3 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=4, |tcs|=298
dig_arrays:Info:Select traces (note: |tcs|=|terms|=4)
dig_miscs:Debug:sample_traces: chose |tcs1|=4, |tcs2|=294 (attempted 4/298 tcs)
dig:Info:Compute invs over 4 tcs
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 4 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=294)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=297 (attempted 1/298 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7], Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]]
dig_miscs:Debug:gen_extfuns: 2 ext funs [add, mod255]
dig_miscs:Debug:gen_ef_data([add,mod255],|avals|=256)
dig_miscs:Debug:fun: add, fvals 511, idxs 65536
dig_miscs:Debug:fun: mod255, fvals 255, idxs 511
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [add,mod255,Logtable,Alogtable,rvu,a,b]: 137 expressions generated
dig_arrays:Info:Apply reachability analysis to 137 nestings to find valid ones
dig_arrays:Debug:128. Nesting rvu[i1] == Alogtable[mod255(add(Logtable[b[(i1)_]],Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=298)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
11.0301229954

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig:Info:Compute invs over 298 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 3 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=4, |tcs|=298
dig_arrays:Info:Select traces (note: |tcs|=|terms|=4)
dig_miscs:Debug:sample_traces: chose |tcs1|=4, |tcs2|=294 (attempted 4/298 tcs)
dig:Info:Compute invs over 4 tcs
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 4 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=294)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=297 (attempted 1/298 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7], Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]]
dig_miscs:Debug:gen_extfuns: 2 ext funs [add, mod255]
dig_miscs:Debug:gen_ef_data([add,mod255],|avals|=256)
dig_miscs:Debug:fun: add, fvals 511, idxs 65536
dig_miscs:Debug:fun: mod255, fvals 255, idxs 511
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [add,mod255,Logtable,Alogtable,rvu,a,b]: 71 expressions generated
dig_arrays:Info:Apply reachability analysis to 71 nestings to find valid ones
dig_arrays:Debug:67. Nesting rvu[i1] == Alogtable[mod255(add(Logtable[b[(i1)_]],Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=298)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
10.1169178486

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig:Info:Compute invs over 298 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 3 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=4, |tcs|=298
dig_arrays:Info:Select traces (note: |tcs|=|terms|=4)
dig_miscs:Debug:sample_traces: chose |tcs1|=4, |tcs2|=294 (attempted 4/298 tcs)
dig:Info:Compute invs over 4 tcs
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 4 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=294)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=297 (attempted 1/298 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7], Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]]
dig_miscs:Debug:gen_extfuns: 2 ext funs [add, mod255]
dig_miscs:Debug:gen_ef_data([add,mod255],|avals|=256)
dig_miscs:Debug:fun: add, fvals 511, idxs 65536
dig_miscs:Debug:fun: mod255, fvals 255, idxs 511
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [add,mod255,Logtable,Alogtable,rvu,a,b]: 265 expressions generated
dig_arrays:Info:Apply reachability analysis to 265 nestings to find valid ones
dig_arrays:Debug:215. Nesting rvu[i1] == mod255(Logtable[add(Alogtable[a[(i1)_]],b[(i1)_])]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,mod255,Logtable,add,Alogtable,a,b,i1: rvu[i1] == mod255(Logtable[add(Alogtable[a[i1]],b[i1])])
dig_arrays:Debug:216. Nesting rvu[i1] == mod255(Alogtable[add(Logtable[b[(i1)_]],Logtable[a[(i1)_]])]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,mod255,Alogtable,add,Logtable,b,a,i1: rvu[i1] == mod255(Alogtable[add(Logtable[b[i1]],Logtable[a[i1]])])
dig_arrays:Debug:219. Nesting rvu[i1] == Logtable[add(mod255(Alogtable[a[(i1)_]]),mod255(b[(i1)_]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Logtable,add,mod255,Alogtable,a,b,i1: rvu[i1] == Logtable[add(mod255(Alogtable[a[i1]]),mod255(b[i1]))]
dig_arrays:Debug:220. Nesting rvu[i1] == Logtable[add(mod255(Alogtable[a[(i1)_]]),b[mod255(Alogtable[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Logtable,add,mod255,Alogtable,a,b,i1: rvu[i1] == Logtable[add(mod255(Alogtable[a[i1]]),b[mod255(Alogtable[_Logtable_0_add_1_b_0_mod255_0_Alogtable_0__i1*i1 + 7])])]
dig_arrays:Debug:221. Nesting rvu[i1] == Logtable[add(mod255(Alogtable[a[(i1)_]]),b[(i1)_])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Logtable,add,mod255,Alogtable,a,b,i1: rvu[i1] == Logtable[add(mod255(Alogtable[a[i1]]),b[i1])]
dig_arrays:Debug:222. Nesting rvu[i1] == Logtable[add(Alogtable[mod255(a[(i1)_])],mod255(b[(i1)_]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Logtable,add,Alogtable,mod255,a,b,i1: rvu[i1] == Logtable[add(Alogtable[mod255(a[i1])],mod255(b[i1]))]
dig_arrays:Debug:223. Nesting rvu[i1] == Logtable[add(Alogtable[mod255(a[(i1)_])],b[mod255(Alogtable[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Logtable,add,Alogtable,mod255,a,b,i1: rvu[i1] == Logtable[add(Alogtable[mod255(a[i1])],b[mod255(Alogtable[_Logtable_0_add_1_b_0_mod255_0_Alogtable_0__i1*i1 + 7])])]
dig_arrays:Debug:224. Nesting rvu[i1] == Logtable[add(Alogtable[mod255(a[(i1)_])],b[(i1)_])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Logtable,add,Alogtable,mod255,a,b,i1: rvu[i1] == Logtable[add(Alogtable[mod255(a[i1])],b[i1])]
dig_arrays:Debug:225. Nesting rvu[i1] == Logtable[add(Alogtable[a[(i1)_]],mod255(b[(i1)_]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Logtable,add,Alogtable,a,mod255,b,i1: rvu[i1] == Logtable[add(Alogtable[a[i1]],mod255(b[i1]))]
dig_arrays:Debug:226. Nesting rvu[i1] == Logtable[add(Alogtable[a[(i1)_]],b[mod255(Alogtable[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Logtable,add,Alogtable,a,b,mod255,i1: rvu[i1] == Logtable[add(Alogtable[a[i1]],b[mod255(Alogtable[_Logtable_0_add_1_b_0_mod255_0_Alogtable_0__i1*i1 + 7])])]
dig_arrays:Debug:227. Nesting rvu[i1] == Logtable[add(Alogtable[a[(i1)_]],b[(i1)_])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Logtable,add,Alogtable,a,b,i1: rvu[i1] == Logtable[add(Alogtable[a[i1]],b[i1])]
dig_arrays:Debug:228. Nesting rvu[i1] == Logtable[mod255(add(Alogtable[a[(i1)_]],b[(i1)_]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Logtable,mod255,add,Alogtable,a,b,i1: rvu[i1] == Logtable[mod255(add(Alogtable[a[i1]],b[i1]))]
dig_arrays:Debug:231. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[b[(i1)_]]),mod255(Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,b,a,i1: rvu[i1] == Alogtable[add(mod255(Logtable[b[i1]]),mod255(Logtable[a[i1]]))]
dig_arrays:Debug:232. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[b[(i1)_]]),Logtable[mod255(a[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,b,a,i1: rvu[i1] == Alogtable[add(mod255(Logtable[b[i1]]),Logtable[mod255(a[i1])])]
dig_arrays:Debug:233. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[b[(i1)_]]),Logtable[a[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,b,a,i1: rvu[i1] == Alogtable[add(mod255(Logtable[b[i1]]),Logtable[a[i1]])]
dig_arrays:Debug:240. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(b[(i1)_])],mod255(Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,b,a,i1: rvu[i1] == Alogtable[add(Logtable[mod255(b[i1])],mod255(Logtable[a[i1]]))]
dig_arrays:Debug:241. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(b[(i1)_])],Logtable[mod255(a[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,b,a,i1: rvu[i1] == Alogtable[add(Logtable[mod255(b[i1])],Logtable[mod255(a[i1])])]
dig_arrays:Debug:242. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(b[(i1)_])],Logtable[a[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,b,a,i1: rvu[i1] == Alogtable[add(Logtable[mod255(b[i1])],Logtable[a[i1]])]
dig_arrays:Debug:243. Nesting rvu[i1] == Alogtable[add(Logtable[b[(i1)_]],mod255(Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,b,mod255,a,i1: rvu[i1] == Alogtable[add(Logtable[b[i1]],mod255(Logtable[a[i1]]))]
dig_arrays:Debug:244. Nesting rvu[i1] == Alogtable[add(Logtable[b[(i1)_]],Logtable[mod255(a[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,b,mod255,a,i1: rvu[i1] == Alogtable[add(Logtable[b[i1]],Logtable[mod255(a[i1])])]
dig_arrays:Debug:245. Nesting rvu[i1] == Alogtable[add(Logtable[b[(i1)_]],Logtable[a[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,b,a,i1: rvu[i1] == Alogtable[add(Logtable[b[i1]],Logtable[a[i1]])]
dig_arrays:Debug:255. Nesting rvu[i1] == Alogtable[mod255(add(Logtable[b[(i1)_]],Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
dig_arrays:Info:Potential rels: 22
dig:Info:Refine 22 invs
refine:Debug:rfilter(|ps|=22, |tcs|=298)
dig_miscs:Warn:global name '_Logtable_0_add_1_b_0_mod255_0_Alogtable_0__i1' is not defined
dig_miscs:Warn:global name '_Logtable_0_add_1_b_0_mod255_0_Alogtable_0__i1' is not defined
dig_miscs:Warn:global name '_Logtable_0_add_1_b_0_mod255_0_Alogtable_0__i1' is not defined
refine:Debug:rfilter (before 22, after 1, diff 21)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
11.6976900101

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig:Info:Compute invs over 298 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 3 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=4, |tcs|=298
dig_arrays:Info:Select traces (note: |tcs|=|terms|=4)
dig_miscs:Debug:sample_traces: chose |tcs1|=4, |tcs2|=294 (attempted 4/298 tcs)
dig:Info:Compute invs over 4 tcs
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 4 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=294)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=297 (attempted 1/298 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7], Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]]
dig_miscs:Debug:gen_extfuns: 2 ext funs [add, mod255]
dig_miscs:Debug:gen_ef_data([add,mod255],|avals|=256)
dig_miscs:Debug:fun: add, fvals 511, idxs 65536
dig_miscs:Debug:fun: mod255, fvals 255, idxs 511
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [add,mod255,Logtable,Alogtable,rvu,a,b]: 67 expressions generated
dig_arrays:Info:Apply reachability analysis to 67 nestings to find valid ones
dig_arrays:Debug:57. Nesting rvu[i1] == Alogtable[mod255(add(Logtable[b[(i1)_]],Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=298)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
10.441683054

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig:Info:Compute invs over 298 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 3 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=4, |tcs|=298
dig_arrays:Info:Select traces (note: |tcs|=|terms|=4)
dig_miscs:Debug:sample_traces: chose |tcs1|=4, |tcs2|=294 (attempted 4/298 tcs)
dig:Info:Compute invs over 4 tcs
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 4 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=294)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=297 (attempted 1/298 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7], Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]]
dig_miscs:Debug:gen_extfuns: 2 ext funs [add, mod255]
dig_miscs:Debug:gen_ef_data([add,mod255],|avals|=256)
dig_miscs:Debug:fun: add, fvals 511, idxs 65536
dig_miscs:Debug:fun: mod255, fvals 255, idxs 511
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [add,mod255,Logtable,Alogtable,rvu,a,b]: 31 expressions generated
dig_arrays:Info:Apply reachability analysis to 31 nestings to find valid ones
dig_arrays:Debug:16. Nesting rvu[i1] == mod255(Alogtable[add(Logtable[b[(i1)_]],Logtable[a[(i1)_]])]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,mod255,Alogtable,add,Logtable,b,a,i1: rvu[i1] == mod255(Alogtable[add(Logtable[b[i1]],Logtable[a[i1]])])
dig_arrays:Debug:19. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[b[(i1)_]]),mod255(Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,b,a,i1: rvu[i1] == Alogtable[add(mod255(Logtable[b[i1]]),mod255(Logtable[a[i1]]))]
dig_arrays:Debug:20. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[b[(i1)_]]),Logtable[mod255(a[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,b,a,i1: rvu[i1] == Alogtable[add(mod255(Logtable[b[i1]]),Logtable[mod255(a[i1])])]
dig_arrays:Debug:21. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[b[(i1)_]]),Logtable[a[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,b,a,i1: rvu[i1] == Alogtable[add(mod255(Logtable[b[i1]]),Logtable[a[i1]])]
dig_arrays:Debug:22. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(b[(i1)_])],mod255(Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,b,a,i1: rvu[i1] == Alogtable[add(Logtable[mod255(b[i1])],mod255(Logtable[a[i1]]))]
dig_arrays:Debug:23. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(b[(i1)_])],Logtable[mod255(a[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,b,a,i1: rvu[i1] == Alogtable[add(Logtable[mod255(b[i1])],Logtable[mod255(a[i1])])]
dig_arrays:Debug:24. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(b[(i1)_])],Logtable[a[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,b,a,i1: rvu[i1] == Alogtable[add(Logtable[mod255(b[i1])],Logtable[a[i1]])]
dig_arrays:Debug:25. Nesting rvu[i1] == Alogtable[add(Logtable[b[(i1)_]],mod255(Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,b,mod255,a,i1: rvu[i1] == Alogtable[add(Logtable[b[i1]],mod255(Logtable[a[i1]]))]
dig_arrays:Debug:26. Nesting rvu[i1] == Alogtable[add(Logtable[b[(i1)_]],Logtable[mod255(a[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,b,mod255,a,i1: rvu[i1] == Alogtable[add(Logtable[b[i1]],Logtable[mod255(a[i1])])]
dig_arrays:Debug:27. Nesting rvu[i1] == Alogtable[add(Logtable[b[(i1)_]],Logtable[a[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,b,a,i1: rvu[i1] == Alogtable[add(Logtable[b[i1]],Logtable[a[i1]])]
dig_arrays:Debug:28. Nesting rvu[i1] == Alogtable[mod255(add(Logtable[b[(i1)_]],Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
dig_arrays:Info:Potential rels: 11
dig:Info:Refine 11 invs
refine:Debug:rfilter(|ps|=11, |tcs|=298)
refine:Debug:rfilter (before 11, after 1, diff 10)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
10.7236378193

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig:Info:Compute invs over 298 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 3 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=4, |tcs|=298
dig_arrays:Info:Select traces (note: |tcs|=|terms|=4)
dig_miscs:Debug:sample_traces: chose |tcs1|=4, |tcs2|=294 (attempted 4/298 tcs)
dig:Info:Compute invs over 4 tcs
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 4 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=294)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=297 (attempted 1/298 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7], Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]]
dig_miscs:Debug:gen_extfuns: 2 ext funs [add, mod255]
dig_miscs:Debug:gen_ef_data([add,mod255],|avals|=256)
dig_miscs:Debug:fun: add, fvals 511, idxs 65536
dig_miscs:Debug:fun: mod255, fvals 255, idxs 511
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [add,mod255,Logtable,Alogtable,rvu,a,b]: 213 expressions generated
dig_arrays:Info:Apply reachability analysis to 213 nestings to find valid ones
dig_arrays:Debug:163. Nesting rvu[i1] == mod255(Alogtable[add(Logtable[b[(i1)_]],Logtable[a[(i1)_]])]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,mod255,Alogtable,add,Logtable,b,a,i1: rvu[i1] == mod255(Alogtable[add(Logtable[b[i1]],Logtable[a[i1]])])
dig_arrays:Debug:186. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[b[(i1)_]]),mod255(Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,b,a,i1: rvu[i1] == Alogtable[add(mod255(Logtable[b[i1]]),mod255(Logtable[a[i1]]))]
dig_arrays:Debug:187. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[b[(i1)_]]),Logtable[mod255(a[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,b,a,i1: rvu[i1] == Alogtable[add(mod255(Logtable[b[i1]]),Logtable[mod255(a[i1])])]
dig_arrays:Debug:188. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[b[(i1)_]]),Logtable[a[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,b,a,i1: rvu[i1] == Alogtable[add(mod255(Logtable[b[i1]]),Logtable[a[i1]])]
dig_arrays:Debug:195. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(b[(i1)_])],mod255(Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,b,a,i1: rvu[i1] == Alogtable[add(Logtable[mod255(b[i1])],mod255(Logtable[a[i1]]))]
dig_arrays:Debug:196. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(b[(i1)_])],Logtable[mod255(a[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,b,a,i1: rvu[i1] == Alogtable[add(Logtable[mod255(b[i1])],Logtable[mod255(a[i1])])]
dig_arrays:Debug:197. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(b[(i1)_])],Logtable[a[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,b,a,i1: rvu[i1] == Alogtable[add(Logtable[mod255(b[i1])],Logtable[a[i1]])]
dig_arrays:Debug:198. Nesting rvu[i1] == Alogtable[add(Logtable[b[(i1)_]],mod255(Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,b,mod255,a,i1: rvu[i1] == Alogtable[add(Logtable[b[i1]],mod255(Logtable[a[i1]]))]
dig_arrays:Debug:199. Nesting rvu[i1] == Alogtable[add(Logtable[b[(i1)_]],Logtable[mod255(a[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,b,mod255,a,i1: rvu[i1] == Alogtable[add(Logtable[b[i1]],Logtable[mod255(a[i1])])]
dig_arrays:Debug:200. Nesting rvu[i1] == Alogtable[add(Logtable[b[(i1)_]],Logtable[a[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,b,a,i1: rvu[i1] == Alogtable[add(Logtable[b[i1]],Logtable[a[i1]])]
dig_arrays:Debug:210. Nesting rvu[i1] == Alogtable[mod255(add(Logtable[b[(i1)_]],Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
dig_arrays:Info:Potential rels: 11
dig:Info:Refine 11 invs
refine:Debug:rfilter(|ps|=11, |tcs|=298)
refine:Debug:rfilter (before 11, after 1, diff 10)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
11.1050169468

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig:Info:Compute invs over 298 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 3 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=4, |tcs|=298
dig_arrays:Info:Select traces (note: |tcs|=|terms|=4)
dig_miscs:Debug:sample_traces: chose |tcs1|=4, |tcs2|=294 (attempted 4/298 tcs)
dig:Info:Compute invs over 4 tcs
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 4 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=294)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=297 (attempted 1/298 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7], Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]]
dig_miscs:Debug:gen_extfuns: 2 ext funs [add, mod255]
dig_miscs:Debug:gen_ef_data([add,mod255],|avals|=256)
dig_miscs:Debug:fun: add, fvals 511, idxs 65536
dig_miscs:Debug:fun: mod255, fvals 255, idxs 511
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [add,mod255,Logtable,Alogtable,rvu,a,b]: 664 expressions generated
dig_arrays:Info:Apply reachability analysis to 664 nestings to find valid ones
dig_arrays:Debug:649. Nesting rvu[i1] == Alogtable[mod255(add(Logtable[a[(i1)_]],Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=298)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
12.59146595

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig:Info:Compute invs over 298 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 3 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=4, |tcs|=298
dig_arrays:Info:Select traces (note: |tcs|=|terms|=4)
dig_miscs:Debug:sample_traces: chose |tcs1|=4, |tcs2|=294 (attempted 4/298 tcs)
dig:Info:Compute invs over 4 tcs
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 4 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=294)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=297 (attempted 1/298 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7], Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]]
dig_miscs:Debug:gen_extfuns: 2 ext funs [add, mod255]
dig_miscs:Debug:gen_ef_data([add,mod255],|avals|=256)
dig_miscs:Debug:fun: add, fvals 511, idxs 65536
dig_miscs:Debug:fun: mod255, fvals 255, idxs 511
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [add,mod255,Logtable,Alogtable,rvu,a,b]: 149 expressions generated
dig_arrays:Info:Apply reachability analysis to 149 nestings to find valid ones
dig_arrays:Debug:132. Nesting rvu[i1] == mod255(Alogtable[add(Logtable[b[(i1)_]],Logtable[a[(i1)_]])]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,mod255,Alogtable,add,Logtable,b,a,i1: rvu[i1] == mod255(Alogtable[add(Logtable[b[i1]],Logtable[a[i1]])])
dig_arrays:Debug:136. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[b[(i1)_]]),mod255(Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,b,a,i1: rvu[i1] == Alogtable[add(mod255(Logtable[b[i1]]),mod255(Logtable[a[i1]]))]
dig_arrays:Debug:137. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[b[(i1)_]]),Logtable[mod255(a[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,b,a,i1: rvu[i1] == Alogtable[add(mod255(Logtable[b[i1]]),Logtable[mod255(a[i1])])]
dig_arrays:Debug:138. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[b[(i1)_]]),Logtable[a[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,b,a,i1: rvu[i1] == Alogtable[add(mod255(Logtable[b[i1]]),Logtable[a[i1]])]
dig_arrays:Debug:139. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(b[(i1)_])],mod255(Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,b,a,i1: rvu[i1] == Alogtable[add(Logtable[mod255(b[i1])],mod255(Logtable[a[i1]]))]
dig_arrays:Debug:140. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(b[(i1)_])],Logtable[mod255(a[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,b,a,i1: rvu[i1] == Alogtable[add(Logtable[mod255(b[i1])],Logtable[mod255(a[i1])])]
dig_arrays:Debug:141. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(b[(i1)_])],Logtable[a[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,b,a,i1: rvu[i1] == Alogtable[add(Logtable[mod255(b[i1])],Logtable[a[i1]])]
dig_arrays:Debug:142. Nesting rvu[i1] == Alogtable[add(Logtable[b[(i1)_]],mod255(Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,b,mod255,a,i1: rvu[i1] == Alogtable[add(Logtable[b[i1]],mod255(Logtable[a[i1]]))]
dig_arrays:Debug:143. Nesting rvu[i1] == Alogtable[add(Logtable[b[(i1)_]],Logtable[mod255(a[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,b,mod255,a,i1: rvu[i1] == Alogtable[add(Logtable[b[i1]],Logtable[mod255(a[i1])])]
dig_arrays:Debug:144. Nesting rvu[i1] == Alogtable[add(Logtable[b[(i1)_]],Logtable[a[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,b,a,i1: rvu[i1] == Alogtable[add(Logtable[b[i1]],Logtable[a[i1]])]
dig_arrays:Debug:145. Nesting rvu[i1] == Alogtable[mod255(add(Logtable[b[(i1)_]],Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
dig_arrays:Info:Potential rels: 11
dig:Info:Refine 11 invs
refine:Debug:rfilter(|ps|=11, |tcs|=298)
refine:Debug:rfilter (before 11, after 1, diff 10)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
11.0789518356

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig:Info:Compute invs over 298 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 3 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=4, |tcs|=298
dig_arrays:Info:Select traces (note: |tcs|=|terms|=4)
dig_miscs:Debug:sample_traces: chose |tcs1|=4, |tcs2|=294 (attempted 4/298 tcs)
dig:Info:Compute invs over 4 tcs
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 4 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=294)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=297 (attempted 1/298 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7], Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]]
dig_miscs:Debug:gen_extfuns: 2 ext funs [add, mod255]
dig_miscs:Debug:gen_ef_data([add,mod255],|avals|=256)
dig_miscs:Debug:fun: add, fvals 511, idxs 65536
dig_miscs:Debug:fun: mod255, fvals 255, idxs 511
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [add,mod255,Logtable,Alogtable,rvu,a,b]: 51 expressions generated
dig_arrays:Info:Apply reachability analysis to 51 nestings to find valid ones
dig_arrays:Debug:42. Nesting rvu[i1] == Alogtable[mod255(add(Logtable[a[(i1)_]],Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=298)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
10.5825099945

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig:Info:Compute invs over 298 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 3 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=4, |tcs|=298
dig_arrays:Info:Select traces (note: |tcs|=|terms|=4)
dig_miscs:Debug:sample_traces: chose |tcs1|=4, |tcs2|=294 (attempted 4/298 tcs)
dig:Info:Compute invs over 4 tcs
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 4 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=294)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=297 (attempted 1/298 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7], Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]]
dig_miscs:Debug:gen_extfuns: 2 ext funs [add, mod255]
dig_miscs:Debug:gen_ef_data([add,mod255],|avals|=256)
dig_miscs:Debug:fun: add, fvals 511, idxs 65536
dig_miscs:Debug:fun: mod255, fvals 255, idxs 511
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [add,mod255,Logtable,Alogtable,rvu,a,b]: 892 expressions generated
dig_arrays:Info:Apply reachability analysis to 892 nestings to find valid ones
dig_arrays:Debug:838. Nesting rvu[i1] == mod255(Alogtable[add(Logtable[a[(i1)_]],Logtable[b[(i1)_]])]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,mod255,Alogtable,add,Logtable,a,b,i1: rvu[i1] == mod255(Alogtable[add(Logtable[a[i1]],Logtable[b[i1]])])
dig_arrays:Debug:859. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[a[(i1)_]]),mod255(Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,a,b,i1: rvu[i1] == Alogtable[add(mod255(Logtable[a[i1]]),mod255(Logtable[b[i1]]))]
dig_arrays:Debug:860. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[a[(i1)_]]),Logtable[mod255(b[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,a,b,i1: rvu[i1] == Alogtable[add(mod255(Logtable[a[i1]]),Logtable[mod255(b[i1])])]
dig_arrays:Debug:861. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[a[(i1)_]]),Logtable[b[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,a,b,i1: rvu[i1] == Alogtable[add(mod255(Logtable[a[i1]]),Logtable[b[i1]])]
dig_arrays:Debug:868. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(a[(i1)_])],mod255(Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,a,b,i1: rvu[i1] == Alogtable[add(Logtable[mod255(a[i1])],mod255(Logtable[b[i1]]))]
dig_arrays:Debug:869. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(a[(i1)_])],Logtable[mod255(b[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,a,b,i1: rvu[i1] == Alogtable[add(Logtable[mod255(a[i1])],Logtable[mod255(b[i1])])]
dig_arrays:Debug:870. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(a[(i1)_])],Logtable[b[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,a,b,i1: rvu[i1] == Alogtable[add(Logtable[mod255(a[i1])],Logtable[b[i1]])]
dig_arrays:Debug:871. Nesting rvu[i1] == Alogtable[add(Logtable[a[(i1)_]],mod255(Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,a,mod255,b,i1: rvu[i1] == Alogtable[add(Logtable[a[i1]],mod255(Logtable[b[i1]]))]
dig_arrays:Debug:872. Nesting rvu[i1] == Alogtable[add(Logtable[a[(i1)_]],Logtable[mod255(b[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,a,mod255,b,i1: rvu[i1] == Alogtable[add(Logtable[a[i1]],Logtable[mod255(b[i1])])]
dig_arrays:Debug:873. Nesting rvu[i1] == Alogtable[add(Logtable[a[(i1)_]],Logtable[b[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,a,b,i1: rvu[i1] == Alogtable[add(Logtable[a[i1]],Logtable[b[i1]])]
dig_arrays:Debug:883. Nesting rvu[i1] == Alogtable[mod255(add(Logtable[a[(i1)_]],Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
dig_arrays:Info:Potential rels: 11
dig:Info:Refine 11 invs
refine:Debug:rfilter(|ps|=11, |tcs|=298)
refine:Debug:rfilter (before 11, after 1, diff 10)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
13.3948309422

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig:Info:Compute invs over 298 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 3 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=4, |tcs|=298
dig_arrays:Info:Select traces (note: |tcs|=|terms|=4)
dig_miscs:Debug:sample_traces: chose |tcs1|=4, |tcs2|=294 (attempted 4/298 tcs)
dig:Info:Compute invs over 4 tcs
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 4 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=294)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=297 (attempted 1/298 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7], Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]]
dig_miscs:Debug:gen_extfuns: 2 ext funs [add, mod255]
dig_miscs:Debug:gen_ef_data([add,mod255],|avals|=256)
dig_miscs:Debug:fun: add, fvals 511, idxs 65536
dig_miscs:Debug:fun: mod255, fvals 255, idxs 511
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [add,mod255,Logtable,Alogtable,rvu,a,b]: 49 expressions generated
dig_arrays:Info:Apply reachability analysis to 49 nestings to find valid ones
dig_arrays:Debug:43. Nesting rvu[i1] == Alogtable[mod255(add(Logtable[b[(i1)_]],Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=298)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
10.4729449749

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig:Info:Compute invs over 298 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 3 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=4, |tcs|=298
dig_arrays:Info:Select traces (note: |tcs|=|terms|=4)
dig_miscs:Debug:sample_traces: chose |tcs1|=4, |tcs2|=294 (attempted 4/298 tcs)
dig:Info:Compute invs over 4 tcs
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 4 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=294)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=297 (attempted 1/298 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7], Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]]
dig_miscs:Debug:gen_extfuns: 2 ext funs [add, mod255]
dig_miscs:Debug:gen_ef_data([add,mod255],|avals|=256)
dig_miscs:Debug:fun: add, fvals 511, idxs 65536
dig_miscs:Debug:fun: mod255, fvals 255, idxs 511
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [add,mod255,Logtable,Alogtable,rvu,a,b]: 104 expressions generated
dig_arrays:Info:Apply reachability analysis to 104 nestings to find valid ones
dig_arrays:Debug:20. Nesting rvu[i1] == mod255(Alogtable[add(Logtable[b[(i1)_]],Logtable[a[(i1)_]])]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,mod255,Alogtable,add,Logtable,b,a,i1: rvu[i1] == mod255(Alogtable[add(Logtable[b[i1]],Logtable[a[i1]])])
dig_arrays:Debug:31. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[b[(i1)_]]),mod255(Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,b,a,i1: rvu[i1] == Alogtable[add(mod255(Logtable[b[i1]]),mod255(Logtable[a[i1]]))]
dig_arrays:Debug:34. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[b[(i1)_]]),Logtable[mod255(a[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,b,a,i1: rvu[i1] == Alogtable[add(mod255(Logtable[b[i1]]),Logtable[mod255(a[i1])])]
dig_arrays:Debug:35. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[b[(i1)_]]),Logtable[a[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,b,a,i1: rvu[i1] == Alogtable[add(mod255(Logtable[b[i1]]),Logtable[a[i1]])]
dig_arrays:Debug:55. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(b[(i1)_])],mod255(Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,b,a,i1: rvu[i1] == Alogtable[add(Logtable[mod255(b[i1])],mod255(Logtable[a[i1]]))]
dig_arrays:Debug:58. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(b[(i1)_])],Logtable[mod255(a[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,b,a,i1: rvu[i1] == Alogtable[add(Logtable[mod255(b[i1])],Logtable[mod255(a[i1])])]
dig_arrays:Debug:59. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(b[(i1)_])],Logtable[a[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,b,a,i1: rvu[i1] == Alogtable[add(Logtable[mod255(b[i1])],Logtable[a[i1]])]
dig_arrays:Debug:63. Nesting rvu[i1] == Alogtable[add(Logtable[b[(i1)_]],mod255(Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,b,mod255,a,i1: rvu[i1] == Alogtable[add(Logtable[b[i1]],mod255(Logtable[a[i1]]))]
dig_arrays:Debug:66. Nesting rvu[i1] == Alogtable[add(Logtable[b[(i1)_]],Logtable[mod255(a[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,b,mod255,a,i1: rvu[i1] == Alogtable[add(Logtable[b[i1]],Logtable[mod255(a[i1])])]
dig_arrays:Debug:67. Nesting rvu[i1] == Alogtable[add(Logtable[b[(i1)_]],Logtable[a[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,b,a,i1: rvu[i1] == Alogtable[add(Logtable[b[i1]],Logtable[a[i1]])]
dig_arrays:Debug:95. Nesting rvu[i1] == Alogtable[mod255(add(Logtable[b[(i1)_]],Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
dig_arrays:Info:Potential rels: 11
dig:Info:Refine 11 invs
refine:Debug:rfilter(|ps|=11, |tcs|=298)
refine:Debug:rfilter (before 11, after 1, diff 10)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
10.5464401245

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig:Info:Compute invs over 298 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 3 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=4, |tcs|=298
dig_arrays:Info:Select traces (note: |tcs|=|terms|=4)
dig_miscs:Debug:sample_traces: chose |tcs1|=4, |tcs2|=294 (attempted 4/298 tcs)
dig:Info:Compute invs over 4 tcs
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 4 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=294)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=297 (attempted 1/298 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7], Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]]
dig_miscs:Debug:gen_extfuns: 2 ext funs [add, mod255]
dig_miscs:Debug:gen_ef_data([add,mod255],|avals|=256)
dig_miscs:Debug:fun: add, fvals 511, idxs 65536
dig_miscs:Debug:fun: mod255, fvals 255, idxs 511
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [add,mod255,Logtable,Alogtable,rvu,a,b]: 57 expressions generated
dig_arrays:Info:Apply reachability analysis to 57 nestings to find valid ones
dig_arrays:Debug:47. Nesting rvu[i1] == Alogtable[mod255(add(Logtable[b[(i1)_]],Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=298)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
10.4793901443

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig:Info:Compute invs over 298 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 3 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=4, |tcs|=298
dig_arrays:Info:Select traces (note: |tcs|=|terms|=4)
dig_miscs:Debug:sample_traces: chose |tcs1|=4, |tcs2|=294 (attempted 4/298 tcs)
dig:Info:Compute invs over 4 tcs
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 4 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=294)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=297 (attempted 1/298 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7], Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]]
dig_miscs:Debug:gen_extfuns: 2 ext funs [add, mod255]
dig_miscs:Debug:gen_ef_data([add,mod255],|avals|=256)
dig_miscs:Debug:fun: add, fvals 511, idxs 65536
dig_miscs:Debug:fun: mod255, fvals 255, idxs 511
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [add,mod255,Logtable,Alogtable,rvu,a,b]: 241 expressions generated
dig_arrays:Info:Apply reachability analysis to 241 nestings to find valid ones
dig_arrays:Debug:226. Nesting rvu[i1] == mod255(Alogtable[add(Logtable[a[(i1)_]],Logtable[b[(i1)_]])]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,mod255,Alogtable,add,Logtable,a,b,i1: rvu[i1] == mod255(Alogtable[add(Logtable[a[i1]],Logtable[b[i1]])])
dig_arrays:Debug:229. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[a[(i1)_]]),mod255(Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,a,b,i1: rvu[i1] == Alogtable[add(mod255(Logtable[a[i1]]),mod255(Logtable[b[i1]]))]
dig_arrays:Debug:230. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[a[(i1)_]]),Logtable[mod255(b[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,a,b,i1: rvu[i1] == Alogtable[add(mod255(Logtable[a[i1]]),Logtable[mod255(b[i1])])]
dig_arrays:Debug:231. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[a[(i1)_]]),Logtable[b[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,a,b,i1: rvu[i1] == Alogtable[add(mod255(Logtable[a[i1]]),Logtable[b[i1]])]
dig_arrays:Debug:232. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(a[(i1)_])],mod255(Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,a,b,i1: rvu[i1] == Alogtable[add(Logtable[mod255(a[i1])],mod255(Logtable[b[i1]]))]
dig_arrays:Debug:233. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(a[(i1)_])],Logtable[mod255(b[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,a,b,i1: rvu[i1] == Alogtable[add(Logtable[mod255(a[i1])],Logtable[mod255(b[i1])])]
dig_arrays:Debug:234. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(a[(i1)_])],Logtable[b[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,a,b,i1: rvu[i1] == Alogtable[add(Logtable[mod255(a[i1])],Logtable[b[i1]])]
dig_arrays:Debug:235. Nesting rvu[i1] == Alogtable[add(Logtable[a[(i1)_]],mod255(Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,a,mod255,b,i1: rvu[i1] == Alogtable[add(Logtable[a[i1]],mod255(Logtable[b[i1]]))]
dig_arrays:Debug:236. Nesting rvu[i1] == Alogtable[add(Logtable[a[(i1)_]],Logtable[mod255(b[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,a,mod255,b,i1: rvu[i1] == Alogtable[add(Logtable[a[i1]],Logtable[mod255(b[i1])])]
dig_arrays:Debug:237. Nesting rvu[i1] == Alogtable[add(Logtable[a[(i1)_]],Logtable[b[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,a,b,i1: rvu[i1] == Alogtable[add(Logtable[a[i1]],Logtable[b[i1]])]
dig_arrays:Debug:238. Nesting rvu[i1] == Alogtable[mod255(add(Logtable[a[(i1)_]],Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
dig_arrays:Info:Potential rels: 11
dig:Info:Refine 11 invs
refine:Debug:rfilter(|ps|=11, |tcs|=298)
refine:Debug:rfilter (before 11, after 1, diff 10)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
11.5222921371

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig:Info:Compute invs over 298 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 3 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=4, |tcs|=298
dig_arrays:Info:Select traces (note: |tcs|=|terms|=4)
dig_miscs:Debug:sample_traces: chose |tcs1|=4, |tcs2|=294 (attempted 4/298 tcs)
dig:Info:Compute invs over 4 tcs
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 4 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=294)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=297 (attempted 1/298 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7], Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]]
dig_miscs:Debug:gen_extfuns: 2 ext funs [add, mod255]
dig_miscs:Debug:gen_ef_data([add,mod255],|avals|=256)
dig_miscs:Debug:fun: add, fvals 511, idxs 65536
dig_miscs:Debug:fun: mod255, fvals 255, idxs 511
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [add,mod255,Logtable,Alogtable,rvu,a,b]: 88 expressions generated
dig_arrays:Info:Apply reachability analysis to 88 nestings to find valid ones
dig_arrays:Debug:78. Nesting rvu[i1] == Alogtable[mod255(add(Logtable[b[(i1)_]],Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=298)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
10.4360728264

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig:Info:Compute invs over 298 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 3 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=4, |tcs|=298
dig_arrays:Info:Select traces (note: |tcs|=|terms|=4)
dig_miscs:Debug:sample_traces: chose |tcs1|=4, |tcs2|=294 (attempted 4/298 tcs)
dig:Info:Compute invs over 4 tcs
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 4 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=294)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=297 (attempted 1/298 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7], Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]]
dig_miscs:Debug:gen_extfuns: 2 ext funs [add, mod255]
dig_miscs:Debug:gen_ef_data([add,mod255],|avals|=256)
dig_miscs:Debug:fun: add, fvals 511, idxs 65536
dig_miscs:Debug:fun: mod255, fvals 255, idxs 511
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [add,mod255,Logtable,Alogtable,rvu,a,b]: 48 expressions generated
dig_arrays:Info:Apply reachability analysis to 48 nestings to find valid ones
dig_arrays:Debug:16. Nesting rvu[i1] == mod255(Alogtable[add(Logtable[a[(i1)_]],Logtable[b[(i1)_]])]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,mod255,Alogtable,add,Logtable,a,b,i1: rvu[i1] == mod255(Alogtable[add(Logtable[a[i1]],Logtable[b[i1]])])
dig_arrays:Debug:21. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[a[(i1)_]]),mod255(Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,a,b,i1: rvu[i1] == Alogtable[add(mod255(Logtable[a[i1]]),mod255(Logtable[b[i1]]))]
dig_arrays:Debug:24. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[a[(i1)_]]),Logtable[mod255(b[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,a,b,i1: rvu[i1] == Alogtable[add(mod255(Logtable[a[i1]]),Logtable[mod255(b[i1])])]
dig_arrays:Debug:25. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[a[(i1)_]]),Logtable[b[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,a,b,i1: rvu[i1] == Alogtable[add(mod255(Logtable[a[i1]]),Logtable[b[i1]])]
dig_arrays:Debug:29. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(a[(i1)_])],mod255(Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,a,b,i1: rvu[i1] == Alogtable[add(Logtable[mod255(a[i1])],mod255(Logtable[b[i1]]))]
dig_arrays:Debug:32. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(a[(i1)_])],Logtable[mod255(b[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,a,b,i1: rvu[i1] == Alogtable[add(Logtable[mod255(a[i1])],Logtable[mod255(b[i1])])]
dig_arrays:Debug:33. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(a[(i1)_])],Logtable[b[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,a,b,i1: rvu[i1] == Alogtable[add(Logtable[mod255(a[i1])],Logtable[b[i1]])]
dig_arrays:Debug:37. Nesting rvu[i1] == Alogtable[add(Logtable[a[(i1)_]],mod255(Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,a,mod255,b,i1: rvu[i1] == Alogtable[add(Logtable[a[i1]],mod255(Logtable[b[i1]]))]
dig_arrays:Debug:40. Nesting rvu[i1] == Alogtable[add(Logtable[a[(i1)_]],Logtable[mod255(b[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,a,mod255,b,i1: rvu[i1] == Alogtable[add(Logtable[a[i1]],Logtable[mod255(b[i1])])]
dig_arrays:Debug:41. Nesting rvu[i1] == Alogtable[add(Logtable[a[(i1)_]],Logtable[b[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,a,b,i1: rvu[i1] == Alogtable[add(Logtable[a[i1]],Logtable[b[i1]])]
dig_arrays:Debug:45. Nesting rvu[i1] == Alogtable[mod255(add(Logtable[a[(i1)_]],Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
dig_arrays:Info:Potential rels: 11
dig:Info:Refine 11 invs
refine:Debug:rfilter(|ps|=11, |tcs|=298)
refine:Debug:rfilter (before 11, after 1, diff 10)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
10.3254630566

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig:Info:Compute invs over 298 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 3 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=4, |tcs|=298
dig_arrays:Info:Select traces (note: |tcs|=|terms|=4)
dig_miscs:Debug:sample_traces: chose |tcs1|=4, |tcs2|=294 (attempted 4/298 tcs)
dig:Info:Compute invs over 4 tcs
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 4 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=294)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=297 (attempted 1/298 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7], Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]]
dig_miscs:Debug:gen_extfuns: 2 ext funs [add, mod255]
dig_miscs:Debug:gen_ef_data([add,mod255],|avals|=256)
dig_miscs:Debug:fun: add, fvals 511, idxs 65536
dig_miscs:Debug:fun: mod255, fvals 255, idxs 511
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [add,mod255,Logtable,Alogtable,rvu,a,b]: 351 expressions generated
dig_arrays:Info:Apply reachability analysis to 351 nestings to find valid ones
dig_arrays:Debug:265. Nesting rvu[i1] == mod255(Alogtable[add(Logtable[a[(i1)_]],Logtable[b[(i1)_]])]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,mod255,Alogtable,add,Logtable,a,b,i1: rvu[i1] == mod255(Alogtable[add(Logtable[a[i1]],Logtable[b[i1]])])
dig_arrays:Debug:277. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[a[(i1)_]]),mod255(Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,a,b,i1: rvu[i1] == Alogtable[add(mod255(Logtable[a[i1]]),mod255(Logtable[b[i1]]))]
dig_arrays:Debug:280. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[a[(i1)_]]),Logtable[mod255(b[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,a,b,i1: rvu[i1] == Alogtable[add(mod255(Logtable[a[i1]]),Logtable[mod255(b[i1])])]
dig_arrays:Debug:281. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[a[(i1)_]]),Logtable[b[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,a,b,i1: rvu[i1] == Alogtable[add(mod255(Logtable[a[i1]]),Logtable[b[i1]])]
dig_arrays:Debug:301. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(a[(i1)_])],mod255(Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,a,b,i1: rvu[i1] == Alogtable[add(Logtable[mod255(a[i1])],mod255(Logtable[b[i1]]))]
dig_arrays:Debug:304. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(a[(i1)_])],Logtable[mod255(b[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,a,b,i1: rvu[i1] == Alogtable[add(Logtable[mod255(a[i1])],Logtable[mod255(b[i1])])]
dig_arrays:Debug:305. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(a[(i1)_])],Logtable[b[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,a,b,i1: rvu[i1] == Alogtable[add(Logtable[mod255(a[i1])],Logtable[b[i1]])]
dig_arrays:Debug:309. Nesting rvu[i1] == Alogtable[add(Logtable[a[(i1)_]],mod255(Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,a,mod255,b,i1: rvu[i1] == Alogtable[add(Logtable[a[i1]],mod255(Logtable[b[i1]]))]
dig_arrays:Debug:312. Nesting rvu[i1] == Alogtable[add(Logtable[a[(i1)_]],Logtable[mod255(b[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,a,mod255,b,i1: rvu[i1] == Alogtable[add(Logtable[a[i1]],Logtable[mod255(b[i1])])]
dig_arrays:Debug:313. Nesting rvu[i1] == Alogtable[add(Logtable[a[(i1)_]],Logtable[b[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,a,b,i1: rvu[i1] == Alogtable[add(Logtable[a[i1]],Logtable[b[i1]])]
dig_arrays:Debug:341. Nesting rvu[i1] == Alogtable[mod255(add(Logtable[a[(i1)_]],Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
dig_arrays:Info:Potential rels: 11
dig:Info:Refine 11 invs
refine:Debug:rfilter(|ps|=11, |tcs|=298)
refine:Debug:rfilter (before 11, after 1, diff 10)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
11.4337620735

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig:Info:Compute invs over 298 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 3 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=4, |tcs|=298
dig_arrays:Info:Select traces (note: |tcs|=|terms|=4)
dig_miscs:Debug:sample_traces: chose |tcs1|=4, |tcs2|=294 (attempted 4/298 tcs)
dig:Info:Compute invs over 4 tcs
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 4 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=294)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=297 (attempted 1/298 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7], Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]]
dig_miscs:Debug:gen_extfuns: 2 ext funs [add, mod255]
dig_miscs:Debug:gen_ef_data([add,mod255],|avals|=256)
dig_miscs:Debug:fun: add, fvals 511, idxs 65536
dig_miscs:Debug:fun: mod255, fvals 255, idxs 511
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [add,mod255,Logtable,Alogtable,rvu,a,b]: 41 expressions generated
dig_arrays:Info:Apply reachability analysis to 41 nestings to find valid ones
dig_arrays:Debug:32. Nesting rvu[i1] == Alogtable[mod255(add(Logtable[b[(i1)_]],Logtable[a[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=298)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
10.434746027

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig:Info:Compute invs over 298 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 3 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=4, |tcs|=298
dig_arrays:Info:Select traces (note: |tcs|=|terms|=4)
dig_miscs:Debug:sample_traces: chose |tcs1|=4, |tcs2|=294 (attempted 4/298 tcs)
dig:Info:Compute invs over 4 tcs
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 4 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=294)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=297 (attempted 1/298 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7], Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]]
dig_miscs:Debug:gen_extfuns: 2 ext funs [add, mod255]
dig_miscs:Debug:gen_ef_data([add,mod255],|avals|=256)
dig_miscs:Debug:fun: add, fvals 511, idxs 65536
dig_miscs:Debug:fun: mod255, fvals 255, idxs 511
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [add,mod255,Logtable,Alogtable,rvu,a,b]: 47 expressions generated
dig_arrays:Info:Apply reachability analysis to 47 nestings to find valid ones
dig_arrays:Debug:28. Nesting rvu[i1] == mod255(Alogtable[add(Logtable[a[(i1)_]],Logtable[b[(i1)_]])]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,mod255,Alogtable,add,Logtable,a,b,i1: rvu[i1] == mod255(Alogtable[add(Logtable[a[i1]],Logtable[b[i1]])])
dig_arrays:Debug:33. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[a[(i1)_]]),mod255(Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,a,b,i1: rvu[i1] == Alogtable[add(mod255(Logtable[a[i1]]),mod255(Logtable[b[i1]]))]
dig_arrays:Debug:34. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[a[(i1)_]]),Logtable[mod255(b[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,a,b,i1: rvu[i1] == Alogtable[add(mod255(Logtable[a[i1]]),Logtable[mod255(b[i1])])]
dig_arrays:Debug:35. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[a[(i1)_]]),Logtable[b[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,a,b,i1: rvu[i1] == Alogtable[add(mod255(Logtable[a[i1]]),Logtable[b[i1]])]
dig_arrays:Debug:36. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(a[(i1)_])],mod255(Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,a,b,i1: rvu[i1] == Alogtable[add(Logtable[mod255(a[i1])],mod255(Logtable[b[i1]]))]
dig_arrays:Debug:37. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(a[(i1)_])],Logtable[mod255(b[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,a,b,i1: rvu[i1] == Alogtable[add(Logtable[mod255(a[i1])],Logtable[mod255(b[i1])])]
dig_arrays:Debug:38. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(a[(i1)_])],Logtable[b[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,a,b,i1: rvu[i1] == Alogtable[add(Logtable[mod255(a[i1])],Logtable[b[i1]])]
dig_arrays:Debug:39. Nesting rvu[i1] == Alogtable[add(Logtable[a[(i1)_]],mod255(Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,a,mod255,b,i1: rvu[i1] == Alogtable[add(Logtable[a[i1]],mod255(Logtable[b[i1]]))]
dig_arrays:Debug:40. Nesting rvu[i1] == Alogtable[add(Logtable[a[(i1)_]],Logtable[mod255(b[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,a,mod255,b,i1: rvu[i1] == Alogtable[add(Logtable[a[i1]],Logtable[mod255(b[i1])])]
dig_arrays:Debug:41. Nesting rvu[i1] == Alogtable[add(Logtable[a[(i1)_]],Logtable[b[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,a,b,i1: rvu[i1] == Alogtable[add(Logtable[a[i1]],Logtable[b[i1]])]
dig_arrays:Debug:42. Nesting rvu[i1] == Alogtable[mod255(add(Logtable[a[(i1)_]],Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
dig_arrays:Info:Potential rels: 11
dig:Info:Refine 11 invs
refine:Debug:rfilter(|ps|=11, |tcs|=298)
refine:Debug:rfilter (before 11, after 1, diff 10)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
10.5821640491

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig:Info:Compute invs over 298 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 3 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=4, |tcs|=298
dig_arrays:Info:Select traces (note: |tcs|=|terms|=4)
dig_miscs:Debug:sample_traces: chose |tcs1|=4, |tcs2|=294 (attempted 4/298 tcs)
dig:Info:Compute invs over 4 tcs
dig_miscs:Debug:Create equations from 4 traces
dig_miscs:Debug:Solve 4 (uniq) eqts for 4 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=294)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=298
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=297 (attempted 1/298 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extvar: 2 ext funs [Logtable [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7], Alogtable [ 1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246, 1]]
dig_miscs:Debug:gen_extfuns: 2 ext funs [add, mod255]
dig_miscs:Debug:gen_ef_data([add,mod255],|avals|=256)
dig_miscs:Debug:fun: add, fvals 511, idxs 65536
dig_miscs:Debug:fun: mod255, fvals 255, idxs 511
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [add,mod255,Logtable,Alogtable,rvu,a,b]: 46 expressions generated
dig_arrays:Info:Apply reachability analysis to 46 nestings to find valid ones
dig_arrays:Debug:16. Nesting rvu[i1] == mod255(Alogtable[add(Logtable[a[(i1)_]],Logtable[b[(i1)_]])]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,mod255,Alogtable,add,Logtable,a,b,i1: rvu[i1] == mod255(Alogtable[add(Logtable[a[i1]],Logtable[b[i1]])])
dig_arrays:Debug:19. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[a[(i1)_]]),mod255(Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,a,b,i1: rvu[i1] == Alogtable[add(mod255(Logtable[a[i1]]),mod255(Logtable[b[i1]]))]
dig_arrays:Debug:22. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[a[(i1)_]]),Logtable[mod255(b[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,a,b,i1: rvu[i1] == Alogtable[add(mod255(Logtable[a[i1]]),Logtable[mod255(b[i1])])]
dig_arrays:Debug:23. Nesting rvu[i1] == Alogtable[add(mod255(Logtable[a[(i1)_]]),Logtable[b[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,mod255,Logtable,a,b,i1: rvu[i1] == Alogtable[add(mod255(Logtable[a[i1]]),Logtable[b[i1]])]
dig_arrays:Debug:27. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(a[(i1)_])],mod255(Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,a,b,i1: rvu[i1] == Alogtable[add(Logtable[mod255(a[i1])],mod255(Logtable[b[i1]]))]
dig_arrays:Debug:30. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(a[(i1)_])],Logtable[mod255(b[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,a,b,i1: rvu[i1] == Alogtable[add(Logtable[mod255(a[i1])],Logtable[mod255(b[i1])])]
dig_arrays:Debug:31. Nesting rvu[i1] == Alogtable[add(Logtable[mod255(a[(i1)_])],Logtable[b[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,mod255,a,b,i1: rvu[i1] == Alogtable[add(Logtable[mod255(a[i1])],Logtable[b[i1]])]
dig_arrays:Debug:35. Nesting rvu[i1] == Alogtable[add(Logtable[a[(i1)_]],mod255(Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,a,mod255,b,i1: rvu[i1] == Alogtable[add(Logtable[a[i1]],mod255(Logtable[b[i1]]))]
dig_arrays:Debug:38. Nesting rvu[i1] == Alogtable[add(Logtable[a[(i1)_]],Logtable[mod255(b[(i1)_])])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,a,mod255,b,i1: rvu[i1] == Alogtable[add(Logtable[a[i1]],Logtable[mod255(b[i1])])]
dig_arrays:Debug:39. Nesting rvu[i1] == Alogtable[add(Logtable[a[(i1)_]],Logtable[b[(i1)_]])] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,add,Logtable,a,b,i1: rvu[i1] == Alogtable[add(Logtable[a[i1]],Logtable[b[i1]])]
dig_arrays:Debug:43. Nesting rvu[i1] == Alogtable[mod255(add(Logtable[a[(i1)_]],Logtable[b[(i1)_]]))] has 1 rel(s)
dig_arrays:Debug:lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
dig_arrays:Info:Potential rels: 11
dig:Info:Refine 11 invs
refine:Debug:rfilter(|ps|=11, |tcs|=298)
refine:Debug:rfilter (before 11, after 1, diff 10)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
10.2226221561


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/mul.l0.tcs'
Expect (1): r[i] = Alogtable(mod255(add(Logtable(a[i]),Logtable(b[i]))))
* Run 0, time 11.0301229954, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 1, time 10.1169178486, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 2, time 11.6976900101, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 3, time 10.441683054, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 4, time 10.7236378193, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 5, time 11.1050169468, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 6, time 12.59146595, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
* Run 7, time 11.0789518356, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 8, time 10.5825099945, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
* Run 9, time 13.3948309422, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
* Run 10, time 10.4729449749, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 11, time 10.5464401245, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 12, time 10.4793901443, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 13, time 11.5222921371, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
* Run 14, time 10.4360728264, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 15, time 10.3254630566, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
* Run 16, time 11.4337620735, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
* Run 17, time 10.434746027, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 18, time 10.5821640491, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
* Run 19, time 10.2226221561, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
TIME AVG 11.0 (../invgen/Traces/AES_tosem/multilocs/l0/mul.l0.tcs)


***** (24) Generate invs from file 'word_xor.l0.tcs' *****

dig:Info:2013-06-25 02:59:11.123631, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [a, b, rvu]
2. xinfo: 
 0. All: ['a', 'b', 'rvu']
 1. Assume: []
 2. Const: []
 3. Expect: ['r[i] = xor(a[i],b[i])']
 4. ExtFun: ['xor']
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
reset deg from 8 to 7
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/word_xor.l0.tcs", |vs|=3, deg=7, |terms|=120

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 12 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=13, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=13)
dig_miscs:Debug:sample_traces: chose |tcs1|=13, |tcs2|=287 (attempted 13/300 tcs)
dig:Info:Compute invs over 13 tcs
dig_miscs:Debug:Create equations from 13 traces
dig_miscs:Debug:Solve 13 (uniq) eqts for 13 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=287)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=11)
dig_miscs:Debug:fun: xor, fvals 48, idxs 121
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,rvu,a,b]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1] == xor(a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
dig_arrays:Debug:1. Nesting a[i1] == xor(rvu[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
dig_arrays:Debug:2. Nesting b[i1] == xor(rvu[(i1)_],a[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
0.786535978317

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 12 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=13, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=13)
dig_miscs:Debug:sample_traces: chose |tcs1|=13, |tcs2|=287 (attempted 13/300 tcs)
dig:Info:Compute invs over 13 tcs
dig_miscs:Debug:Create equations from 13 traces
dig_miscs:Debug:Solve 13 (uniq) eqts for 13 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=287)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=12)
dig_miscs:Debug:fun: xor, fvals 48, idxs 144
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,rvu,a,b]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1] == xor(a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
dig_arrays:Debug:1. Nesting a[i1] == xor(rvu[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
dig_arrays:Debug:2. Nesting b[i1] == xor(rvu[(i1)_],a[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
0.891185045242

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 12 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=13, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=13)
dig_miscs:Debug:sample_traces: chose |tcs1|=13, |tcs2|=287 (attempted 13/300 tcs)
dig:Info:Compute invs over 13 tcs
dig_miscs:Debug:Create equations from 13 traces
dig_miscs:Debug:Solve 13 (uniq) eqts for 13 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=287)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=12)
dig_miscs:Debug:fun: xor, fvals 67, idxs 144
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,rvu,a,b]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1] == xor(a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
dig_arrays:Debug:1. Nesting a[i1] == xor(rvu[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
dig_arrays:Debug:2. Nesting b[i1] == xor(rvu[(i1)_],a[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
0.806322097778

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 12 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=13, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=13)
dig_miscs:Debug:sample_traces: chose |tcs1|=13, |tcs2|=287 (attempted 13/300 tcs)
dig:Info:Compute invs over 13 tcs
dig_miscs:Debug:Create equations from 13 traces
dig_miscs:Debug:Solve 13 (uniq) eqts for 13 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=287)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=12)
dig_miscs:Debug:fun: xor, fvals 64, idxs 144
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,rvu,a,b]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1] == xor(a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
dig_arrays:Debug:1. Nesting a[i1] == xor(rvu[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
dig_arrays:Debug:2. Nesting b[i1] == xor(rvu[(i1)_],a[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
0.809952974319

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 12 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=13, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=13)
dig_miscs:Debug:sample_traces: chose |tcs1|=13, |tcs2|=287 (attempted 13/300 tcs)
dig:Info:Compute invs over 13 tcs
dig_miscs:Debug:Create equations from 13 traces
dig_miscs:Debug:Solve 13 (uniq) eqts for 13 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=287)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=12)
dig_miscs:Debug:fun: xor, fvals 58, idxs 144
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,rvu,a,b]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1] == xor(a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
dig_arrays:Debug:1. Nesting a[i1] == xor(rvu[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
dig_arrays:Debug:2. Nesting b[i1] == xor(rvu[(i1)_],a[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
0.806916952133

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 12 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=13, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=13)
dig_miscs:Debug:sample_traces: chose |tcs1|=13, |tcs2|=287 (attempted 13/300 tcs)
dig:Info:Compute invs over 13 tcs
dig_miscs:Debug:Create equations from 13 traces
dig_miscs:Debug:Solve 13 (uniq) eqts for 13 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=287)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=11)
dig_miscs:Debug:fun: xor, fvals 47, idxs 121
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,rvu,a,b]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1] == xor(a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
dig_arrays:Debug:1. Nesting a[i1] == xor(rvu[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
dig_arrays:Debug:2. Nesting b[i1] == xor(rvu[(i1)_],a[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
0.80205321312

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 12 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=13, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=13)
dig_miscs:Debug:sample_traces: chose |tcs1|=13, |tcs2|=287 (attempted 13/300 tcs)
dig:Info:Compute invs over 13 tcs
dig_miscs:Debug:Create equations from 13 traces
dig_miscs:Debug:Solve 13 (uniq) eqts for 13 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=287)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=12)
dig_miscs:Debug:fun: xor, fvals 64, idxs 144
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,rvu,a,b]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1] == xor(a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
dig_arrays:Debug:1. Nesting a[i1] == xor(rvu[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
dig_arrays:Debug:2. Nesting b[i1] == xor(rvu[(i1)_],a[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
0.795124053955

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 12 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=13, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=13)
dig_miscs:Debug:sample_traces: chose |tcs1|=13, |tcs2|=287 (attempted 13/300 tcs)
dig:Info:Compute invs over 13 tcs
dig_miscs:Debug:Create equations from 13 traces
dig_miscs:Debug:Solve 13 (uniq) eqts for 13 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=287)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=11)
dig_miscs:Debug:fun: xor, fvals 44, idxs 121
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,rvu,a,b]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1] == xor(a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
dig_arrays:Debug:1. Nesting a[i1] == xor(rvu[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
dig_arrays:Debug:2. Nesting b[i1] == xor(rvu[(i1)_],a[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
0.800024032593

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 12 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=13, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=13)
dig_miscs:Debug:sample_traces: chose |tcs1|=13, |tcs2|=287 (attempted 13/300 tcs)
dig:Info:Compute invs over 13 tcs
dig_miscs:Debug:Create equations from 13 traces
dig_miscs:Debug:Solve 13 (uniq) eqts for 13 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=287)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=12)
dig_miscs:Debug:fun: xor, fvals 58, idxs 144
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,rvu,a,b]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1] == xor(a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
dig_arrays:Debug:1. Nesting a[i1] == xor(rvu[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
dig_arrays:Debug:2. Nesting b[i1] == xor(rvu[(i1)_],a[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
0.793464183807

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 12 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=13, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=13)
dig_miscs:Debug:sample_traces: chose |tcs1|=13, |tcs2|=287 (attempted 13/300 tcs)
dig:Info:Compute invs over 13 tcs
dig_miscs:Debug:Create equations from 13 traces
dig_miscs:Debug:Solve 13 (uniq) eqts for 13 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=287)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=11)
dig_miscs:Debug:fun: xor, fvals 53, idxs 121
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,rvu,a,b]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1] == xor(a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
dig_arrays:Debug:1. Nesting a[i1] == xor(rvu[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
dig_arrays:Debug:2. Nesting b[i1] == xor(rvu[(i1)_],a[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
0.800210952759

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 12 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=13, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=13)
dig_miscs:Debug:sample_traces: chose |tcs1|=13, |tcs2|=287 (attempted 13/300 tcs)
dig:Info:Compute invs over 13 tcs
dig_miscs:Debug:Create equations from 13 traces
dig_miscs:Debug:Solve 13 (uniq) eqts for 13 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=287)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=12)
dig_miscs:Debug:fun: xor, fvals 67, idxs 144
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,rvu,a,b]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1] == xor(a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
dig_arrays:Debug:1. Nesting a[i1] == xor(rvu[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
dig_arrays:Debug:2. Nesting b[i1] == xor(rvu[(i1)_],a[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
0.914032936096

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 12 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=13, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=13)
dig_miscs:Debug:sample_traces: chose |tcs1|=13, |tcs2|=287 (attempted 13/300 tcs)
dig:Info:Compute invs over 13 tcs
dig_miscs:Debug:Create equations from 13 traces
dig_miscs:Debug:Solve 13 (uniq) eqts for 13 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=287)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=11)
dig_miscs:Debug:fun: xor, fvals 53, idxs 121
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,rvu,a,b]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1] == xor(a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
dig_arrays:Debug:1. Nesting a[i1] == xor(rvu[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
dig_arrays:Debug:2. Nesting b[i1] == xor(rvu[(i1)_],a[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
0.798928022385

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 12 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=13, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=13)
dig_miscs:Debug:sample_traces: chose |tcs1|=13, |tcs2|=287 (attempted 13/300 tcs)
dig:Info:Compute invs over 13 tcs
dig_miscs:Debug:Create equations from 13 traces
dig_miscs:Debug:Solve 13 (uniq) eqts for 13 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=287)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=12)
dig_miscs:Debug:fun: xor, fvals 58, idxs 144
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,rvu,a,b]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1] == xor(a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
dig_arrays:Debug:1. Nesting a[i1] == xor(rvu[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
dig_arrays:Debug:2. Nesting b[i1] == xor(rvu[(i1)_],a[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
0.793958187103

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 12 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=13, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=13)
dig_miscs:Debug:sample_traces: chose |tcs1|=13, |tcs2|=287 (attempted 13/300 tcs)
dig:Info:Compute invs over 13 tcs
dig_miscs:Debug:Create equations from 13 traces
dig_miscs:Debug:Solve 13 (uniq) eqts for 13 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=287)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=12)
dig_miscs:Debug:fun: xor, fvals 67, idxs 144
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,rvu,a,b]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1] == xor(a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
dig_arrays:Debug:1. Nesting a[i1] == xor(rvu[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
dig_arrays:Debug:2. Nesting b[i1] == xor(rvu[(i1)_],a[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
0.796738862991

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 12 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=13, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=13)
dig_miscs:Debug:sample_traces: chose |tcs1|=13, |tcs2|=287 (attempted 13/300 tcs)
dig:Info:Compute invs over 13 tcs
dig_miscs:Debug:Create equations from 13 traces
dig_miscs:Debug:Solve 13 (uniq) eqts for 13 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=287)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=12)
dig_miscs:Debug:fun: xor, fvals 58, idxs 144
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,rvu,a,b]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1] == xor(a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
dig_arrays:Debug:1. Nesting a[i1] == xor(rvu[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
dig_arrays:Debug:2. Nesting b[i1] == xor(rvu[(i1)_],a[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
0.794808864594

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 12 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=13, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=13)
dig_miscs:Debug:sample_traces: chose |tcs1|=13, |tcs2|=287 (attempted 13/300 tcs)
dig:Info:Compute invs over 13 tcs
dig_miscs:Debug:Create equations from 13 traces
dig_miscs:Debug:Solve 13 (uniq) eqts for 13 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=287)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=12)
dig_miscs:Debug:fun: xor, fvals 67, idxs 144
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,rvu,a,b]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1] == xor(a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
dig_arrays:Debug:1. Nesting a[i1] == xor(rvu[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
dig_arrays:Debug:2. Nesting b[i1] == xor(rvu[(i1)_],a[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
0.794307947159

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 12 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=13, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=13)
dig_miscs:Debug:sample_traces: chose |tcs1|=13, |tcs2|=287 (attempted 13/300 tcs)
dig:Info:Compute invs over 13 tcs
dig_miscs:Debug:Create equations from 13 traces
dig_miscs:Debug:Solve 13 (uniq) eqts for 13 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=287)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=11)
dig_miscs:Debug:fun: xor, fvals 48, idxs 121
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,rvu,a,b]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1] == xor(a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
dig_arrays:Debug:1. Nesting a[i1] == xor(rvu[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
dig_arrays:Debug:2. Nesting b[i1] == xor(rvu[(i1)_],a[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
0.799410104752

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 12 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=13, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=13)
dig_miscs:Debug:sample_traces: chose |tcs1|=13, |tcs2|=287 (attempted 13/300 tcs)
dig:Info:Compute invs over 13 tcs
dig_miscs:Debug:Create equations from 13 traces
dig_miscs:Debug:Solve 13 (uniq) eqts for 13 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=287)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=11)
dig_miscs:Debug:fun: xor, fvals 53, idxs 121
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,rvu,a,b]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1] == xor(a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
dig_arrays:Debug:1. Nesting a[i1] == xor(rvu[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
dig_arrays:Debug:2. Nesting b[i1] == xor(rvu[(i1)_],a[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
0.812299013138

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 12 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=13, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=13)
dig_miscs:Debug:sample_traces: chose |tcs1|=13, |tcs2|=287 (attempted 13/300 tcs)
dig:Info:Compute invs over 13 tcs
dig_miscs:Debug:Create equations from 13 traces
dig_miscs:Debug:Solve 13 (uniq) eqts for 13 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=287)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=12)
dig_miscs:Debug:fun: xor, fvals 67, idxs 144
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,rvu,a,b]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1] == xor(a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
dig_arrays:Debug:1. Nesting a[i1] == xor(rvu[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
dig_arrays:Debug:2. Nesting b[i1] == xor(rvu[(i1)_],a[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
0.805762052536

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 12 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=13, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=13)
dig_miscs:Debug:sample_traces: chose |tcs1|=13, |tcs2|=287 (attempted 13/300 tcs)
dig:Info:Compute invs over 13 tcs
dig_miscs:Debug:Create equations from 13 traces
dig_miscs:Debug:Solve 13 (uniq) eqts for 13 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=287)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor]
dig_miscs:Debug:gen_ef_data([xor],|avals|=12)
dig_miscs:Debug:fun: xor, fvals 64, idxs 144
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor,rvu,a,b]: 3 expressions generated
dig_arrays:Info:Apply reachability analysis to 3 nestings to find valid ones
dig_arrays:Debug:0. Nesting rvu[i1] == xor(a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
dig_arrays:Debug:1. Nesting a[i1] == xor(rvu[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
dig_arrays:Debug:2. Nesting b[i1] == xor(rvu[(i1)_],a[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
dig_arrays:Info:Potential rels: 3
dig:Info:Refine 3 invs
refine:Debug:rfilter(|ps|=3, |tcs|=300)
refine:Debug:rfilter (before 3, after 3, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
0.910742998123


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/word_xor.l0.tcs'
Expect (1): r[i] = xor(a[i],b[i])
* Run 0, time 0.786535978317, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 1, time 0.891185045242, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 2, time 0.806322097778, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 3, time 0.809952974319, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 4, time 0.806916952133, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 5, time 0.80205321312, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 6, time 0.795124053955, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 7, time 0.800024032593, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 8, time 0.793464183807, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 9, time 0.800210952759, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 10, time 0.914032936096, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 11, time 0.798928022385, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 12, time 0.793958187103, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 13, time 0.796738862991, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 14, time 0.794808864594, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 15, time 0.794307947159, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 16, time 0.799410104752, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 17, time 0.812299013138, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 18, time 0.805762052536, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 19, time 0.910742998123, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
TIME AVG 0.8 (../invgen/Traces/AES_tosem/multilocs/l0/word_xor.l0.tcs)


***** (25) Generate invs from file 'word_xor_xor.l0.tcs' *****

dig:Info:2013-06-25 02:59:27.582901, Sage Version 5.10, Release Date: 2013-06-17, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 300
1. vs: [a, b, c, rvu]
2. xinfo: 
 0. All: ['a', 'b', 'c', 'rvu']
 1. Assume: []
 2. Const: []
 3. Expect: ['r[i] = xor_xor(a[i],b[i],c[i])']
 4. ExtFun: ['xor_xor']
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../invgen/Traces/AES_tosem/multilocs/l0/word_xor_xor.l0.tcs", |vs|=4, deg=5, |terms|=126

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 16 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=17, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=17)
dig_miscs:Debug:sample_traces: chose |tcs1|=17, |tcs2|=283 (attempted 17/300 tcs)
dig:Info:Compute invs over 17 tcs
dig_miscs:Debug:Create equations from 17 traces
dig_miscs:Debug:Solve 17 (uniq) eqts for 17 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=283)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor_xor]
dig_miscs:Debug:gen_ef_data([xor_xor],|avals|=14)
dig_miscs:Debug:fun: xor_xor, fvals 204, idxs 2744
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor_xor,rvu,a,b,c]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:3. Nesting rvu[i1] == xor_xor(a[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
dig_arrays:Debug:6. Nesting a[i1] == xor_xor(rvu[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
dig_arrays:Debug:8. Nesting b[i1] == xor_xor(rvu[(i1)_],a[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
dig_arrays:Debug:11. Nesting c[i1] == xor_xor(rvu[(i1)_],a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
dig_arrays:Info:Potential rels: 4
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=300)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
1.72280597687

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 16 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=17, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=17)
dig_miscs:Debug:sample_traces: chose |tcs1|=17, |tcs2|=283 (attempted 17/300 tcs)
dig:Info:Compute invs over 17 tcs
dig_miscs:Debug:Create equations from 17 traces
dig_miscs:Debug:Solve 17 (uniq) eqts for 17 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=283)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor_xor]
dig_miscs:Debug:gen_ef_data([xor_xor],|avals|=16)
dig_miscs:Debug:fun: xor_xor, fvals 214, idxs 4096
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor_xor,rvu,a,b,c]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:3. Nesting rvu[i1] == xor_xor(a[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
dig_arrays:Debug:6. Nesting a[i1] == xor_xor(rvu[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
dig_arrays:Debug:8. Nesting b[i1] == xor_xor(rvu[(i1)_],a[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
dig_arrays:Debug:11. Nesting c[i1] == xor_xor(rvu[(i1)_],a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
dig_arrays:Info:Potential rels: 4
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=300)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
1.82688713074

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 16 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=17, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=17)
dig_miscs:Debug:sample_traces: chose |tcs1|=17, |tcs2|=283 (attempted 17/300 tcs)
dig:Info:Compute invs over 17 tcs
dig_miscs:Debug:Create equations from 17 traces
dig_miscs:Debug:Solve 17 (uniq) eqts for 17 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=283)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor_xor]
dig_miscs:Debug:gen_ef_data([xor_xor],|avals|=16)
dig_miscs:Debug:fun: xor_xor, fvals 224, idxs 4096
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor_xor,rvu,a,b,c]: 40 expressions generated
dig_arrays:Info:Apply reachability analysis to 40 nestings to find valid ones
dig_arrays:Debug:3. Nesting rvu[i1] == xor_xor(a[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
dig_arrays:Debug:12. Nesting a[i1] == xor_xor(rvu[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
dig_arrays:Debug:19. Nesting b[i1] == xor_xor(rvu[(i1)_],a[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
dig_arrays:Debug:31. Nesting c[i1] == xor_xor(rvu[(i1)_],a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
dig_arrays:Info:Potential rels: 4
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=300)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
2.19526791573

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 16 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=17, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=17)
dig_miscs:Debug:sample_traces: chose |tcs1|=17, |tcs2|=283 (attempted 17/300 tcs)
dig:Info:Compute invs over 17 tcs
dig_miscs:Debug:Create equations from 17 traces
dig_miscs:Debug:Solve 17 (uniq) eqts for 17 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=283)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor_xor]
dig_miscs:Debug:gen_ef_data([xor_xor],|avals|=16)
dig_miscs:Debug:fun: xor_xor, fvals 196, idxs 4096
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor_xor,rvu,a,b,c]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:3. Nesting rvu[i1] == xor_xor(a[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
dig_arrays:Debug:6. Nesting a[i1] == xor_xor(rvu[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
dig_arrays:Debug:8. Nesting b[i1] == xor_xor(rvu[(i1)_],a[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
dig_arrays:Debug:11. Nesting c[i1] == xor_xor(rvu[(i1)_],a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
dig_arrays:Info:Potential rels: 4
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=300)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
1.75467801094

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 16 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=17, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=17)
dig_miscs:Debug:sample_traces: chose |tcs1|=17, |tcs2|=283 (attempted 17/300 tcs)
dig:Info:Compute invs over 17 tcs
dig_miscs:Debug:Create equations from 17 traces
dig_miscs:Debug:Solve 17 (uniq) eqts for 17 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=283)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor_xor]
dig_miscs:Debug:gen_ef_data([xor_xor],|avals|=16)
dig_miscs:Debug:fun: xor_xor, fvals 196, idxs 4096
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor_xor,rvu,a,b,c]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:3. Nesting rvu[i1] == xor_xor(a[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
dig_arrays:Debug:6. Nesting a[i1] == xor_xor(rvu[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
dig_arrays:Debug:8. Nesting b[i1] == xor_xor(rvu[(i1)_],a[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
dig_arrays:Debug:11. Nesting c[i1] == xor_xor(rvu[(i1)_],a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
dig_arrays:Info:Potential rels: 4
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=300)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
1.83308911324

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 16 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=17, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=17)
dig_miscs:Debug:sample_traces: chose |tcs1|=17, |tcs2|=283 (attempted 17/300 tcs)
dig:Info:Compute invs over 17 tcs
dig_miscs:Debug:Create equations from 17 traces
dig_miscs:Debug:Solve 17 (uniq) eqts for 17 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=283)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor_xor]
dig_miscs:Debug:gen_ef_data([xor_xor],|avals|=16)
dig_miscs:Debug:fun: xor_xor, fvals 208, idxs 4096
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor_xor,rvu,a,b,c]: 74 expressions generated
dig_arrays:Info:Apply reachability analysis to 74 nestings to find valid ones
dig_arrays:Debug:18. Nesting rvu[i1] == xor_xor(a[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
dig_arrays:Debug:35. Nesting a[i1] == xor_xor(rvu[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
dig_arrays:Debug:47. Nesting b[i1] == xor_xor(rvu[(i1)_],a[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
dig_arrays:Debug:65. Nesting c[i1] == xor_xor(rvu[(i1)_],a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
dig_arrays:Info:Potential rels: 4
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=300)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
2.66614603996

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 16 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=17, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=17)
dig_miscs:Debug:sample_traces: chose |tcs1|=17, |tcs2|=283 (attempted 17/300 tcs)
dig:Info:Compute invs over 17 tcs
dig_miscs:Debug:Create equations from 17 traces
dig_miscs:Debug:Solve 17 (uniq) eqts for 17 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=283)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor_xor]
dig_miscs:Debug:gen_ef_data([xor_xor],|avals|=16)
dig_miscs:Debug:fun: xor_xor, fvals 222, idxs 4096
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor_xor,rvu,a,b,c]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:3. Nesting rvu[i1] == xor_xor(a[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
dig_arrays:Debug:6. Nesting a[i1] == xor_xor(rvu[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
dig_arrays:Debug:8. Nesting b[i1] == xor_xor(rvu[(i1)_],a[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
dig_arrays:Debug:11. Nesting c[i1] == xor_xor(rvu[(i1)_],a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
dig_arrays:Info:Potential rels: 4
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=300)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
1.70429992676

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 16 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=17, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=17)
dig_miscs:Debug:sample_traces: chose |tcs1|=17, |tcs2|=283 (attempted 17/300 tcs)
dig:Info:Compute invs over 17 tcs
dig_miscs:Debug:Create equations from 17 traces
dig_miscs:Debug:Solve 17 (uniq) eqts for 17 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=283)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor_xor]
dig_miscs:Debug:gen_ef_data([xor_xor],|avals|=16)
dig_miscs:Debug:fun: xor_xor, fvals 224, idxs 4096
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor_xor,rvu,a,b,c]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:3. Nesting rvu[i1] == xor_xor(a[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
dig_arrays:Debug:6. Nesting a[i1] == xor_xor(rvu[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
dig_arrays:Debug:8. Nesting b[i1] == xor_xor(rvu[(i1)_],a[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
dig_arrays:Debug:11. Nesting c[i1] == xor_xor(rvu[(i1)_],a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
dig_arrays:Info:Potential rels: 4
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=300)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
1.73460912704

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 16 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=17, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=17)
dig_miscs:Debug:sample_traces: chose |tcs1|=17, |tcs2|=283 (attempted 17/300 tcs)
dig:Info:Compute invs over 17 tcs
dig_miscs:Debug:Create equations from 17 traces
dig_miscs:Debug:Solve 17 (uniq) eqts for 17 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=283)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor_xor]
dig_miscs:Debug:gen_ef_data([xor_xor],|avals|=15)
dig_miscs:Debug:fun: xor_xor, fvals 244, idxs 3375
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor_xor,rvu,a,b,c]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:3. Nesting rvu[i1] == xor_xor(a[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
dig_arrays:Debug:6. Nesting a[i1] == xor_xor(rvu[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
dig_arrays:Debug:8. Nesting b[i1] == xor_xor(rvu[(i1)_],a[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
dig_arrays:Debug:11. Nesting c[i1] == xor_xor(rvu[(i1)_],a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
dig_arrays:Info:Potential rels: 4
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=300)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
1.77781915665

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 16 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=17, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=17)
dig_miscs:Debug:sample_traces: chose |tcs1|=17, |tcs2|=283 (attempted 17/300 tcs)
dig:Info:Compute invs over 17 tcs
dig_miscs:Debug:Create equations from 17 traces
dig_miscs:Debug:Solve 17 (uniq) eqts for 17 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=283)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor_xor]
dig_miscs:Debug:gen_ef_data([xor_xor],|avals|=16)
dig_miscs:Debug:fun: xor_xor, fvals 212, idxs 4096
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor_xor,rvu,a,b,c]: 160 expressions generated
dig_arrays:Info:Apply reachability analysis to 160 nestings to find valid ones
dig_arrays:Debug:20. Nesting rvu[i1] == xor_xor(a[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
dig_arrays:Debug:55. Nesting a[i1] == xor_xor(rvu[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
dig_arrays:Debug:107. Nesting b[i1] == xor_xor(rvu[(i1)_],a[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
dig_arrays:Debug:146. Nesting c[i1] == xor_xor(rvu[(i1)_],a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
dig_arrays:Info:Potential rels: 4
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=300)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
3.76222491264

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 16 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=17, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=17)
dig_miscs:Debug:sample_traces: chose |tcs1|=17, |tcs2|=283 (attempted 17/300 tcs)
dig:Info:Compute invs over 17 tcs
dig_miscs:Debug:Create equations from 17 traces
dig_miscs:Debug:Solve 17 (uniq) eqts for 17 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=283)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor_xor]
dig_miscs:Debug:gen_ef_data([xor_xor],|avals|=16)
dig_miscs:Debug:fun: xor_xor, fvals 234, idxs 4096
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor_xor,rvu,a,b,c]: 40 expressions generated
dig_arrays:Info:Apply reachability analysis to 40 nestings to find valid ones
dig_arrays:Debug:9. Nesting rvu[i1] == xor_xor(a[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
dig_arrays:Debug:24. Nesting a[i1] == xor_xor(rvu[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
dig_arrays:Debug:27. Nesting b[i1] == xor_xor(rvu[(i1)_],a[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
dig_arrays:Debug:35. Nesting c[i1] == xor_xor(rvu[(i1)_],a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
dig_arrays:Info:Potential rels: 4
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=300)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
2.13673305511

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 16 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=17, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=17)
dig_miscs:Debug:sample_traces: chose |tcs1|=17, |tcs2|=283 (attempted 17/300 tcs)
dig:Info:Compute invs over 17 tcs
dig_miscs:Debug:Create equations from 17 traces
dig_miscs:Debug:Solve 17 (uniq) eqts for 17 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=283)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor_xor]
dig_miscs:Debug:gen_ef_data([xor_xor],|avals|=16)
dig_miscs:Debug:fun: xor_xor, fvals 212, idxs 4096
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor_xor,rvu,a,b,c]: 160 expressions generated
dig_arrays:Info:Apply reachability analysis to 160 nestings to find valid ones
dig_arrays:Debug:20. Nesting rvu[i1] == xor_xor(a[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
dig_arrays:Debug:55. Nesting a[i1] == xor_xor(rvu[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
dig_arrays:Debug:107. Nesting b[i1] == xor_xor(rvu[(i1)_],a[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
dig_arrays:Debug:146. Nesting c[i1] == xor_xor(rvu[(i1)_],a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
dig_arrays:Info:Potential rels: 4
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=300)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
3.7797100544

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 16 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=17, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=17)
dig_miscs:Debug:sample_traces: chose |tcs1|=17, |tcs2|=283 (attempted 17/300 tcs)
dig:Info:Compute invs over 17 tcs
dig_miscs:Debug:Create equations from 17 traces
dig_miscs:Debug:Solve 17 (uniq) eqts for 17 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=283)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor_xor]
dig_miscs:Debug:gen_ef_data([xor_xor],|avals|=16)
dig_miscs:Debug:fun: xor_xor, fvals 208, idxs 4096
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor_xor,rvu,a,b,c]: 40 expressions generated
dig_arrays:Info:Apply reachability analysis to 40 nestings to find valid ones
dig_arrays:Debug:3. Nesting rvu[i1] == xor_xor(a[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
dig_arrays:Debug:12. Nesting a[i1] == xor_xor(rvu[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
dig_arrays:Debug:19. Nesting b[i1] == xor_xor(rvu[(i1)_],a[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
dig_arrays:Debug:31. Nesting c[i1] == xor_xor(rvu[(i1)_],a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
dig_arrays:Info:Potential rels: 4
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=300)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
2.2625348568

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 16 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=17, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=17)
dig_miscs:Debug:sample_traces: chose |tcs1|=17, |tcs2|=283 (attempted 17/300 tcs)
dig:Info:Compute invs over 17 tcs
dig_miscs:Debug:Create equations from 17 traces
dig_miscs:Debug:Solve 17 (uniq) eqts for 17 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=283)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor_xor]
dig_miscs:Debug:gen_ef_data([xor_xor],|avals|=14)
dig_miscs:Debug:fun: xor_xor, fvals 120, idxs 2744
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor_xor,rvu,a,b,c]: 17 expressions generated
dig_arrays:Info:Apply reachability analysis to 17 nestings to find valid ones
dig_arrays:Debug:14. Nesting c[i1] == xor_xor(rvu[(i1)_],a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
1.22853708267

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 16 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=17, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=17)
dig_miscs:Debug:sample_traces: chose |tcs1|=17, |tcs2|=283 (attempted 17/300 tcs)
dig:Info:Compute invs over 17 tcs
dig_miscs:Debug:Create equations from 17 traces
dig_miscs:Debug:Solve 17 (uniq) eqts for 17 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=283)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor_xor]
dig_miscs:Debug:gen_ef_data([xor_xor],|avals|=15)
dig_miscs:Debug:fun: xor_xor, fvals 196, idxs 3375
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor_xor,rvu,a,b,c]: 18 expressions generated
dig_arrays:Info:Apply reachability analysis to 18 nestings to find valid ones
dig_arrays:Debug:12. Nesting b[i1] == xor_xor(rvu[(i1)_],a[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
1.35636591911

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 16 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=17, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=17)
dig_miscs:Debug:sample_traces: chose |tcs1|=17, |tcs2|=283 (attempted 17/300 tcs)
dig:Info:Compute invs over 17 tcs
dig_miscs:Debug:Create equations from 17 traces
dig_miscs:Debug:Solve 17 (uniq) eqts for 17 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=283)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor_xor]
dig_miscs:Debug:gen_ef_data([xor_xor],|avals|=15)
dig_miscs:Debug:fun: xor_xor, fvals 180, idxs 3375
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor_xor,rvu,a,b,c]: 17 expressions generated
dig_arrays:Info:Apply reachability analysis to 17 nestings to find valid ones
dig_arrays:Debug:14. Nesting c[i1] == xor_xor(rvu[(i1)_],a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
dig_arrays:Info:Potential rels: 1
dig:Info:Refine 1 invs
refine:Debug:rfilter(|ps|=1, |tcs|=300)
refine:Debug:rfilter (before 1, after 1, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
1.32045793533

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 16 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=17, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=17)
dig_miscs:Debug:sample_traces: chose |tcs1|=17, |tcs2|=283 (attempted 17/300 tcs)
dig:Info:Compute invs over 17 tcs
dig_miscs:Debug:Create equations from 17 traces
dig_miscs:Debug:Solve 17 (uniq) eqts for 17 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=283)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor_xor]
dig_miscs:Debug:gen_ef_data([xor_xor],|avals|=16)
dig_miscs:Debug:fun: xor_xor, fvals 114, idxs 4096
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor_xor,rvu,a,b,c]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:3. Nesting rvu[i1] == xor_xor(a[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
dig_arrays:Debug:6. Nesting a[i1] == xor_xor(rvu[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
dig_arrays:Debug:8. Nesting b[i1] == xor_xor(rvu[(i1)_],a[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
dig_arrays:Debug:11. Nesting c[i1] == xor_xor(rvu[(i1)_],a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
dig_arrays:Info:Potential rels: 4
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=300)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
1.91538214684

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 16 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=17, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=17)
dig_miscs:Debug:sample_traces: chose |tcs1|=17, |tcs2|=283 (attempted 17/300 tcs)
dig:Info:Compute invs over 17 tcs
dig_miscs:Debug:Create equations from 17 traces
dig_miscs:Debug:Solve 17 (uniq) eqts for 17 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=283)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor_xor]
dig_miscs:Debug:gen_ef_data([xor_xor],|avals|=16)
dig_miscs:Debug:fun: xor_xor, fvals 234, idxs 4096
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor_xor,rvu,a,b,c]: 40 expressions generated
dig_arrays:Info:Apply reachability analysis to 40 nestings to find valid ones
dig_arrays:Debug:10. Nesting rvu[i1] == xor_xor(a[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
dig_arrays:Debug:25. Nesting a[i1] == xor_xor(rvu[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
dig_arrays:Debug:32. Nesting b[i1] == xor_xor(rvu[(i1)_],a[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
dig_arrays:Debug:37. Nesting c[i1] == xor_xor(rvu[(i1)_],a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
dig_arrays:Info:Potential rels: 4
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=300)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
2.00766205788

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 16 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=17, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=17)
dig_miscs:Debug:sample_traces: chose |tcs1|=17, |tcs2|=283 (attempted 17/300 tcs)
dig:Info:Compute invs over 17 tcs
dig_miscs:Debug:Create equations from 17 traces
dig_miscs:Debug:Solve 17 (uniq) eqts for 17 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=283)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor_xor]
dig_miscs:Debug:gen_ef_data([xor_xor],|avals|=16)
dig_miscs:Debug:fun: xor_xor, fvals 239, idxs 4096
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor_xor,rvu,a,b,c]: 14 expressions generated
dig_arrays:Info:Apply reachability analysis to 14 nestings to find valid ones
dig_arrays:Debug:3. Nesting rvu[i1] == xor_xor(a[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
dig_arrays:Debug:6. Nesting a[i1] == xor_xor(rvu[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
dig_arrays:Debug:8. Nesting b[i1] == xor_xor(rvu[(i1)_],a[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
dig_arrays:Debug:11. Nesting c[i1] == xor_xor(rvu[(i1)_],a[(i1)_],b[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
dig_arrays:Info:Potential rels: 4
dig:Info:Refine 4 invs
refine:Debug:rfilter(|ps|=4, |tcs|=300)
refine:Debug:rfilter (before 4, after 4, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
1.81377291679

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** SimpleArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig:Info:Compute invs over 300 tcs
dig_arrays:Info:Compute new traces (treating array elems as new vars)
dig_arrays:Debug:Find linear eqts over 16 array elems
dig:Info:*** Eqt ***
dig:Debug:|terms|=17, |tcs|=300
dig_arrays:Info:Select traces (note: |tcs|=|terms|=17)
dig_miscs:Debug:sample_traces: chose |tcs1|=17, |tcs2|=283 (attempted 17/300 tcs)
dig:Info:Compute invs over 17 tcs
dig_miscs:Debug:Create equations from 17 traces
dig_miscs:Debug:Solve 17 (uniq) eqts for 17 unknowns
dig:Info:Detected invariants for Eqt:
refine:Debug:rfilter skips (|ps|=0, |tcs|=283)
dig_arrays:Info:Partition 0 eqts into 0 groups
dig_arrays:Warn:No rels found over arr idxs, use orig results
dig:Info:Detected invariants for SimpleArray:
dig:Info:Detected invariants for SimpleArray:
dig:Info:*** NestedArray ***
dig:Debug:|terms|=0, |tcs|=300
dig:Info:Select traces
dig_miscs:Debug:sample_traces: chose |tcs1|=1, |tcs2|=299 (attempted 1/300 tcs)
dig:Info:Compute invs over 1 tcs
dig_arrays:Info:Preprocessing arrays
dig_miscs:Debug:gen_extfuns: 1 ext funs [xor_xor]
dig_miscs:Debug:gen_ef_data([xor_xor],|avals|=15)
dig_miscs:Debug:fun: xor_xor, fvals 222, idxs 3375
dig_arrays:Info:Generate arr exps (nestings)
dig_miscs:Debug:* gen_aexps [xor_xor,rvu,a,b,c]: 29 expressions generated
dig_arrays:Info:Apply reachability analysis to 29 nestings to find valid ones
dig_arrays:Debug:8. Nesting a[i1] == xor_xor(rvu[(i1)_],b[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
dig_arrays:Debug:22. Nesting b[i1] == xor_xor(rvu[(i1)_],a[(i1)_],c[(i1)_]) has 1 rel(s)
dig_arrays:Debug:lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
dig_arrays:Info:Potential rels: 2
dig:Info:Refine 2 invs
refine:Debug:rfilter(|ps|=2, |tcs|=300)
refine:Debug:rfilter (before 2, after 2, diff 0)
dig:Info:Detected invariants for NestedArray:
  0: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  1: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
1.63915491104


SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/word_xor_xor.l0.tcs'
Expect (1): r[i] = xor_xor(a[i],b[i],c[i])
* Run 0, time 1.72280597687, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 1, time 1.82688713074, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 2, time 2.19526791573, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 3, time 1.75467801094, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 4, time 1.83308911324, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 5, time 2.66614603996, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 6, time 1.70429992676, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 7, time 1.73460912704, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 8, time 1.77781915665, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 9, time 3.76222491264, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 10, time 2.13673305511, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 11, time 3.7797100544, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 12, time 2.2625348568, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 13, time 1.22853708267, deg 5
  0: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 14, time 1.35636591911, deg 5
  0: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
* Run 15, time 1.32045793533, deg 5
  0: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 16, time 1.91538214684, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 17, time 2.00766205788, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 18, time 1.81377291679, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 19, time 1.63915491104, deg 5
  0: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  1: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
TIME AVG 2.0 (../invgen/Traces/AES_tosem/multilocs/l0/word_xor_xor.l0.tcs)



***** BENCHMARK SUMMARY (inv_typ "simple_nested")*****




SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/AesDecrypt.l0.tcs'
Expect (0): 
* Run 0, time 75.1799988747, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 1, time 74.8874299526, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 2, time 73.6653800011, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 3, time 73.8546869755, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 4, time 75.1639969349, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 5, time 73.2066400051, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 6, time 73.9284739494, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 7, time 73.476801157, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 8, time 73.8359780312, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 9, time 72.8623478413, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 10, time 74.4903128147, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 11, time 73.5183341503, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 12, time 74.8496179581, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 13, time 73.6764600277, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 14, time 73.3224368095, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 15, time 72.5906260014, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 16, time 73.5306499004, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 17, time 73.426514864, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 18, time 73.8654000759, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
* Run 19, time 73.1738939285, deg 5
  0: lambda st,pt,i1,i2: st[i1][i2] == pt[4*i1 + i2]
  1: ('lambda st, pt, st1, st0: (-st[st0][st1]) + (pt[4*st0 + st1]) == 0', [{'st0': 1, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 1}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}])
TIME AVG 73.8 (../invgen/Traces/AES_tosem/multilocs/l0/AesDecrypt.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/AesEncrypt.l0.tcs'
Expect (0): 
* Run 0, time 73.3974990845, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 1, time 73.2834310532, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 2, time 72.9537599087, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 3, time 72.7853939533, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 4, time 69.6030371189, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 5, time 69.9623310566, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 6, time 69.8858909607, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 7, time 70.1711101532, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 8, time 69.6454951763, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 9, time 69.6032049656, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 10, time 70.0477571487, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 11, time 69.5908510685, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 12, time 70.6196789742, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 13, time 69.3288090229, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 14, time 69.7344450951, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 15, time 69.6394410133, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 16, time 69.5467741489, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 17, time 69.7040200233, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 18, time 69.8254430294, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
* Run 19, time 70.3035180569, deg 5
  0: lambda st,ct,i1,i2: st[i1][i2] == ct[4*i1 + i2]
  1: ('lambda st, ct, st1, st0: (st[st0][st1]) + (-ct[4*st0 + st1]) == 0', [{'st0': 0, 'st1': 2}, {'st0': 1, 'st1': 2}, {'st0': 0, 'st1': 3}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 1, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 1, 'st1': 1}])
TIME AVG 70.5 (../invgen/Traces/AES_tosem/multilocs/l0/AesEncrypt.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/AesKeySetupDec.l0.tcs'
Expect (0): 
* Run 0, time 71.8634109497, deg 7
* Run 1, time 71.9737150669, deg 7
* Run 2, time 73.4237720966, deg 7
* Run 3, time 73.9562060833, deg 7
* Run 4, time 75.8439741135, deg 7
* Run 5, time 73.3763749599, deg 7
* Run 6, time 73.3167250156, deg 7
* Run 7, time 73.9221148491, deg 7
* Run 8, time 73.5400469303, deg 7
* Run 9, time 73.6437759399, deg 7
* Run 10, time 73.097561121, deg 7
* Run 11, time 73.7961220741, deg 7
* Run 12, time 73.5479769707, deg 7
* Run 13, time 74.0010869503, deg 7
* Run 14, time 73.6328141689, deg 7
* Run 15, time 74.425483942, deg 7
* Run 16, time 73.9301869869, deg 7
* Run 17, time 73.9179461002, deg 7
* Run 18, time 73.5732848644, deg 7
* Run 19, time 72.2177228928, deg 7
TIME AVG 73.6 (../invgen/Traces/AES_tosem/multilocs/l0/AesKeySetupDec.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/AesKeySetupEnc.l0.tcs'
Expect (0): 
* Run 0, time 76.2328870296, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 1}, {'rk0': 1, 'rk1': 0}, {'rk0': 2, 'rk1': 0}, {'rk0': 0, 'rk1': 3}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 2}])
* Run 1, time 75.9262139797, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 2, time 75.9082610607, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 3, time 76.2968699932, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 4, time 76.0627989769, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 5, time 76.3348040581, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 6, time 75.9037590027, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 7, time 75.82716012, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 1}, {'rk0': 1, 'rk1': 0}, {'rk0': 2, 'rk1': 0}, {'rk0': 0, 'rk1': 3}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 2}])
* Run 8, time 76.1369252205, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 3}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 1}, {'rk0': 3, 'rk1': 0}, {'rk0': 3, 'rk1': 3}])
* Run 9, time 76.2297008038, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 1}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 1}])
* Run 10, time 76.2869400978, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 11, time 76.8585579395, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 1}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 3}, {'rk0': 1, 'rk1': 1}, {'rk0': 3, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}])
* Run 12, time 76.9289968014, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 13, time 75.7989099026, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 14, time 76.2154951096, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 15, time 76.2407619953, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 16, time 75.8441910744, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 1}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}])
* Run 17, time 76.3772540092, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 3}, {'rk0': 1, 'rk1': 1}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 0}, {'rk0': 1, 'rk1': 3}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 1}])
* Run 18, time 75.8860330582, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 3}, {'rk0': 0, 'rk1': 3}])
* Run 19, time 75.8281311989, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (rk[rk0][rk1]) + (-cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 1}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 1, 'rk1': 2}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 1, 'rk1': 3}, {'rk0': 2, 'rk1': 3}, {'rk0': 2, 'rk1': 0}])
TIME AVG 76.2 (../invgen/Traces/AES_tosem/multilocs/l0/AesKeySetupEnc.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/Block2State.l0.tcs'
Expect (1): r[i][j] + t[4i + j] = 0
* Run 0, time 4.12005519867, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 1, time 4.11720585823, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 2, time 4.1435880661, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 3, time 4.02709913254, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 4, time 4.1887409687, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 5, time 4.08435797691, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 6, time 4.06871700287, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 7, time 4.05228996277, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 8, time 4.11521792412, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 9, time 4.24020504951, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 10, time 4.05156493187, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 11, time 4.12908101082, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 12, time 4.1184720993, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 13, time 4.10118579865, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 14, time 4.20311403275, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 15, time 4.12478494644, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 16, time 4.2553191185, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 17, time 4.10780978203, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 18, time 4.10279989243, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
* Run 19, time 4.22461605072, deg 7
  0: lambda rvu,t,i1,i2: rvu[i1][i2] == t[4*i1 + i2]
  1: ('lambda rvu, t, rvu0, rvu1: (-rvu[rvu0][rvu1]) + (t[4*rvu0 + rvu1]) == 0', [{'rvu1': 1, 'rvu0': 0}, {'rvu1': 0, 'rvu0': 3}, {'rvu1': 1, 'rvu0': 1}, {'rvu1': 1, 'rvu0': 2}, {'rvu1': 2, 'rvu0': 0}, {'rvu1': 1, 'rvu0': 3}, {'rvu1': 2, 'rvu0': 1}, {'rvu1': 2, 'rvu0': 2}, {'rvu1': 3, 'rvu0': 0}, {'rvu1': 2, 'rvu0': 3}, {'rvu1': 3, 'rvu0': 1}, {'rvu1': 0, 'rvu0': 0}, {'rvu1': 3, 'rvu0': 2}, {'rvu1': 0, 'rvu0': 1}, {'rvu1': 3, 'rvu0': 3}, {'rvu1': 0, 'rvu0': 2}])
TIME AVG 4.1 (../invgen/Traces/AES_tosem/multilocs/l0/Block2State.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/InvMixColumns.l0.tcs'
Expect (0): 
* Run 0, time 1.00060105324, deg 7
* Run 1, time 1.01942610741, deg 7
* Run 2, time 1.00659894943, deg 7
* Run 3, time 1.03467702866, deg 7
* Run 4, time 1.09160399437, deg 7
* Run 5, time 1.15849804878, deg 7
* Run 6, time 1.014523983, deg 7
* Run 7, time 1.00915598869, deg 7
* Run 8, time 1.06916809082, deg 7
* Run 9, time 0.995249032974, deg 7
* Run 10, time 1.00085496902, deg 7
* Run 11, time 1.14135503769, deg 7
* Run 12, time 1.01798200607, deg 7
* Run 13, time 1.08429217339, deg 7
* Run 14, time 1.00290894508, deg 7
* Run 15, time 1.01095795631, deg 7
* Run 16, time 1.00026202202, deg 7
* Run 17, time 1.06346178055, deg 7
* Run 18, time 1.10580801964, deg 7
* Run 19, time 0.996315002441, deg 7
TIME AVG 1.0 (../invgen/Traces/AES_tosem/multilocs/l0/InvMixColumns.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/InvShiftRows.l0.tcs'
Expect (1): rvu = [[st[0][0], st[3][1], st[2][2], st[1][3]],[st[1][0], st[0][1], st[3][2], st[2][3]], [st[2][0], st[1][1], st[0][2], st[3][3]], [st[3][0], st[2][1], st[1][2], st[0][3]]];
* Run 0, time 3.63991808891, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 1, time 3.70526409149, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 2, time 3.68392300606, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 3, time 3.56568694115, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 4, time 3.61993312836, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 5, time 3.55467700958, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 6, time 3.59303689003, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 7, time 3.54189109802, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 8, time 3.65876603127, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 9, time 3.6918258667, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 10, time 3.50568604469, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 11, time 3.53982996941, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 12, time 3.60598111153, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 13, time 3.53477096558, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 14, time 3.66001796722, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 15, time 3.75857114792, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 16, time 3.70133113861, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 17, time 3.92523193359, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 18, time 3.68654799461, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
* Run 19, time 3.58647298813, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_0_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_1_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_2_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_1_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_2_1 + st_1_1 == 0
 10: -rvu_3_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_0_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_3_3 + st_0_3 == 0
TIME AVG 3.6 (../invgen/Traces/AES_tosem/multilocs/l0/InvShiftRows.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/InvSubBytes.l0.tcs'
Expect (1): r[i][j] = Si[st[i,j]]
* Run 0, time 3.4567220211, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 1, time 3.26583909988, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 2, time 3.20757913589, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 3, time 3.28444814682, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 4, time 3.27080702782, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 5, time 3.27486300468, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 6, time 3.22577595711, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 7, time 3.34381604195, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 8, time 3.15798401833, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 9, time 3.30915307999, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 10, time 3.16097903252, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 11, time 3.33279418945, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 12, time 3.27354001999, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 13, time 3.3396961689, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 14, time 3.21248316765, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 15, time 3.32143902779, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 16, time 3.18707990646, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 17, time 3.2767739296, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 18, time 3.308989048, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
* Run 19, time 3.24266004562, deg 7
  0: lambda st,S,rvu,i1,i2: st[i1][i2] == S[rvu[i1][i2]]
  1: lambda rvu,Si,st,i1,i2: rvu[i1][i2] == Si[st[i1][i2]]
TIME AVG 3.3 (../invgen/Traces/AES_tosem/multilocs/l0/InvSubBytes.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/KeyScheduleMod1.l0.tcs'
Expect (0): 
* Run 0, time 77.8594021797, deg 7
* Run 1, time 77.6727318764, deg 7
* Run 2, time 77.702726841, deg 7
* Run 3, time 77.6354079247, deg 7
* Run 4, time 79.0991899967, deg 7
* Run 5, time 77.4704151154, deg 7
* Run 6, time 77.8849618435, deg 7
* Run 7, time 78.2207560539, deg 7
* Run 8, time 77.0772941113, deg 7
* Run 9, time 78.9298868179, deg 7
* Run 10, time 77.9997820854, deg 7
* Run 11, time 77.9404358864, deg 7
* Run 12, time 78.3187949657, deg 7
* Run 13, time 77.8767368793, deg 7
* Run 14, time 78.0815341473, deg 7
* Run 15, time 77.660241127, deg 7
* Run 16, time 77.0188140869, deg 7
* Run 17, time 78.0680289268, deg 7
* Run 18, time 78.1166219711, deg 7
* Run 19, time 77.5549788475, deg 7
TIME AVG 77.9 (../invgen/Traces/AES_tosem/multilocs/l0/KeyScheduleMod1.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/KeyScheduleMod2.l0.tcs'
Expect (0): 
* Run 0, time 78.964345932, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 1, time 78.593116045, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 2, time 79.8269250393, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 3, time 80.0249578953, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 4, time 79.3187561035, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 5, time 79.2813959122, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 6, time 79.6221730709, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 7, time 79.6956069469, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 8, time 79.3922140598, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 9, time 79.4245629311, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 10, time 79.6421189308, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 11, time 79.5185980797, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 12, time 79.6379990578, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 13, time 79.0732889175, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 14, time 79.5204119682, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 15, time 79.1259109974, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 16, time 79.4957139492, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 17, time 79.905711174, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 18, time 80.015652895, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
* Run 19, time 79.1910049915, deg 7
  0: ('lambda W, rk, W1, W0: (-W[W0][W1]) + (rk[W0][W1]) == 0', [{'W1': 3, 'W0': 1}, {'W1': 0, 'W0': 1}, {'W1': 1, 'W0': 0}, {'W1': 3, 'W0': 0}, {'W1': 2, 'W0': 2}, {'W1': 2, 'W0': 0}, {'W1': 2, 'W0': 1}, {'W1': 1, 'W0': 3}, {'W1': 0, 'W0': 2}, {'W1': 1, 'W0': 2}, {'W1': 3, 'W0': 2}, {'W1': 2, 'W0': 3}, {'W1': 3, 'W0': 3}, {'W1': 0, 'W0': 0}, {'W1': 0, 'W0': 3}, {'W1': 1, 'W0': 1}])
  1: ('lambda rk, W, rk1, rk0: (rk[rk0][rk1]) + (-W[rk0][rk1]) == 0', [{'rk0': 1, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 0, 'rk1': 1}, {'rk0': 0, 'rk1': 3}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 2}, {'rk0': 1, 'rk1': 2}, {'rk0': 3, 'rk1': 1}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 2, 'rk1': 3}, {'rk0': 3, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}])
TIME AVG 79.5 (../invgen/Traces/AES_tosem/multilocs/l0/KeyScheduleMod2.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/KeySetupDec.l0.tcs'
Expect (0): 
* Run 0, time 74.4807760715, deg 7
* Run 1, time 73.9525871277, deg 7
* Run 2, time 73.0016539097, deg 7
* Run 3, time 72.9407169819, deg 7
* Run 4, time 73.2749118805, deg 7
* Run 5, time 72.7382318974, deg 7
* Run 6, time 73.1051800251, deg 7
* Run 7, time 72.753510952, deg 7
* Run 8, time 72.3143148422, deg 7
* Run 9, time 72.5652649403, deg 7
* Run 10, time 72.8459210396, deg 7
* Run 11, time 74.7512280941, deg 7
* Run 12, time 72.756029129, deg 7
* Run 13, time 72.08689785, deg 7
* Run 14, time 73.1532578468, deg 7
* Run 15, time 72.5578598976, deg 7
* Run 16, time 72.4289240837, deg 7
* Run 17, time 72.6147620678, deg 7
* Run 18, time 72.6491818428, deg 7
* Run 19, time 72.5541467667, deg 7
TIME AVG 73.0 (../invgen/Traces/AES_tosem/multilocs/l0/KeySetupDec.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/KeySetupEnc.l0.tcs'
Expect (0): 
* Run 0, time 76.9655199051, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 1, time 76.6376140118, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 2, time 76.0851089954, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 3, time 76.3917999268, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 4, time 75.9490890503, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 5, time 76.0498960018, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 6, time 76.1243288517, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 7, time 75.7422227859, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 8, time 76.1581261158, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 9, time 77.0780119896, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 10, time 76.2791180611, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 11, time 76.4893109798, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 12, time 76.5060689449, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 13, time 76.325165987, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 14, time 76.4940052032, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 15, time 76.0579741001, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 16, time 76.2474830151, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 17, time 76.0779509544, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 18, time 75.9794690609, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 19, time 76.4062650204, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
TIME AVG 76.3 (../invgen/Traces/AES_tosem/multilocs/l0/KeySetupEnc.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/KeySetupEnc4.l0.tcs'
Expect (1): cipherKey[4i+j] - rk[i][j] = 0 for i=0..3, j=0..3
* Run 0, time 76.0215001106, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 1, time 76.0156180859, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 2, time 76.3934810162, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 3, time 76.2294011116, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 4, time 76.1316709518, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 5, time 76.0634331703, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 6, time 76.4848980904, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 7, time 76.3009560108, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 8, time 76.4515719414, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 9, time 76.4585599899, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 10, time 76.2482202053, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 11, time 76.0979189873, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 12, time 76.2240560055, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 13, time 76.4367930889, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 14, time 76.1449759007, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 15, time 76.6856629848, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 16, time 76.7178142071, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 17, time 76.4269979, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 18, time 77.1649169922, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
* Run 19, time 76.5901710987, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 0, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 3, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 3, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 2, 'rk1': 0}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 1, 'rk1': 2}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}])
TIME AVG 76.4 (../invgen/Traces/AES_tosem/multilocs/l0/KeySetupEnc4.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/KeySetupEnc6.l0.tcs'
Expect (1): cipherKey[4i+j] - rk[i][j] = 0 for i=0..5, j=0..3
* Run 0, time 78.6629579067, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 1, time 78.7365419865, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 2, time 78.80139184, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 3, time 78.4856460094, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 4, time 78.3222589493, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 5, time 78.480342865, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 6, time 78.3926448822, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 7, time 78.7731161118, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 8, time 78.9536259174, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 9, time 78.5399119854, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 10, time 78.5118808746, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 11, time 79.16710186, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 12, time 78.7524859905, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 13, time 78.6395130157, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 14, time 78.6808891296, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 15, time 78.690983057, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 16, time 79.1118309498, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 17, time 79.2346470356, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 18, time 79.2491149902, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 19, time 79.283452034, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
TIME AVG 78.8 (../invgen/Traces/AES_tosem/multilocs/l0/KeySetupEnc6.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/KeySetupEnc8.l0.tcs'
Expect (1): cipherKey[4i+j] - rk[i][j] = 0 for i=0..7, j=0..3
* Run 0, time 78.9134321213, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 1, time 79.275015831, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 2, time 78.9166049957, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 3, time 79.0163710117, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 4, time 79.0931370258, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 5, time 79.2339980602, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 6, time 78.9492740631, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 7, time 79.071048975, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 8, time 78.7287540436, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 9, time 79.3220849037, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 10, time 79.4208371639, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 11, time 79.4708108902, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 12, time 79.2942378521, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 13, time 79.7028291225, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 14, time 79.8578081131, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 15, time 79.7164061069, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 16, time 79.3418650627, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 17, time 79.6773810387, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 18, time 79.7586581707, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
* Run 19, time 79.2491130829, deg 7
  0: ('lambda rk, cipherKey, rk1, rk0: (-rk[rk0][rk1]) + (cipherKey[4*rk0 + rk1]) == 0', [{'rk0': 3, 'rk1': 0}, {'rk0': 1, 'rk1': 1}, {'rk0': 5, 'rk1': 0}, {'rk0': 3, 'rk1': 1}, {'rk0': 4, 'rk1': 2}, {'rk0': 2, 'rk1': 3}, {'rk0': 1, 'rk1': 0}, {'rk0': 4, 'rk1': 3}, {'rk0': 0, 'rk1': 2}, {'rk0': 4, 'rk1': 1}, {'rk0': 2, 'rk1': 2}, {'rk0': 0, 'rk1': 3}, {'rk0': 0, 'rk1': 1}, {'rk0': 4, 'rk1': 0}, {'rk0': 2, 'rk1': 1}, {'rk0': 1, 'rk1': 3}, {'rk0': 0, 'rk1': 0}, {'rk0': 5, 'rk1': 2}, {'rk0': 3, 'rk1': 3}, {'rk0': 2, 'rk1': 0}, {'rk0': 1, 'rk1': 2}, {'rk0': 5, 'rk1': 1}, {'rk0': 3, 'rk1': 2}])
TIME AVG 79.3 (../invgen/Traces/AES_tosem/multilocs/l0/KeySetupEnc8.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/MixColumns.l0.tcs'
Expect (0): 
* Run 0, time 0.993118047714, deg 7
* Run 1, time 1.08420109749, deg 7
* Run 2, time 0.985572099686, deg 7
* Run 3, time 1.10638999939, deg 7
* Run 4, time 1.00101304054, deg 7
* Run 5, time 0.99875497818, deg 7
* Run 6, time 1.08256602287, deg 7
* Run 7, time 0.982975006104, deg 7
* Run 8, time 0.982656955719, deg 7
* Run 9, time 0.985044002533, deg 7
* Run 10, time 0.982859134674, deg 7
* Run 11, time 1.18863296509, deg 7
* Run 12, time 0.983325958252, deg 7
* Run 13, time 0.983329057693, deg 7
* Run 14, time 0.980758905411, deg 7
* Run 15, time 0.980782985687, deg 7
* Run 16, time 1.08224201202, deg 7
* Run 17, time 0.97918009758, deg 7
* Run 18, time 1.09524798393, deg 7
* Run 19, time 0.997184991837, deg 7
TIME AVG 1.0 (../invgen/Traces/AES_tosem/multilocs/l0/MixColumns.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/RotWord.l0.tcs'
Expect (1): rvu = [w[1],w[2],w[3],w[0]]
* Run 0, time 0.553415060043, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 1, time 0.526831865311, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 2, time 0.532904148102, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 3, time 0.537508010864, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 4, time 0.528556108475, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 5, time 0.628170013428, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 6, time 0.527209043503, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 7, time 0.529801130295, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 8, time 0.528623819351, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 9, time 0.528583049774, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 10, time 0.534992933273, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 11, time 0.537663936615, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 12, time 0.536074876785, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 13, time 0.635948181152, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 14, time 0.530045986176, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 15, time 0.531129837036, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 16, time 0.533623218536, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 17, time 0.533048152924, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 18, time 0.538620948792, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
* Run 19, time 0.558553934097, deg 7
  0: -rvu_3 + w_0 == 0
  1: -rvu_0 + w_1 == 0
  2: -rvu_1 + w_2 == 0
  3: -rvu_2 + w_3 == 0
TIME AVG 0.5 (../invgen/Traces/AES_tosem/multilocs/l0/RotWord.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/ShiftRows.l0.tcs'
Expect (1): rvu = [[st[0][0], st[1][1], st[2][2], st[3][3]], [st[1][0], st[2][1], st[3][2], st[0][3]], [st[2][0], st[3][1], st[0][2], st[1][3]], [st[3][0], st[0][1], st[1][2], st[2][3]]]
* Run 0, time 3.63416910172, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 1, time 3.79686808586, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 2, time 3.57235789299, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 3, time 3.58723187447, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 4, time 3.68646502495, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 5, time 3.78927493095, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 6, time 3.57227802277, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 7, time 3.60959219933, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 8, time 3.79617285728, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 9, time 3.60869002342, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 10, time 3.6008849144, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 11, time 3.73043298721, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 12, time 3.6284160614, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 13, time 3.63392710686, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 14, time 3.70806503296, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 15, time 3.69930386543, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 16, time 3.633715868, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 17, time 3.76926517487, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 18, time 3.60584211349, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
* Run 19, time 3.64547681808, deg 7
  0: -rvu_1_2 + st_3_2 == 0
  1: -rvu_2_3 + st_1_3 == 0
  2: -rvu_0_0 + st_0_0 == 0
  3: -rvu_3_3 + st_2_3 == 0
  4: -rvu_1_0 + st_1_0 == 0
  5: -rvu_0_3 + st_3_3 == 0
  6: -rvu_2_0 + st_2_0 == 0
  7: -rvu_3_1 + st_0_1 == 0
  8: -rvu_3_0 + st_3_0 == 0
  9: -rvu_0_1 + st_1_1 == 0
 10: -rvu_1_1 + st_2_1 == 0
 11: -rvu_2_2 + st_0_2 == 0
 12: -rvu_2_1 + st_3_1 == 0
 13: -rvu_3_2 + st_1_2 == 0
 14: -rvu_0_2 + st_2_2 == 0
 15: -rvu_1_3 + st_0_3 == 0
TIME AVG 3.7 (../invgen/Traces/AES_tosem/multilocs/l0/ShiftRows.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/State2Block.l0.tcs'
Expect (1): r[4i+j] - st[i][j] = 0
* Run 0, time 4.35451388359, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 1, time 4.18444800377, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 2, time 4.15435290337, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 3, time 4.2530798912, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 4, time 4.13790607452, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 5, time 4.1314740181, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 6, time 4.36172699928, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 7, time 4.12017989159, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 8, time 4.15290808678, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 9, time 4.17043590546, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 10, time 4.27160191536, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 11, time 4.30934786797, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 12, time 4.15881299973, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 13, time 4.25758314133, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 14, time 4.13572311401, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 15, time 4.13526010513, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 16, time 4.23987793922, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 17, time 4.27931785583, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 18, time 4.15116405487, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
* Run 19, time 4.25945901871, deg 7
  0: lambda st,rvu,i1,i2: st[i1][i2] == rvu[4*i1 + i2]
  1: ('lambda st, rvu, st1, st0: (st[st0][st1]) + (-rvu[4*st0 + st1]) == 0', [{'st0': 3, 'st1': 2}, {'st0': 1, 'st1': 3}, {'st0': 0, 'st1': 0}, {'st0': 2, 'st1': 3}, {'st0': 1, 'st1': 0}, {'st0': 3, 'st1': 3}, {'st0': 2, 'st1': 0}, {'st0': 0, 'st1': 1}, {'st0': 3, 'st1': 0}, {'st0': 1, 'st1': 1}, {'st0': 2, 'st1': 1}, {'st0': 0, 'st1': 2}, {'st0': 3, 'st1': 1}, {'st0': 1, 'st1': 2}, {'st0': 2, 'st1': 2}, {'st0': 0, 'st1': 3}])
TIME AVG 4.2 (../invgen/Traces/AES_tosem/multilocs/l0/State2Block.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/SubBytes.l0.tcs'
Expect (1): r[i][j] = S[st[i,j]]
* Run 0, time 3.19015097618, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 1, time 3.30117893219, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 2, time 3.12255597115, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 3, time 3.15657401085, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 4, time 3.24830293655, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 5, time 3.27678108215, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 6, time 3.11861181259, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 7, time 3.16397404671, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 8, time 3.1343228817, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 9, time 3.25817108154, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 10, time 3.24226593971, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 11, time 3.16175413132, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 12, time 3.15048885345, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 13, time 3.21963095665, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 14, time 3.38894081116, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 15, time 3.21057701111, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 16, time 3.14857602119, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 17, time 3.18918204308, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 18, time 3.17976689339, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
* Run 19, time 3.34491491318, deg 7
  0: lambda rvu,S,st,i1,i2: rvu[i1][i2] == S[st[i1][i2]]
  1: lambda st,Si,rvu,i1,i2: st[i1][i2] == Si[rvu[i1][i2]]
TIME AVG 3.2 (../invgen/Traces/AES_tosem/multilocs/l0/SubBytes.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/SubWord.l0.tcs'
Expect (1): r[i] = S[w[i]]
* Run 0, time 1.35245203972, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 1, time 1.33483695984, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 2, time 1.36091899872, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 3, time 1.33895897865, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 4, time 1.3461561203, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 5, time 1.3325779438, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 6, time 1.43456983566, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 7, time 1.33147192001, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 8, time 1.32293891907, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 9, time 1.34480404854, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 10, time 1.33020305634, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 11, time 1.33388090134, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 12, time 1.34304785728, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 13, time 1.33494305611, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 14, time 1.43491101265, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 15, time 1.34247803688, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 16, time 1.34545516968, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 17, time 1.34647893906, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 18, time 1.33366203308, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
* Run 19, time 1.3427491188, deg 7
  0: lambda rvu,S,w,i1: rvu[i1] == S[w[i1]]
  1: lambda w,Si,rvu,i1: w[i1] == Si[rvu[i1]]
TIME AVG 1.3 (../invgen/Traces/AES_tosem/multilocs/l0/SubWord.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/addroundkey.l0.tcs'
Expect (1): r[i][j]= xor(st[i,j],rk[i,j])
* Run 0, time 3.13473296165, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 1, time 3.19025397301, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 2, time 3.01649904251, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 3, time 2.89352798462, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 4, time 3.10184407234, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
* Run 5, time 3.16486001015, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 6, time 3.58785104752, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 7, time 3.18096899986, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 8, time 3.31460285187, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 9, time 3.07397699356, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  2: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 10, time 3.35038399696, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 11, time 3.01419901848, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  2: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 12, time 3.44258093834, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 13, time 2.74759888649, deg 3
  0: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
* Run 14, time 2.89788389206, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 15, time 3.75985193253, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 16, time 3.38562607765, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 17, time 3.74583220482, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 18, time 3.154266119, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
* Run 19, time 3.37393903732, deg 3
  0: lambda rk0,xor,st,rvu,i1: rk0[i1] == xor(st[0][i1],rvu[0][i1])
  1: lambda rk1,xor,st,rvu,i1: rk1[i1] == xor(st[1][i1],rvu[1][i1])
  2: lambda rk2,xor,st,rvu,i1: rk2[i1] == xor(st[2][i1],rvu[2][i1])
  3: lambda rk3,xor,st,rvu,i1: rk3[i1] == xor(st[3][i1],rvu[3][i1])
TIME AVG 3.2 (../invgen/Traces/AES_tosem/multilocs/l0/addroundkey.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/addroundkey_vn.l0.tcs'
Expect (1): r[i][j]= xor(st[i,j],rk[i,j])
* Run 0, time 3.37351298332, deg 7
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 1, time 3.66851496696, deg 7
  0: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  1: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 2, time 2.68847894669, deg 7
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 3, time 3.1439139843, deg 7
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 4, time 2.91899180412, deg 7
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 5, time 3.69168186188, deg 7
  0: lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
  1: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
* Run 6, time 3.60781693459, deg 7
  0: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  1: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 7, time 3.18621397018, deg 7
  0: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
* Run 8, time 3.66323804855, deg 7
  0: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  1: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 9, time 3.38432693481, deg 7
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 10, time 3.88152503967, deg 7
  0: lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
  1: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  2: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 11, time 3.38495707512, deg 7
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 12, time 3.97144007683, deg 7
  0: lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
  1: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  2: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 13, time 3.13969993591, deg 7
  0: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 14, time 2.57827019691, deg 7
* Run 15, time 3.93466210365, deg 7
  0: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  1: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 16, time 4.05889296532, deg 7
  0: lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
  1: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  2: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 17, time 3.44019412994, deg 7
  0: lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
  1: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
* Run 18, time 3.65379309654, deg 7
  0: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
  1: lambda rvu,xor,st,rk,i1,i2: rvu[i1][i2] == xor(st[i1][i2],rk[i1][i2])
* Run 19, time 3.72101211548, deg 7
  0: lambda st,xor,rk,rvu,i1,i2: st[i1][i2] == xor(rk[i1][i2],rvu[i1][i2])
  1: lambda rk,xor,st,rvu,i1,i2: rk[i1][i2] == xor(st[i1][i2],rvu[i1][i2])
TIME AVG 3.5 (../invgen/Traces/AES_tosem/multilocs/l0/addroundkey_vn.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/mul.l0.tcs'
Expect (1): r[i] = Alogtable(mod255(add(Logtable(a[i]),Logtable(b[i]))))
* Run 0, time 11.0301229954, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 1, time 10.1169178486, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 2, time 11.6976900101, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 3, time 10.441683054, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 4, time 10.7236378193, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 5, time 11.1050169468, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 6, time 12.59146595, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
* Run 7, time 11.0789518356, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 8, time 10.5825099945, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
* Run 9, time 13.3948309422, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
* Run 10, time 10.4729449749, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 11, time 10.5464401245, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 12, time 10.4793901443, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 13, time 11.5222921371, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
* Run 14, time 10.4360728264, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 15, time 10.3254630566, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
* Run 16, time 11.4337620735, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
* Run 17, time 10.434746027, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,b,a,i1: rvu[i1] == Alogtable[mod255(add(Logtable[b[i1]],Logtable[a[i1]]))]
* Run 18, time 10.5821640491, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
* Run 19, time 10.2226221561, deg 7
  0: lambda rvu,Alogtable,mod255,add,Logtable,a,b,i1: rvu[i1] == Alogtable[mod255(add(Logtable[a[i1]],Logtable[b[i1]]))]
TIME AVG 11.0 (../invgen/Traces/AES_tosem/multilocs/l0/mul.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/word_xor.l0.tcs'
Expect (1): r[i] = xor(a[i],b[i])
* Run 0, time 0.786535978317, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 1, time 0.891185045242, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 2, time 0.806322097778, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 3, time 0.809952974319, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 4, time 0.806916952133, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 5, time 0.80205321312, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 6, time 0.795124053955, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 7, time 0.800024032593, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 8, time 0.793464183807, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 9, time 0.800210952759, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 10, time 0.914032936096, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 11, time 0.798928022385, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 12, time 0.793958187103, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 13, time 0.796738862991, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 14, time 0.794808864594, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 15, time 0.794307947159, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 16, time 0.799410104752, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 17, time 0.812299013138, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 18, time 0.805762052536, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
* Run 19, time 0.910742998123, deg 7
  0: lambda rvu,xor,a,b,i1: rvu[i1] == xor(a[i1],b[i1])
  1: lambda a,xor,rvu,b,i1: a[i1] == xor(rvu[i1],b[i1])
  2: lambda b,xor,rvu,a,i1: b[i1] == xor(rvu[i1],a[i1])
TIME AVG 0.8 (../invgen/Traces/AES_tosem/multilocs/l0/word_xor.l0.tcs)



SUMMARY (inv_typ 'simple_nested')
Invariants generated from '../invgen/Traces/AES_tosem/multilocs/l0/word_xor_xor.l0.tcs'
Expect (1): r[i] = xor_xor(a[i],b[i],c[i])
* Run 0, time 1.72280597687, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 1, time 1.82688713074, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 2, time 2.19526791573, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 3, time 1.75467801094, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 4, time 1.83308911324, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 5, time 2.66614603996, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 6, time 1.70429992676, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 7, time 1.73460912704, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 8, time 1.77781915665, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 9, time 3.76222491264, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 10, time 2.13673305511, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 11, time 3.7797100544, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 12, time 2.2625348568, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 13, time 1.22853708267, deg 5
  0: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 14, time 1.35636591911, deg 5
  0: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
* Run 15, time 1.32045793533, deg 5
  0: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 16, time 1.91538214684, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 17, time 2.00766205788, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 18, time 1.81377291679, deg 5
  0: lambda rvu,xor_xor,a,b,c,i1: rvu[i1] == xor_xor(a[i1],b[i1],c[i1])
  1: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  2: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
  3: lambda c,xor_xor,rvu,a,b,i1: c[i1] == xor_xor(rvu[i1],a[i1],b[i1])
* Run 19, time 1.63915491104, deg 5
  0: lambda a,xor_xor,rvu,b,c,i1: a[i1] == xor_xor(rvu[i1],b[i1],c[i1])
  1: lambda b,xor_xor,rvu,a,c,i1: b[i1] == xor_xor(rvu[i1],a[i1],c[i1])
TIME AVG 2.0 (../invgen/Traces/AES_tosem/multilocs/l0/word_xor_xor.l0.tcs)

[0;34msage: [0m



#New results for knuth

sage: _ = benchmark_file('../../git/invgen/Traces/NLA_tosem/multilocs/l0/knuth.l0.tcs',runs=20,use_specific_deg=True);_ = benchmark_file('../../git/invgen/Traces/NLA_tosem/multilocs/l0/knuth.l0.tcs',runs=20,use_specific_deg=False)
dig:Info:2013-09-17 15:57:14.790262, Sage Version 5.11, Release Date: 2013-08-13, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 9863
1. vs: [d, d1, k, nvu, q, rvu, s, t]
2. xinfo: 
 0. All: ['d', 'd1', 'k', 'nvu', 'q', 'rvu', 's', 't']
 1. Assume: []
 2. Const: []
 3. Expect: ['ddq - 4rd + 4kd - 2qd + 8r = 8n']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../../git/invgen/Traces/NLA_tosem/multilocs/l0/knuth.l0.tcs", |vs|=8, deg=3, |terms|=165

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 44 invs
refine:Debug:rfilter(|ps|=44, |tcs|=1000)
refine:Debug:rfilter (before 44, after 1, diff 43)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: -1/4*d^2*q - d*k + 1/2*d*q + d*rvu + 2*nvu - 2*rvu == 0
51.3828539848

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 43 invs
refine:Debug:rfilter(|ps|=43, |tcs|=1000)
refine:Debug:rfilter (before 43, after 3, diff 40)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
53.552850008

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 44 invs
refine:Debug:rfilter(|ps|=44, |tcs|=1000)
refine:Debug:rfilter (before 44, after 2, diff 42)
refine:Debug:rinfer(|ps|=2)
refine:Debug:rinfer (before 2, after 2, diff 0)
dig:Info:Detected invariants for Eqt:
  0: d*k - d1*k - d*t + d1*t == 0
  1: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
53.6669092178

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 38 invs
refine:Debug:rfilter(|ps|=38, |tcs|=1000)
refine:Debug:rfilter (before 38, after 5, diff 33)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 3, diff 2)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
55.6923480034

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 41 invs
refine:Debug:rfilter(|ps|=41, |tcs|=1000)
refine:Debug:rfilter (before 41, after 3, diff 38)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
53.899574995

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 39 invs
refine:Debug:rfilter(|ps|=39, |tcs|=1000)
refine:Debug:rfilter (before 39, after 3, diff 36)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
54.0434648991

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 37 invs
refine:Debug:rfilter(|ps|=37, |tcs|=1000)
refine:Debug:rfilter (before 37, after 9, diff 28)
refine:Debug:rinfer(|ps|=9)
refine:Debug:rinfer (before 9, after 3, diff 6)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
55.138958931

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 45 invs
refine:Debug:rfilter(|ps|=45, |tcs|=1000)
refine:Debug:rfilter (before 45, after 2, diff 43)
refine:Debug:rinfer(|ps|=2)
refine:Debug:rinfer (before 2, after 2, diff 0)
dig:Info:Detected invariants for Eqt:
  0: d*k - d1*k - d*t + d1*t == 0
  1: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
54.7188360691

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 38 invs
refine:Debug:rfilter(|ps|=38, |tcs|=1000)
refine:Debug:rfilter (before 38, after 8, diff 30)
refine:Debug:rinfer(|ps|=8)
refine:Debug:rinfer (before 8, after 3, diff 5)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
56.5476260185

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 41 invs
refine:Debug:rfilter(|ps|=41, |tcs|=1000)
refine:Debug:rfilter (before 41, after 5, diff 36)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 3, diff 2)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
53.215018034

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 3, diff 37)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
54.1823840141

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 41 invs
refine:Debug:rfilter(|ps|=41, |tcs|=1000)
refine:Debug:rfilter (before 41, after 6, diff 35)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 2, diff 4)
dig:Info:Detected invariants for Eqt:
  0: d*k - d1*k - d*t + d1*t == 0
  1: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
52.0223810673

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 43 invs
refine:Debug:rfilter(|ps|=43, |tcs|=1000)
refine:Debug:rfilter (before 43, after 3, diff 40)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
52.4348890781

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 42 invs
refine:Debug:rfilter(|ps|=42, |tcs|=1000)
refine:Debug:rfilter (before 42, after 3, diff 39)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
53.3022320271

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 43 invs
refine:Debug:rfilter(|ps|=43, |tcs|=1000)
refine:Debug:rfilter (before 43, after 3, diff 40)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
53.473845005

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 39 invs
refine:Debug:rfilter(|ps|=39, |tcs|=1000)
refine:Debug:rfilter (before 39, after 5, diff 34)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 3, diff 2)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
55.6579880714

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 41 invs
refine:Debug:rfilter(|ps|=41, |tcs|=1000)
refine:Debug:rfilter (before 41, after 3, diff 38)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
53.1793241501

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 41 invs
refine:Debug:rfilter(|ps|=41, |tcs|=1000)
refine:Debug:rfilter (before 41, after 3, diff 38)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
53.7002108097

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 43 invs
refine:Debug:rfilter(|ps|=43, |tcs|=1000)
refine:Debug:rfilter (before 43, after 3, diff 40)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
52.6947050095

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 44 invs
refine:Debug:rfilter(|ps|=44, |tcs|=1000)
refine:Debug:rfilter (before 44, after 2, diff 42)
refine:Debug:rinfer(|ps|=2)
refine:Debug:rinfer (before 2, after 2, diff 0)
dig:Info:Detected invariants for Eqt:
  0: d*k - d1*k - d*t + d1*t == 0
  1: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
53.1381380558


SUMMARY (inv_typ 'eqt')
Invariants generated from '../../git/invgen/Traces/NLA_tosem/multilocs/l0/knuth.l0.tcs'
Expect (1): ddq - 4rd + 4kd - 2qd + 8r = 8n
* Run 0, time 51.3828539848, deg 3
  0: -1/4*d^2*q - d*k + 1/2*d*q + d*rvu + 2*nvu - 2*rvu == 0
* Run 1, time 53.552850008, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 2, time 53.6669092178, deg 3
  0: d*k - d1*k - d*t + d1*t == 0
  1: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 3, time 55.6923480034, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 4, time 53.899574995, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 5, time 54.0434648991, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 6, time 55.138958931, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 7, time 54.7188360691, deg 3
  0: d*k - d1*k - d*t + d1*t == 0
  1: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 8, time 56.5476260185, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 9, time 53.215018034, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 10, time 54.1823840141, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 11, time 52.0223810673, deg 3
  0: d*k - d1*k - d*t + d1*t == 0
  1: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 12, time 52.4348890781, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 13, time 53.3022320271, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 14, time 53.473845005, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 15, time 55.6579880714, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 16, time 53.1793241501, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 17, time 53.7002108097, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 18, time 52.6947050095, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 19, time 53.1381380558, deg 3
  0: d*k - d1*k - d*t + d1*t == 0
  1: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
TIME AVG 53.8 (../../git/invgen/Traces/NLA_tosem/multilocs/l0/knuth.l0.tcs)

dig:Info:2013-09-17 16:15:11.090422, Sage Version 5.11, Release Date: 2013-08-13, Fermat.local Darwin 10.8.0 x86_64
dig_miscs:Debug:Read Info:
0. |tcs|: 9863
1. vs: [d, d1, k, nvu, q, rvu, s, t]
2. xinfo: 
 0. All: ['d', 'd1', 'k', 'nvu', 'q', 'rvu', 's', 't']
 1. Assume: []
 2. Const: []
 3. Expect: ['ddq - 4rd + 4kd - 2qd + 8r = 8n']
 4. ExtFun: []
 5. ExtVar: []
 6. Global: []
 7. Input: []
 8. Output: []
Degree setting for "../../git/invgen/Traces/NLA_tosem/multilocs/l0/knuth.l0.tcs", |vs|=8, deg=3, |terms|=165

*** Run 0 ***

dig:Debug:Seed: 0
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 44 invs
refine:Debug:rfilter(|ps|=44, |tcs|=1000)
refine:Debug:rfilter (before 44, after 1, diff 43)
refine:Debug:rinfer skips (|ps|=1)
dig:Info:Detected invariants for Eqt:
  0: -1/4*d^2*q - d*k + 1/2*d*q + d*rvu + 2*nvu - 2*rvu == 0
51.3247730732

*** Run 1 ***

dig:Debug:Seed: 1
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 43 invs
refine:Debug:rfilter(|ps|=43, |tcs|=1000)
refine:Debug:rfilter (before 43, after 3, diff 40)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
53.4521589279

*** Run 2 ***

dig:Debug:Seed: 2
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 44 invs
refine:Debug:rfilter(|ps|=44, |tcs|=1000)
refine:Debug:rfilter (before 44, after 2, diff 42)
refine:Debug:rinfer(|ps|=2)
refine:Debug:rinfer (before 2, after 2, diff 0)
dig:Info:Detected invariants for Eqt:
  0: d*k - d1*k - d*t + d1*t == 0
  1: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
53.2503049374

*** Run 3 ***

dig:Debug:Seed: 3
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 38 invs
refine:Debug:rfilter(|ps|=38, |tcs|=1000)
refine:Debug:rfilter (before 38, after 5, diff 33)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 3, diff 2)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
55.7601191998

*** Run 4 ***

dig:Debug:Seed: 4
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 41 invs
refine:Debug:rfilter(|ps|=41, |tcs|=1000)
refine:Debug:rfilter (before 41, after 3, diff 38)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
53.96428895

*** Run 5 ***

dig:Debug:Seed: 5
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 39 invs
refine:Debug:rfilter(|ps|=39, |tcs|=1000)
refine:Debug:rfilter (before 39, after 3, diff 36)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
54.1286380291

*** Run 6 ***

dig:Debug:Seed: 6
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 37 invs
refine:Debug:rfilter(|ps|=37, |tcs|=1000)
refine:Debug:rfilter (before 37, after 9, diff 28)
refine:Debug:rinfer(|ps|=9)
refine:Debug:rinfer (before 9, after 3, diff 6)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
55.2745509148

*** Run 7 ***

dig:Debug:Seed: 7
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 45 invs
refine:Debug:rfilter(|ps|=45, |tcs|=1000)
refine:Debug:rfilter (before 45, after 2, diff 43)
refine:Debug:rinfer(|ps|=2)
refine:Debug:rinfer (before 2, after 2, diff 0)
dig:Info:Detected invariants for Eqt:
  0: d*k - d1*k - d*t + d1*t == 0
  1: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
54.6562759876

*** Run 8 ***

dig:Debug:Seed: 8
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 38 invs
refine:Debug:rfilter(|ps|=38, |tcs|=1000)
refine:Debug:rfilter (before 38, after 8, diff 30)
refine:Debug:rinfer(|ps|=8)
refine:Debug:rinfer (before 8, after 3, diff 5)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
56.7474381924

*** Run 9 ***

dig:Debug:Seed: 9
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 41 invs
refine:Debug:rfilter(|ps|=41, |tcs|=1000)
refine:Debug:rfilter (before 41, after 5, diff 36)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 3, diff 2)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
53.3914830685

*** Run 10 ***

dig:Debug:Seed: 10
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 40 invs
refine:Debug:rfilter(|ps|=40, |tcs|=1000)
refine:Debug:rfilter (before 40, after 3, diff 37)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
54.0004999638

*** Run 11 ***

dig:Debug:Seed: 11
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 41 invs
refine:Debug:rfilter(|ps|=41, |tcs|=1000)
refine:Debug:rfilter (before 41, after 6, diff 35)
refine:Debug:rinfer(|ps|=6)
refine:Debug:rinfer (before 6, after 2, diff 4)
dig:Info:Detected invariants for Eqt:
  0: d*k - d1*k - d*t + d1*t == 0
  1: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
52.236869812

*** Run 12 ***

dig:Debug:Seed: 12
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 43 invs
refine:Debug:rfilter(|ps|=43, |tcs|=1000)
refine:Debug:rfilter (before 43, after 3, diff 40)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
52.4895780087

*** Run 13 ***

dig:Debug:Seed: 13
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 42 invs
refine:Debug:rfilter(|ps|=42, |tcs|=1000)
refine:Debug:rfilter (before 42, after 3, diff 39)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
53.3520641327

*** Run 14 ***

dig:Debug:Seed: 14
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 43 invs
refine:Debug:rfilter(|ps|=43, |tcs|=1000)
refine:Debug:rfilter (before 43, after 3, diff 40)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
53.3028869629

*** Run 15 ***

dig:Debug:Seed: 15
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 39 invs
refine:Debug:rfilter(|ps|=39, |tcs|=1000)
refine:Debug:rfilter (before 39, after 5, diff 34)
refine:Debug:rinfer(|ps|=5)
refine:Debug:rinfer (before 5, after 3, diff 2)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
55.4461569786

*** Run 16 ***

dig:Debug:Seed: 16
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 41 invs
refine:Debug:rfilter(|ps|=41, |tcs|=1000)
refine:Debug:rfilter (before 41, after 3, diff 38)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
53.1948201656

*** Run 17 ***

dig:Debug:Seed: 17
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 41 invs
refine:Debug:rfilter(|ps|=41, |tcs|=1000)
refine:Debug:rfilter (before 41, after 3, diff 38)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
53.6832540035

*** Run 18 ***

dig:Debug:Seed: 18
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 43 invs
refine:Debug:rfilter(|ps|=43, |tcs|=1000)
refine:Debug:rfilter (before 43, after 3, diff 40)
refine:Debug:rinfer(|ps|=3)
refine:Debug:rinfer (before 3, after 3, diff 0)
dig:Info:Detected invariants for Eqt:
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
52.8682510853

*** Run 19 ***

dig:Debug:Seed: 19
dig:Info:*** Eqt ***
dig:Debug:|terms|=165, |tcs|=9863
dig:Info:Select traces
dig_miscs:Warn:set tcs2 to 1000
dig_miscs:Debug:sample_traces: chose |tcs1|=248, |tcs2|=1000 (attempted 248/9863 tcs)
dig:Info:Compute invs over 248 tcs
dig_miscs:Debug:Create equations from 248 traces
dig_miscs:Debug:Solve 248 (uniq) eqts for 165 unknowns
dig:Info:Refine 44 invs
refine:Debug:rfilter(|ps|=44, |tcs|=1000)
refine:Debug:rfilter (before 44, after 2, diff 42)
refine:Debug:rinfer(|ps|=2)
refine:Debug:rinfer (before 2, after 2, diff 0)
dig:Info:Detected invariants for Eqt:
  0: d*k - d1*k - d*t + d1*t == 0
  1: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
53.227668047


SUMMARY (inv_typ 'eqt')
Invariants generated from '../../git/invgen/Traces/NLA_tosem/multilocs/l0/knuth.l0.tcs'
Expect (1): ddq - 4rd + 4kd - 2qd + 8r = 8n
* Run 0, time 51.3247730732, deg 3
  0: -1/4*d^2*q - d*k + 1/2*d*q + d*rvu + 2*nvu - 2*rvu == 0
* Run 1, time 53.4521589279, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 2, time 53.2503049374, deg 3
  0: d*k - d1*k - d*t + d1*t == 0
  1: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 3, time 55.7601191998, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 4, time 53.96428895, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 5, time 54.1286380291, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 6, time 55.2745509148, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 7, time 54.6562759876, deg 3
  0: d*k - d1*k - d*t + d1*t == 0
  1: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 8, time 56.7474381924, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 9, time 53.3914830685, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 10, time 54.0004999638, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 11, time 52.236869812, deg 3
  0: d*k - d1*k - d*t + d1*t == 0
  1: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 12, time 52.4895780087, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 13, time 53.3520641327, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 14, time 53.3028869629, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 15, time 55.4461569786, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 16, time 53.1948201656, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 17, time 53.6832540035, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 18, time 52.8682510853, deg 3
  0: k*t - t^2 == 0
  1: d*k - d1*k - d*t + d1*t == 0
  2: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
* Run 19, time 53.227668047, deg 3
  0: d*k - d1*k - d*t + d1*t == 0
  1: d^2*q + 4*d1*k - 2*d*q - 4*d*rvu + 4*d*t - 4*d1*t - 8*nvu + 8*rvu == 0
TIME AVG 53.8 (../../git/invgen/Traces/NLA_tosem/multilocs/l0/knuth.l0.tcs)

sage: 

