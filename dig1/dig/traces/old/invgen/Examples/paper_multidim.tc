#sage: nn = 5; B =  [randint(-100,100) for _ in srange(nn)];  A = [7*B[2*i]+3*i for i in srange(3)]; print str(A), str(B)
A B

[-546, -641, 34] [-78, 3, -92, -34, 4]

[-448, -585, 118] [-64, 40, -84, 78, 16]

[539, -487, 517] [77, 55, -70, 74, 73]

[-7, -18, 482] [-1, 51, -3, -19, 68]

[-119, 192, 216] [-17, 80, 27, 32, 30]

[-273, 591, 699] [-39, 13, 84, 56, 99]

[133, -333, -323] [19, 96, -48, -80, -47]


[-168, 157, 643] [-24, 8, 22, -61, 91]

[-84, -18, 300] [-12, -60, -3, -16, 42]


#[-406, -613, 671] [-58, 61, -88, 22, 95]

#[567, 619, 447] [81, 55, 88, -66, 63]

#[427, -557, -134] [61, 67, -80, 38, -20]

#[-616, -431, 475] [-88, 86, -62, 11, 67]



#MYRESULTS
sage: ig = IG('invs/tcs2/paper_multidim.tc',seed=0,verbose=1); ig.go_array(inv_type='multidim')
Mon Aug 29 15:22:19 2011
* readFile(filename=invs/tcs2/paper_multidim.tc)
reading file 'invs/tcs2/paper_multidim.tc'
I: 9 tcs read
Time elapsed: 0.0082 s (function readFile)
0. |data|: 9
1. filename: invs/tcs2/paper_multidim.tc
2. sample_p: 150
3. seed: 0
4. verbose: 1
5. vs: [A, B]
6. xinfo: 
 0. All: ['A', 'B']
 1. Assume: []
 2. Const: []
 3. ExtFun: []
 4. Global: []
 5. Input: []
 6. Output: []
sampleTraces: chose |tcs|=9, |tcs_|=0 (attempted 14/9 tcs)
Time elapsed: 0.0000 s (function sampleTraces)
* ARRAY (MULTIDIM) SOLVER INITIALIZED. |tcs|=9, |tcs_|=0
Creating new vars for array elements
* EQT SOLVER INITIALIZED. |terms|=9, |tcs|=9, |tcs_|=9
Creating equations from 9 data
* EQ: Solving 9 (uniq) eqts for 9 unknowns coeffs
Time elapsed: 0.0310 s (function mysolve)
RESULTS (Eqts): 3
  0: A_1 - 7*B_2 - 3 == 0
  1: A_2 - 7*B_4 - 6 == 0
  2: -1/7*A_0 + B_0 == 0
RESULTS (Eqts): 3
  0: A_1 - 7*B_2 - 3 == 0
  1: A_2 - 7*B_4 - 6 == 0
  2: -A_0 + 7*B_0 == 0
Found 3 relationships among array elements
-> filterPSWithDupArrs. |ps|=3, |ps_|=3
-> a_solve: Assuming array 'A' contains independent indices
-> solving 'B' for dependent indices with |tcs|=3
-> a_solve: Assuming array 'A' contains independent indices
-> solving 'COEF' for dependent indices with |tcs|=3
-> a_solve: Assuming array 'B' contains independent indices
-> solving 'A' for dependent indices with |tcs|=3
-> a_solve: Assuming array 'B' contains independent indices
-> solving 'COEF' for dependent indices with |tcs|=3
Refine multidim array invs: TODO 
RESULTS (Arrays): 2
{'A': [{'B': {B_i_0: 2*A_i_0, B_coef: -7}}, {'COEF': {COEF_coef: -3*A_i_0}}], 'B': [{'A': {A_i_0: 1/2*B_i_0, A_coef: 1}}, {'COEF': {COEF_coef: -3/2*B_i_0}}]}
Time elapsed: 0.1153 s (function solve_array)
